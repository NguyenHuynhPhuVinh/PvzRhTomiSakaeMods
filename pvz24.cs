// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssBagMenu
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000368")]
public class AbyssBagMenu : BaseMenu
{
	[Token(Token = "0x4000BE5")]
	[FieldOffset(Offset = "0x30")]
	public Transform buffIconHead;

	[Token(Token = "0x4000BE6")]
	[FieldOffset(Offset = "0x38")]
	public GameObject buffIconPrefab;

	[Token(Token = "0x4000BE7")]
	[FieldOffset(Offset = "0x0")]
	public static AbyssBagMenu Instance;

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x3E1020", Offset = "0x3DFC20", VA = "0x1803E1020", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x3E1090", Offset = "0x3DFC90", VA = "0x1803E1090")]
	public void UpdateIcons()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssBagMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssBuff
using Il2CppDummyDll;

[Token(Token = "0x2000049")]
public enum AbyssBuff
{
	[Token(Token = "0x4000173")]
	强力打击,
	[Token(Token = "0x4000174")]
	光合作用,
	[Token(Token = "0x4000175")]
	精准打击,
	[Token(Token = "0x4000176")]
	致命暴击,
	[Token(Token = "0x4000177")]
	极速连射,
	[Token(Token = "0x4000178")]
	狂战士I,
	[Token(Token = "0x4000179")]
	狂战士II,
	[Token(Token = "0x400017A")]
	极速战备,
	[Token(Token = "0x400017B")]
	全息制冷,
	[Token(Token = "0x400017C")]
	精打细算,
	[Token(Token = "0x400017D")]
	整装待发,
	[Token(Token = "0x400017E")]
	再生之力,
	[Token(Token = "0x400017F")]
	超级之力,
	[Token(Token = "0x4000180")]
	究极之力,
	[Token(Token = "0x4000181")]
	合理密植,
	[Token(Token = "0x4000182")]
	生命宝石,
	[Token(Token = "0x4000183")]
	速度宝石,
	[Token(Token = "0x4000184")]
	力量宝石I,
	[Token(Token = "0x4000185")]
	力量宝石II,
	[Token(Token = "0x4000186")]
	合理投资,
	[Token(Token = "0x4000187")]
	零元购,
	[Token(Token = "0x4000188")]
	锤锤乐,
	[Token(Token = "0x4000189")]
	无限火力,
	[Token(Token = "0x400018A")]
	残暴之力,
	[Token(Token = "0x400018B")]
	生生不息,
	[Token(Token = "0x400018C")]
	高级投资,
	[Token(Token = "0x400018D")]
	力量宝石III,
	[Token(Token = "0x400018E")]
	阳光宝石,
	[Token(Token = "0x400018F")]
	高级密植,
	[Token(Token = "0x4000190")]
	高级战备
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssBuffButton
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000369")]
public class AbyssBuffButton : AbyssButton
{
	[Token(Token = "0x4000BE8")]
	[FieldOffset(Offset = "0x60")]
	public AbyssBuff theBuffType;

	[Token(Token = "0x4000BE9")]
	[FieldOffset(Offset = "0x64")]
	public int cost;

	[Token(Token = "0x4000BEA")]
	[FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI description;

	[Token(Token = "0x4000BEB")]
	[FieldOffset(Offset = "0x70")]
	public bool sold;

	[Token(Token = "0x4000BEC")]
	[FieldOffset(Offset = "0x74")]
	public int index;

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x3E1710", Offset = "0x3E0310", VA = "0x1803E1710")]
	public void SetType(AbyssBuff theBuffType, bool sold)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x3E16B0", Offset = "0x3E02B0", VA = "0x1803E16B0")]
	public void SetSold()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AbyssBuffButton()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssBuffIcon
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000045")]
public class AbyssBuffIcon : AbyssButton
{
	[Token(Token = "0x4000131")]
	[FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI count;

	[Token(Token = "0x4000132")]
	[FieldOffset(Offset = "0x68")]
	public AbyssBuff theBuffType;

	[Token(Token = "0x4000133")]
	[FieldOffset(Offset = "0x70")]
	public GameObject descriptionHead;

	[Token(Token = "0x4000134")]
	[FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI description;

	[Token(Token = "0x4000135")]
	[FieldOffset(Offset = "0x80")]
	public Image icon;

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x418440", Offset = "0x417040", VA = "0x180418440", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x4182C0", Offset = "0x416EC0", VA = "0x1804182C0")]
	private void SetIconSprite()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x418000", Offset = "0x416C00", VA = "0x180418000", Slot = "5")]
	protected override void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x418030", Offset = "0x416C30", VA = "0x180418030", Slot = "6")]
	protected override void OnMouseExit()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x418060", Offset = "0x416C60", VA = "0x180418060", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public AbyssBuffIcon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssButton
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

[Token(Token = "0x200036A")]
public class AbyssButton : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[FieldOffset(Offset = "0x20")]
	public UnityEvent clickEvent;

	[Token(Token = "0x4000BEE")]
	[FieldOffset(Offset = "0x28")]
	public Sprite highLightSprite;

	[Token(Token = "0x4000BEF")]
	[FieldOffset(Offset = "0x30")]
	public Image image;

	[Token(Token = "0x4000BF0")]
	[FieldOffset(Offset = "0x38")]
	public ButtonSoundType buttonSoundType;

	[Token(Token = "0x4000BF1")]
	[FieldOffset(Offset = "0x40")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000BF2")]
	[FieldOffset(Offset = "0x48")]
	private Sprite originSprite;

	[Token(Token = "0x4000BF3")]
	[FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x3E1BC0", Offset = "0x3E07C0", VA = "0x1803E1BC0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x3E1AE0", Offset = "0x3E06E0", VA = "0x1803E1AE0", Slot = "5")]
	protected virtual void OnMouseEnter()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x3E1B10", Offset = "0x3E0710", VA = "0x1803E1B10", Slot = "6")]
	protected virtual void OnMouseExit()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x3E1A10", Offset = "0x3E0610", VA = "0x1803E1A10")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x3E1B70", Offset = "0x3E0770", VA = "0x1803E1B70", Slot = "7")]
	protected virtual void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AbyssButton()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssCheckInBag
using Il2CppDummyDll;

[Token(Token = "0x200036B")]
public class AbyssCheckInBag : BaseMenu
{
	[Token(Token = "0x4000BF4")]
	[FieldOffset(Offset = "0x30")]
	public AbyssBuffIcon icon;

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x3E1E20", Offset = "0x3E0A20", VA = "0x1803E1E20")]
	public void SellIcon()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x3E1CD0", Offset = "0x3E08D0", VA = "0x1803E1CD0")]
	public void MoveFromBag()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssCheckInBag()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssCheckResetMenu
using Il2CppDummyDll;

[Token(Token = "0x200036C")]
public class AbyssCheckResetMenu : BaseMenu
{
	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x3E1F00", Offset = "0x3E0B00", VA = "0x1803E1F00")]
	public void Check()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssCheckResetMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssCheckSellMenu
using Il2CppDummyDll;

[Token(Token = "0x200036D")]
public class AbyssCheckSellMenu : BaseMenu
{
	[Token(Token = "0x4000BF5")]
	[FieldOffset(Offset = "0x30")]
	public AbyssBuffIcon icon;

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x3E2370", Offset = "0x3E0F70", VA = "0x1803E2370")]
	public void SellIcon()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x3E2250", Offset = "0x3E0E50", VA = "0x1803E2250")]
	public void MoveInBag()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssCheckSellMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200035F")]
public class AbyssData
{
	[Token(Token = "0x4000BBD")]
	[FieldOffset(Offset = "0x10")]
	public AbyssBuff theBuffType;

	[Token(Token = "0x4000BBE")]
	[FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public AbyssData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssDevelopCard
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200036E")]
public class AbyssDevelopCard : MonoBehaviour
{
	[Token(Token = "0x4000BF6")]
	[FieldOffset(Offset = "0x20")]
	public PlantType thePlantType;

	[Token(Token = "0x4000BF7")]
	[FieldOffset(Offset = "0x28")]
	public Image plantIcon;

	[Token(Token = "0x4000BF8")]
	[FieldOffset(Offset = "0x30")]
	public RectTransform rect;

	[Token(Token = "0x4000BF9")]
	[FieldOffset(Offset = "0x38")]
	public Image bank;

	[Token(Token = "0x4000BFA")]
	[FieldOffset(Offset = "0x40")]
	public AbyssDevelopMenu menu;

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x3E2830", Offset = "0x3E1430", VA = "0x1803E2830")]
	private void Start()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x3E2530", Offset = "0x3E1130", VA = "0x1803E2530")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x3E25E0", Offset = "0x3E11E0", VA = "0x1803E25E0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x3E2490", Offset = "0x3E1090", VA = "0x1803E2490")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x3E2660", Offset = "0x3E1260", VA = "0x1803E2660")]
	public void SetImage()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AbyssDevelopCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssDevelopMenu
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x200036F")]
public class AbyssDevelopMenu : BaseMenu
{
	[Token(Token = "0x4000BFB")]
	[FieldOffset(Offset = "0x30")]
	public Transform pageHead;

	[Token(Token = "0x4000BFC")]
	[FieldOffset(Offset = "0x38")]
	public GameObject cardPrefab;

	[Token(Token = "0x4000BFD")]
	[FieldOffset(Offset = "0x40")]
	public PlantType selectedType;

	[Token(Token = "0x4000BFE")]
	[FieldOffset(Offset = "0x48")]
	public AbyssDevelopCard showPlant;

	[Token(Token = "0x4000BFF")]
	[FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI upgradeTextInfo;

	[Token(Token = "0x4000C00")]
	[FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI currentMoney;

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x3E2840", Offset = "0x3E1440", VA = "0x1803E2840", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x3E3090", Offset = "0x3E1C90", VA = "0x1803E3090")]
	private void UpdateInfo()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x3E33F0", Offset = "0x3E1FF0", VA = "0x1803E33F0")]
	public void UpgradePlant()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x3E2F30", Offset = "0x3E1B30", VA = "0x1803E2F30")]
	private bool TryGetUpgradeCost(PlantType thePlantType, out int cost, out int currentLevel, out int arrivedLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x3E2EF0", Offset = "0x3E1AF0", VA = "0x1803E2EF0")]
	public void SetType(PlantType thePlantType)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x3E2910", Offset = "0x3E1510", VA = "0x1803E2910")]
	private void InitCards()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x3E2CF0", Offset = "0x3E18F0", VA = "0x1803E2CF0")]
	public void LastPage()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x3E2DF0", Offset = "0x3E19F0", VA = "0x1803E2DF0")]
	public void NextPage()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssDevelopMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssHardMode
using Il2CppDummyDll;

[Token(Token = "0x200004A")]
public enum AbyssHardMode
{
	[Token(Token = "0x4000192")]
	Default,
	[Token(Token = "0x4000193")]
	Hard,
	[Token(Token = "0x4000194")]
	Extreme
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssLevelEnter
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000370")]
public class AbyssLevelEnter : AbyssButton
{
	[Token(Token = "0x4000C01")]
	[FieldOffset(Offset = "0x60")]
	public AbyssMenu abyssMenu;

	[Token(Token = "0x4000C02")]
	[FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI levelName;

	[Token(Token = "0x4000C03")]
	[FieldOffset(Offset = "0x70")]
	public int level;

	[Token(Token = "0x4000C04")]
	[FieldOffset(Offset = "0x74")]
	public bool available;

	[Token(Token = "0x4000C05")]
	[FieldOffset(Offset = "0x78")]
	public Image background;

	[Token(Token = "0x4000C06")]
	[FieldOffset(Offset = "0x80")]
	public GameObject arrow;

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x3E3610", Offset = "0x3E2210", VA = "0x1803E3610")]
	public void SetLevel(int level, AbyssMenu abyssMenu)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AbyssLevelEnter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssManager
using System;
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000046")]
public class AbyssManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000047")]
	private class Timer
	{
		[Token(Token = "0x400016C")]
		[FieldOffset(Offset = "0x10")]
		public float Interval;

		[Token(Token = "0x400016D")]
		[FieldOffset(Offset = "0x14")]
		public float RemainingTime;

		[Token(Token = "0x400016E")]
		[FieldOffset(Offset = "0x18")]
		public Action<Board> Action;

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x42FD00", Offset = "0x42E900", VA = "0x18042FD00")]
		public Timer(float interval, Action<Board> action, bool startImmediately)
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x42FCB0", Offset = "0x42E8B0", VA = "0x18042FCB0")]
		public void Update(Board board, float deltaTime)
		{
		}
	}

	[Token(Token = "0x4000136")]
	[FieldOffset(Offset = "0x0")]
	private static AbyssManager _instance;

	[Token(Token = "0x4000137")]
	[FieldOffset(Offset = "0x20")]
	public int currentBuffCount;

	[Token(Token = "0x4000138")]
	[FieldOffset(Offset = "0x24")]
	public float damage;

	[Token(Token = "0x4000139")]
	[FieldOffset(Offset = "0x28")]
	public float stealHealth;

	[Token(Token = "0x400013A")]
	[FieldOffset(Offset = "0x2C")]
	public float strikeRate;

	[Token(Token = "0x400013B")]
	[FieldOffset(Offset = "0x30")]
	public float strikeDmg;

	[Token(Token = "0x400013C")]
	[FieldOffset(Offset = "0x34")]
	public float attackSpeed;

	[Token(Token = "0x400013D")]
	[FieldOffset(Offset = "0x38")]
	public float gloveSpeed;

	[Token(Token = "0x400013E")]
	[FieldOffset(Offset = "0x3C")]
	public float cardSpeed;

	[Token(Token = "0x400013F")]
	[FieldOffset(Offset = "0x40")]
	public int recoverCount;

	[Token(Token = "0x4000140")]
	[FieldOffset(Offset = "0x44")]
	public float moreHealth;

	[Token(Token = "0x4000141")]
	[FieldOffset(Offset = "0x48")]
	public int superPlantCount;

	[Token(Token = "0x4000142")]
	[FieldOffset(Offset = "0x4C")]
	public int ultiPlantCount;

	[Token(Token = "0x4000143")]
	[FieldOffset(Offset = "0x50")]
	public int maxPlantCount;

	[Token(Token = "0x4000144")]
	[FieldOffset(Offset = "0x54")]
	public int extraSun;

	[Token(Token = "0x4000145")]
	[FieldOffset(Offset = "0x58")]
	public int cardLessCost;

	[Token(Token = "0x4000146")]
	[FieldOffset(Offset = "0x5C")]
	public float damage_lostHealth;

	[Token(Token = "0x4000147")]
	[FieldOffset(Offset = "0x60")]
	public float defence_loseHealth;

	[Token(Token = "0x4000148")]
	[FieldOffset(Offset = "0x64")]
	public float hammerSpeed;

	[Token(Token = "0x4000149")]
	[FieldOffset(Offset = "0x68")]
	public int money;

	[Token(Token = "0x400014A")]
	[FieldOffset(Offset = "0x6C")]
	public int refreshCount;

	[Token(Token = "0x400014B")]
	[FieldOffset(Offset = "0x70")]
	public Dictionary<AbyssBuff, int> currentBuffs;

	[Token(Token = "0x400014C")]
	[FieldOffset(Offset = "0x78")]
	public Dictionary<AbyssBuff, int> currentBuffInBag;

	[Token(Token = "0x400014D")]
	[FieldOffset(Offset = "0x80")]
	public Dictionary<PlantType, int> plantLevels;

	[Token(Token = "0x400014E")]
	[FieldOffset(Offset = "0x88")]
	public AbyssStatistic abyssStatistic;

	[Token(Token = "0x400014F")]
	[FieldOffset(Offset = "0x98")]
	public List<AbyssBuff> buffs;

	[Token(Token = "0x4000150")]
	[FieldOffset(Offset = "0xA0")]
	public bool[] buffsSold;

	[Token(Token = "0x4000151")]
	[FieldOffset(Offset = "0xA8")]
	public AbyssHardMode hardMode;

	[Token(Token = "0x4000152")]
	[FieldOffset(Offset = "0x8")]
	public static Dictionary<AbyssBuff, (string, int)> abyssBuffDescription;

	[Token(Token = "0x4000153")]
	private const float const_damage = 0.25f;

	[Token(Token = "0x4000154")]
	private const float const_attackSpeed = 0.25f;

	[Token(Token = "0x4000155")]
	private const float const_moreHealth = 0.3f;

	[Token(Token = "0x4000156")]
	private const int const_recoverPer15s = 300;

	[Token(Token = "0x4000157")]
	private const float const_strikeRate = 0.1f;

	[Token(Token = "0x4000158")]
	private const float const_strikeDmg = 0.7f;

	[Token(Token = "0x4000159")]
	private const float const_damage_lostHealth = 0.3f;

	[Token(Token = "0x400015A")]
	private const float const_defence_lostHealth = 0.08f;

	[Token(Token = "0x400015B")]
	private const float const_gloveSpeed = 0.3f;

	[Token(Token = "0x400015C")]
	private const float const_hammerSpeed = 0.3f;

	[Token(Token = "0x400015D")]
	private const float const_cardSpeed = 0.3f;

	[Token(Token = "0x400015E")]
	private const int const_cardLessCost = 10;

	[Token(Token = "0x400015F")]
	private const int const_extraStartSun = 150;

	[Token(Token = "0x4000160")]
	private const int const_moreSuperPlant = 5;

	[Token(Token = "0x4000161")]
	private const int const_moreUltiPlant = 1;

	[Token(Token = "0x4000162")]
	private const int const_morePlantCount = 10;

	[Token(Token = "0x4000163")]
	private const int const_healthGemCost = 150;

	[Token(Token = "0x4000164")]
	private const float const_speedGemCost = 0.125f;

	[Token(Token = "0x4000165")]
	private const float const_strikeRateGemCost = 0.1f;

	[Token(Token = "0x4000166")]
	private const float const_strikeDmgGemCost = 0.5f;

	[Token(Token = "0x4000167")]
	private const float const_gem_dmg = 0.15f;

	[Token(Token = "0x4000168")]
	private const float const_gem_healthDmg = 0.3f;

	[Token(Token = "0x4000169")]
	private const float const_gem_strikeDmg = 0.25f;

	[Token(Token = "0x400016A")]
	[FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private List<Timer> timers;

	[Token(Token = "0x400016B")]
	[FieldOffset(Offset = "0xB8")]
	public readonly Dictionary<int, string> environmentDescription;

	[Token(Token = "0x17000007")]
	public static AbyssManager Instance
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x41D180", Offset = "0x41BD80", VA = "0x18041D180")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public int MaxBuffCount
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x41D2C0", Offset = "0x41BEC0", VA = "0x18041D2C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x418850", Offset = "0x417450", VA = "0x180418850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x41A6E0", Offset = "0x4192E0", VA = "0x18041A6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x41B530", Offset = "0x41A130", VA = "0x18041B530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x41A7F0", Offset = "0x4193F0", VA = "0x18041A7F0")]
	public void UpdateStatistics(TextMeshProUGUI statistics)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x419190", Offset = "0x417D90", VA = "0x180419190")]
	public void LevelSettings(Board board, int level)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x418E60", Offset = "0x417A60", VA = "0x180418E60")]
	public float GetBasicDamageAdder(PlantType thePlantType)
	{
		return default(float);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x41A340", Offset = "0x418F40", VA = "0x18041A340")]
	public void ReinforcePlant(Plant plant)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x418FC0", Offset = "0x417BC0", VA = "0x180418FC0")]
	private void GhostPlant(Board board)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x41A6C0", Offset = "0x4192C0", VA = "0x18041A6C0")]
	private void SplitZombie(Board board)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x41A240", Offset = "0x418E40", VA = "0x18041A240")]
	private void RecoverZombie()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x418D80", Offset = "0x417980", VA = "0x180418D80")]
	private void FastAppear(Board board)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x418E00", Offset = "0x417A00", VA = "0x180418E00")]
	private void FastZombie(Board board)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x41B710", Offset = "0x41A310", VA = "0x18041B710")]
	private void ZombieMoreHealth(Board board)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x41B620", Offset = "0x41A220", VA = "0x18041B620")]
	private void ZombieDefence(Board board)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x419C80", Offset = "0x418880", VA = "0x180419C80")]
	private void MoreZombie(Board board)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x41B6B0", Offset = "0x41A2B0", VA = "0x18041B6B0")]
	private void ZombieMoreDamage(Board board)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x41B950", Offset = "0x41A550", VA = "0x18041B950")]
	private void ZombieStar()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x41A060", Offset = "0x418C60", VA = "0x18041A060")]
	private void PlantInjury()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x41B7A0", Offset = "0x41A3A0", VA = "0x18041B7A0")]
	private void ZombieRecover(Board board)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x41A160", Offset = "0x418D60", VA = "0x18041A160")]
	private void PlantRecover(Board board)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x419070", Offset = "0x417C70", VA = "0x180419070")]
	private void Injury(Board board)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x41A590", Offset = "0x419190", VA = "0x18041A590")]
	private void SetZombieStar(Board board)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x418F40", Offset = "0x417B40", VA = "0x180418F40")]
	public void GetBuff(AbyssBuff buffType)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x41A3A0", Offset = "0x418FA0", VA = "0x18041A3A0")]
	public void RemoveBuff(AbyssBuff buffType, bool inBag)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x419CE0", Offset = "0x4188E0", VA = "0x180419CE0")]
	public void MoveFromBag(AbyssBuff buffType)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x419F20", Offset = "0x418B20", VA = "0x180419F20")]
	public void MoveToBag(AbyssBuff buffType)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x419AF0", Offset = "0x4186F0", VA = "0x180419AF0")]
	public void ListToDic(List<AbyssData> list, bool bag)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x418B90", Offset = "0x417790", VA = "0x180418B90")]
	public List<AbyssData> DicToList(bool bag)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x4199B0", Offset = "0x4185B0", VA = "0x1804199B0")]
	public void ListToDic_level(List<AbyssPlantLevel> list)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x4189A0", Offset = "0x4175A0", VA = "0x1804189A0")]
	public List<AbyssPlantLevel> DicToList_level()
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x4185C0", Offset = "0x4171C0", VA = "0x1804185C0")]
	private void AbyssUpdate(Board board)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x418730", Offset = "0x417330", VA = "0x180418730")]
	private void AddTimer(float interval, Action<Board> action, bool startImmediately = true)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x41CAD0", Offset = "0x41B6D0", VA = "0x18041CAD0")]
	public AbyssManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssMenu
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000371")]
public class AbyssMenu : BaseMenu
{
	[Token(Token = "0x4000C07")]
	[FieldOffset(Offset = "0x30")]
	public List<AbyssLevelEnter> entrances;

	[Token(Token = "0x4000C08")]
	[FieldOffset(Offset = "0x38")]
	public List<TextMeshProUGUI> levelInfo;

	[Token(Token = "0x4000C09")]
	[FieldOffset(Offset = "0x40")]
	public List<Sprite> backgroundSprites;

	[Token(Token = "0x4000C0A")]
	[FieldOffset(Offset = "0x48")]
	public Image backgroundImage;

	[Token(Token = "0x4000C0B")]
	[FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int currentSelectLevel;

	[Token(Token = "0x4000C0C")]
	[FieldOffset(Offset = "0x58")]
	private readonly Dictionary<SceneType, string> SceneName;

	[Token(Token = "0x4000C0D")]
	[FieldOffset(Offset = "0x60")]
	public readonly Dictionary<SceneType, int> BgDic;

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x3E50F0", Offset = "0x3E3CF0", VA = "0x1803E50F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x3E54D0", Offset = "0x3E40D0", VA = "0x1803E54D0")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x3E5640", Offset = "0x3E4240", VA = "0x1803E5640")]
	private void SetLevel(int level)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x3E59C0", Offset = "0x3E45C0", VA = "0x1803E59C0")]
	private void UpdateLevelInfo(int level)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x3E5190", Offset = "0x3E3D90", VA = "0x1803E5190")]
	public void EnterMenu(string name)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x3E5540", Offset = "0x3E4140", VA = "0x1803E5540")]
	public void SelectLevel(AbyssLevelEnter enter)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x3E53F0", Offset = "0x3E3FF0", VA = "0x1803E53F0")]
	public void MoveNext()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x3E5460", Offset = "0x3E4060", VA = "0x1803E5460")]
	public void MovePre()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x3E5340", Offset = "0x3E3F40", VA = "0x1803E5340")]
	private int GetMaxLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x3E53A0", Offset = "0x3E3FA0", VA = "0x1803E53A0")]
	private int GetMinLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x3E5180", Offset = "0x3E3D80", VA = "0x1803E5180")]
	public void BackToMainMenu()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x3E6030", Offset = "0x3E4C30", VA = "0x1803E6030")]
	public AbyssMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssMenu2
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000372")]
public class AbyssMenu2 : BaseMenu
{
	[Token(Token = "0x4000C0E")]
	[FieldOffset(Offset = "0x0")]
	public static AbyssMenu2 Instance;

	[Token(Token = "0x4000C0F")]
	[FieldOffset(Offset = "0x30")]
	public int level;

	[Token(Token = "0x4000C10")]
	[FieldOffset(Offset = "0x38")]
	public List<AbyssBuffButton> buffButtons;

	[Token(Token = "0x4000C11")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI refreshText;

	[Token(Token = "0x4000C12")]
	[FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI money;

	[Token(Token = "0x4000C13")]
	[FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI statistics;

	[Token(Token = "0x4000C14")]
	[FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI buffCountText;

	[Token(Token = "0x4000C15")]
	[FieldOffset(Offset = "0x60")]
	public Transform buffIconHead;

	[Token(Token = "0x4000C16")]
	[FieldOffset(Offset = "0x68")]
	public GameObject buffIconPrefab;

	[Token(Token = "0x4000C17")]
	[FieldOffset(Offset = "0x70")]
	private AbyssManager abyssManager;

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x3E3840", Offset = "0x3E2440", VA = "0x1803E3840", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x3E3C60", Offset = "0x3E2860", VA = "0x1803E3C60")]
	private void Start()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x3E49A0", Offset = "0x3E35A0", VA = "0x1803E49A0")]
	public void UpdateIcons()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x3E38A0", Offset = "0x3E24A0", VA = "0x1803E38A0")]
	public void BuyBuff(AbyssBuffButton abyssBuffButton)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x3E4090", Offset = "0x3E2C90", VA = "0x1803E4090")]
	public void UpdateBuff(bool cost = true)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x3E3FA0", Offset = "0x3E2BA0", VA = "0x1803E3FA0")]
	private void UniqueCheck(ref List<AbyssBuff> abyssBuffs, AbyssBuff buffType)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x3E3AA0", Offset = "0x3E26A0", VA = "0x1803E3AA0")]
	public void EnterGame()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x3E3BF0", Offset = "0x3E27F0", VA = "0x1803E3BF0")]
	public void ShowHelp()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x3E3B80", Offset = "0x3E2780", VA = "0x1803E3B80")]
	public void ShowBag()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x3E5070", Offset = "0x3E3C70", VA = "0x1803E5070")]
	public AbyssMenu2()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssPlantLevel
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000360")]
public class AbyssPlantLevel
{
	[Token(Token = "0x4000BBF")]
	[FieldOffset(Offset = "0x10")]
	public PlantType thePlantType;

	[Token(Token = "0x4000BC0")]
	[FieldOffset(Offset = "0x14")]
	public int level;

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public AbyssPlantLevel()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssSelectDifficultyMenu
using Il2CppDummyDll;

[Token(Token = "0x2000373")]
public class AbyssSelectDifficultyMenu : BaseMenu
{
	[Token(Token = "0x4000C18")]
	[FieldOffset(Offset = "0x30")]
	public int level;

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x3E6590", Offset = "0x3E5190", VA = "0x1803E6590")]
	public void SelectNormal()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x3E6500", Offset = "0x3E5100", VA = "0x1803E6500")]
	public void SelectHard()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x3E6470", Offset = "0x3E5070", VA = "0x1803E6470")]
	public void SelectExtreme()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssSelectDifficultyMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssSettlementMenu
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000374")]
public class AbyssSettlementMenu : BaseMenu
{
	[Token(Token = "0x4000C19")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI settleInfo;

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x3E6620", Offset = "0x3E5220", VA = "0x1803E6620")]
	public void InitSettle(SettlementData settlementData)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x3E6610", Offset = "0x3E5210", VA = "0x1803E6610")]
	public void Confirm()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssSettlementMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssStatistic
using Il2CppDummyDll;

[Token(Token = "0x2000048")]
public struct AbyssStatistic
{
	[Token(Token = "0x400016F")]
	[FieldOffset(Offset = "0x0")]
	public int thePlantCount;

	[Token(Token = "0x4000170")]
	[FieldOffset(Offset = "0x4")]
	public int theSuperCount;

	[Token(Token = "0x4000171")]
	[FieldOffset(Offset = "0x8")]
	public int theUltiCount;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssStoreMenu
using Il2CppDummyDll;

[Token(Token = "0x2000375")]
public class AbyssStoreMenu : BaseMenu
{
	[Token(Token = "0x600120C")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AbyssStoreMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssSword
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000121")]
public class AbyssSword : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[FieldOffset(Offset = "0x20")]
	public AbyssSwordStar plant;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x478100", Offset = "0x476D00", VA = "0x180478100")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x478280", Offset = "0x476E80", VA = "0x180478280")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AbyssSword()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AbyssSwordStar
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001F9")]
public class AbyssSwordStar : SwordStarfruit
{
	[Token(Token = "0x4000706")]
	[FieldOffset(Offset = "0x0")]
	public static AbyssSwordStar Instance;

	[Token(Token = "0x4000707")]
	[FieldOffset(Offset = "0x1C0")]
	private readonly List<BigSword> bigSwords;

	[Token(Token = "0x4000708")]
	[FieldOffset(Offset = "0x1C8")]
	public GameObject bigSwordPrefab;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x4D2FB0", Offset = "0x4D1BB0", VA = "0x1804D2FB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x4D3420", Offset = "0x4D2020", VA = "0x1804D3420", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x4D31B0", Offset = "0x4D1DB0", VA = "0x1804D31B0")]
	public void SetStatus(PlantStatus plantStatus)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x4D31C0", Offset = "0x4D1DC0", VA = "0x1804D31C0")]
	private void SetSwords()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x4D3110", Offset = "0x4D1D10", VA = "0x1804D3110")]
	public bool CheckStatus(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x4D2D30", Offset = "0x4D1930", VA = "0x1804D2D30")]
	private void AttackZombie(Vector2 position)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x4D3540", Offset = "0x4D2140", VA = "0x1804D3540")]
	public AbyssSwordStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Achievement
using Il2CppDummyDll;

[Token(Token = "0x200004E")]
public enum Achievement
{
	[Token(Token = "0x40001A3")]
	Welcome = 0,
	[Token(Token = "0x40001A4")]
	PeaSunflower = 1,
	[Token(Token = "0x40001A5")]
	GatlingPea = 2,
	[Token(Token = "0x40001A6")]
	TwinFlower = 3,
	[Token(Token = "0x40001A7")]
	SuperGatling = 4,
	[Token(Token = "0x40001A8")]
	CherryPaper = 5,
	[Token(Token = "0x40001A9")]
	BigWallNut = 6,
	[Token(Token = "0x40001AA")]
	Puff = 7,
	[Token(Token = "0x40001AB")]
	SunBomb = 8,
	[Token(Token = "0x40001AC")]
	CherryPaper95 = 9,
	[Token(Token = "0x40001AD")]
	BigWallNut2 = 10,
	[Token(Token = "0x40001AE")]
	BigWallNut3 = 11,
	[Token(Token = "0x40001AF")]
	HypnoShroom = 12,
	[Token(Token = "0x40001B0")]
	JacksonZombie = 13,
	[Token(Token = "0x40001B1")]
	ScaredyHypno = 14,
	[Token(Token = "0x40001B2")]
	HypnoNut = 15,
	[Token(Token = "0x40001B3")]
	LilyPad = 16,
	[Token(Token = "0x40001B4")]
	ThreePeater = 17,
	[Token(Token = "0x40001B5")]
	SquashKelp = 18,
	[Token(Token = "0x40001B6")]
	ThreeSpike = 19,
	[Token(Token = "0x40001B7")]
	SunSeaShroom = 20,
	[Token(Token = "0x40001B8")]
	StarBlover = 21,
	[Token(Token = "0x40001B9")]
	MagnetShroom = 22,
	[Token(Token = "0x40001BA")]
	CornCabbage = 23,
	[Token(Token = "0x40001BB")]
	GarlicCorn = 24,
	[Token(Token = "0x40001BC")]
	CabbageUmbrella = 25,
	[Token(Token = "0x40001BD")]
	GoldMelon = 26,
	[Token(Token = "0x40001BE")]
	SquashTorch = 27,
	[Token(Token = "0x40001BF")]
	UltimateTorch = 28,
	[Token(Token = "0x40001C0")]
	Superkelp = 29,
	[Token(Token = "0x40001C1")]
	DarkThreePeater = 30,
	[Token(Token = "0x40001C2")]
	AshThreePeater = 31,
	[Token(Token = "0x40001C3")]
	SuperThreePeater = 32,
	[Token(Token = "0x40001C4")]
	MagnetCactus = 33,
	[Token(Token = "0x40001C5")]
	SuperStar = 34,
	[Token(Token = "0x40001C6")]
	UltimateStar = 35,
	[Token(Token = "0x40001C7")]
	MagnetShroom2 = 36,
	[Token(Token = "0x40001C8")]
	UltimateStar2 = 37,
	[Token(Token = "0x40001C9")]
	HypnoMagnet = 38,
	[Token(Token = "0x40001CA")]
	SunMagnet = 39,
	[Token(Token = "0x40001CB")]
	SuperCherryShooter = 40,
	[Token(Token = "0x40001CC")]
	UltimateGatling = 41,
	[Token(Token = "0x40001CD")]
	HypnoEmperor = 42,
	[Token(Token = "0x40001CE")]
	CobCannon = 43,
	[Token(Token = "0x40001CF")]
	IceCannon = 44,
	[Token(Token = "0x40001D0")]
	FireCannon = 45,
	[Token(Token = "0x40001D1")]
	UltimateCannon = 46,
	[Token(Token = "0x40001D2")]
	SuperUmbrella = 47,
	[Token(Token = "0x40001D3")]
	EmeraldUmbrella = 48,
	[Token(Token = "0x40001D4")]
	RedEmeraldUmbrella = 49,
	[Token(Token = "0x40001D5")]
	Plantern = 50,
	[Token(Token = "0x40001D6")]
	SuperFume = 51,
	[Token(Token = "0x40001D7")]
	UltimateFume = 52,
	[Token(Token = "0x40001D8")]
	UltimteGloom = 53,
	[Token(Token = "0x40001D9")]
	CattailPlant = 54,
	[Token(Token = "0x40001DA")]
	CattailGirl = 55,
	[Token(Token = "0x40001DB")]
	Cattailour = 56,
	[Token(Token = "0x40001DC")]
	WallNut = 57,
	[Token(Token = "0x40001DD")]
	SuperChomper = 58,
	[Token(Token = "0x40001DE")]
	UltimateChomper = 59,
	[Token(Token = "0x40001DF")]
	UltimateTallNut = 60,
	[Token(Token = "0x40001E0")]
	SuperMachineNut = 61,
	[Token(Token = "0x40001E1")]
	SuperSunNut = 62,
	[Token(Token = "0x40001E2")]
	UltimatePumpkin = 63,
	[Token(Token = "0x40001E3")]
	MelonJump = 64,
	[Token(Token = "0x40001E4")]
	IronNut = 65,
	[Token(Token = "0x40001E5")]
	Sub = 999,
	[Token(Token = "0x40001E6")]
	WelcomeChallenge = 1000,
	[Token(Token = "0x40001E7")]
	Travel = 1001,
	[Token(Token = "0x40001E8")]
	Travel2 = 1002,
	[Token(Token = "0x40001E9")]
	Travel3 = 1003,
	[Token(Token = "0x40001EA")]
	Travel_noBuff = 1004,
	[Token(Token = "0x40001EB")]
	Travel_noNut = 1005,
	[Token(Token = "0x40001EC")]
	Travel_sun = 1006,
	[Token(Token = "0x40001ED")]
	Travel_fast = 1007,
	[Token(Token = "0x40001EE")]
	SuperMachineNut_health = 1008,
	[Token(Token = "0x40001EF")]
	SuperDamage = 1009
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200004B")]
public class AchievementBtn : UIBtn
{
	[Token(Token = "0x4000195")]
	[FieldOffset(Offset = "0x60")]
	public GameObject pageToOpten;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x41D360", Offset = "0x41BF60", VA = "0x18041D360", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public AchievementBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementClip
using System;
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200004C")]
public class AchievementClip : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[FieldOffset(Offset = "0x20")]
	public GameObject trophy;

	[Token(Token = "0x4000197")]
	[FieldOffset(Offset = "0x28")]
	public GameObject introduce;

	[Token(Token = "0x4000198")]
	[FieldOffset(Offset = "0x30")]
	public Image image;

	[Token(Token = "0x4000199")]
	[FieldOffset(Offset = "0x38")]
	public Sprite highlightSprite;

	[Token(Token = "0x400019A")]
	[FieldOffset(Offset = "0x40")]
	public List<AchievementClip> childs;

	[Token(Token = "0x400019B")]
	[FieldOffset(Offset = "0x48")]
	public int index;

	[Token(Token = "0x400019C")]
	[FieldOffset(Offset = "0x4C")]
	private Achievement _index;

	[Token(Token = "0x400019D")]
	[FieldOffset(Offset = "0x50")]
	private Sprite originalSprite;

	[Token(Token = "0x400019E")]
	[FieldOffset(Offset = "0x0")]
	public static readonly Dictionary<Achievement, Tuple<string, string>> achievementsText;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x41D700", Offset = "0x41C300", VA = "0x18041D700")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x41DBE0", Offset = "0x41C7E0", VA = "0x18041DBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x41DAD0", Offset = "0x41C6D0", VA = "0x18041DAD0")]
	private void SetText(TextMeshProUGUI text, byte index)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x41DA30", Offset = "0x41C630", VA = "0x18041DA30")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x41DA90", Offset = "0x41C690", VA = "0x18041DA90")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x41F970", Offset = "0x41E570", VA = "0x18041F970")]
	public AchievementClip()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementEditor
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200004F")]
public class AchievementEditor : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[FieldOffset(Offset = "0x20")]
	public AchievementClip head;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x41F9F0", Offset = "0x41E5F0", VA = "0x18041F9F0")]
	private void GetChilds()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AchievementEditor()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementLine
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000050")]
public class AchievementLine : MonoBehaviour
{
	[Token(Token = "0x40001F1")]
	[FieldOffset(Offset = "0x20")]
	public RectTransform left;

	[Token(Token = "0x40001F2")]
	[FieldOffset(Offset = "0x28")]
	public RectTransform right;

	[Token(Token = "0x40001F3")]
	[FieldOffset(Offset = "0x30")]
	public bool column;

	[Token(Token = "0x40001F4")]
	[FieldOffset(Offset = "0x31")]
	public bool moveable;

	[Token(Token = "0x40001F5")]
	[FieldOffset(Offset = "0x38")]
	public List<RectTransform> rectTransforms;

	[Token(Token = "0x40001F6")]
	[FieldOffset(Offset = "0x40")]
	private RectTransform rectTransform;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x41FC70", Offset = "0x41E870", VA = "0x18041FC70")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x420270", Offset = "0x41EE70", VA = "0x180420270")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x4202D0", Offset = "0x41EED0", VA = "0x1804202D0")]
	public AchievementLine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000051")]
public class AchievementManager : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[FieldOffset(Offset = "0x0")]
	public static HashSet<Achievement> achievements;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x420350", Offset = "0x41EF50", VA = "0x180420350")]
	public static bool CheckAchievement(Achievement index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x4203D0", Offset = "0x41EFD0", VA = "0x1804203D0")]
	public static void UnlockAchievement(Achievement index)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AchievementManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementMenu
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000052")]
public class AchievementMenu : BaseMenu
{
	[Token(Token = "0x40001F8")]
	[FieldOffset(Offset = "0x0")]
	public static AchievementMenu Instance;

	[Token(Token = "0x40001F9")]
	[FieldOffset(Offset = "0x30")]
	public Transform achievements;

	[Token(Token = "0x40001FA")]
	[FieldOffset(Offset = "0x38")]
	public Transform head;

	[Token(Token = "0x40001FB")]
	[FieldOffset(Offset = "0x40")]
	public Mask mask;

	[Token(Token = "0x40001FC")]
	[FieldOffset(Offset = "0x48")]
	public AchievementClip headClip;

	[Token(Token = "0x40001FD")]
	[FieldOffset(Offset = "0x50")]
	private readonly float moveSpeed;

	[Token(Token = "0x40001FE")]
	[FieldOffset(Offset = "0x54")]
	private Vector3 lastMousePosition;

	[Token(Token = "0x40001FF")]
	[FieldOffset(Offset = "0x60")]
	private bool isFollowing;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x420570", Offset = "0x41F170", VA = "0x180420570", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x420BA0", Offset = "0x41F7A0", VA = "0x180420BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x420A90", Offset = "0x41F690", VA = "0x180420A90")]
	private void ScrollWheelUpdate()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x420860", Offset = "0x41F460", VA = "0x180420860")]
	private void ClickUpdate()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x420CC0", Offset = "0x41F8C0", VA = "0x180420CC0")]
	public AchievementMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementText
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000053")]
public class AchievementText : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[FieldOffset(Offset = "0x0")]
	public static AchievementText Instance;

	[Token(Token = "0x4000201")]
	[FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI t1;

	[Token(Token = "0x4000202")]
	[FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI t2;

	[Token(Token = "0x4000203")]
	[FieldOffset(Offset = "0x30")]
	public float timer;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x420CD0", Offset = "0x41F8D0", VA = "0x180420CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x420DF0", Offset = "0x41F9F0", VA = "0x180420DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x420D30", Offset = "0x41F930", VA = "0x180420D30")]
	public void ShowText(string text, float time)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AchievementText()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AchievementType
using Il2CppDummyDll;

[Token(Token = "0x200004D")]
public enum AchievementType
{
	[Token(Token = "0x40001A0")]
	Default,
	[Token(Token = "0x40001A1")]
	Challenge
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ActiveStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200001E")]
public class ActiveStar : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[FieldOffset(Offset = "0x20")]
	private GameObject mask;

	[Token(Token = "0x40000A4")]
	[FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x307250", Offset = "0x305E50", VA = "0x180307250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x3072E0", Offset = "0x305EE0", VA = "0x1803072E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ActiveStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Advanture_Btn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000378")]
public class Advanture_Btn : MonoBehaviour
{
	[Token(Token = "0x4000C1C")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x4000C1D")]
	[FieldOffset(Offset = "0x28")]
	public LevelType levelType;

	[Token(Token = "0x4000C1E")]
	[FieldOffset(Offset = "0x2C")]
	public int buttonNumber;

	[Token(Token = "0x4000C1F")]
	[FieldOffset(Offset = "0x30")]
	public GameObject thisMenu;

	[Token(Token = "0x4000C20")]
	[FieldOffset(Offset = "0x38")]
	public ClgLevelMgr levelCtrl;

	[Token(Token = "0x4000C21")]
	[FieldOffset(Offset = "0x40")]
	private Sprite originSprite;

	[Token(Token = "0x4000C22")]
	[FieldOffset(Offset = "0x48")]
	private Image image;

	[Token(Token = "0x4000C23")]
	[FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000C24")]
	[FieldOffset(Offset = "0x60")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000C25")]
	[FieldOffset(Offset = "0x68")]
	public bool limInMobile;

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x3E7540", Offset = "0x3E6140", VA = "0x1803E7540")]
	private void Start()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x3E6F20", Offset = "0x3E5B20", VA = "0x1803E6F20")]
	private void CheckTropy()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x3E72E0", Offset = "0x3E5EE0", VA = "0x1803E72E0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x3E7310", Offset = "0x3E5F10", VA = "0x1803E7310")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x3E7240", Offset = "0x3E5E40", VA = "0x1803E7240")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x3E7370", Offset = "0x3E5F70", VA = "0x1803E7370", Slot = "4")]
	protected virtual void OnMouseUp()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Advanture_Btn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvantureLevelText
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000376")]
public class AdvantureLevelText : MonoBehaviour
{
	[Token(Token = "0x4000C1A")]
	[FieldOffset(Offset = "0x20")]
	public bool big;

	[Token(Token = "0x4000C1B")]
	[FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x3E6E00", Offset = "0x3E5A00", VA = "0x1803E6E00")]
	private void Start()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AdvantureLevelText()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvantureMenu
using Il2CppDummyDll;

[Token(Token = "0x200037C")]
public class AdvantureMenu : BaseMenu
{
	[Token(Token = "0x6001228")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public AdvantureMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvantureMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000377")]
public class AdvantureMgr : MonoBehaviour
{
	[Token(Token = "0x600120F")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AdvantureMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvBuff
using Il2CppDummyDll;

[Token(Token = "0x2000353")]
public enum AdvBuff
{
	[Token(Token = "0x4000B30")]
	撒豆成兵,
	[Token(Token = "0x4000B31")]
	精兵强将,
	[Token(Token = "0x4000B32")]
	枕戈待旦,
	[Token(Token = "0x4000B33")]
	核能威慑,
	[Token(Token = "0x4000B34")]
	妙手回春,
	[Token(Token = "0x4000B35")]
	无关痛痒,
	[Token(Token = "0x4000B36")]
	尸愁之路,
	[Token(Token = "0x4000B37")]
	百炼成钢,
	[Token(Token = "0x4000B38")]
	熠熠生辉,
	[Token(Token = "0x4000B39")]
	极速战备,
	[Token(Token = "0x4000B3A")]
	强力打击,
	[Token(Token = "0x4000B3B")]
	精准打击,
	[Token(Token = "0x4000B3C")]
	腐化,
	[Token(Token = "0x4000B3D")]
	全副武装,
	[Token(Token = "0x4000B3E")]
	合理投资,
	[Token(Token = "0x4000B3F")]
	怒火攻心,
	[Token(Token = "0x4000B40")]
	至极手速,
	[Token(Token = "0x4000B41")]
	势如破竹,
	[Token(Token = "0x4000B42")]
	冻彻心扉,
	[Token(Token = "0x4000B43")]
	斗转星移,
	[Token(Token = "0x4000B44")]
	灯火通明,
	[Token(Token = "0x4000B45")]
	多多益善,
	[Token(Token = "0x4000B46")]
	等价交换,
	[Token(Token = "0x4000B47")]
	人工智能,
	[Token(Token = "0x4000B48")]
	弹射起步,
	[Token(Token = "0x4000B49")]
	聚光盆,
	[Token(Token = "0x4000B4A")]
	运斤如风,
	[Token(Token = "0x4000B4B")]
	全息制冷,
	[Token(Token = "0x4000B4C")]
	致命一击,
	[Token(Token = "0x4000B4D")]
	拆分,
	[Token(Token = "0x4000B4E")]
	肉身成圣,
	[Token(Token = "0x4000B4F")]
	百步穿杨,
	[Token(Token = "0x4000B50")]
	复制中心,
	[Token(Token = "0x4000B51")]
	连连看,
	[Token(Token = "0x4000B52")]
	特制弹药,
	[Token(Token = "0x4000B53")]
	一针见血,
	[Token(Token = "0x4000B54")]
	真樱,
	[Token(Token = "0x4000B55")]
	真毁,
	[Token(Token = "0x4000B56")]
	可控核聚变,
	[Token(Token = "0x4000B57")]
	人多势众,
	[Token(Token = "0x4000B58")]
	我是传奇,
	[Token(Token = "0x4000B59")]
	大富翁,
	[Token(Token = "0x4000B5A")]
	好运连连,
	[Token(Token = "0x4000B5B")]
	过载,
	[Token(Token = "0x4000B5C")]
	排山倒海,
	[Token(Token = "0x4000B5D")]
	星神合一,
	[Token(Token = "0x4000B5E")]
	量子护盾,
	[Token(Token = "0x4000B5F")]
	高能射线,
	[Token(Token = "0x4000B60")]
	极致之冰,
	[Token(Token = "0x4000B61")]
	枪枪爆头,
	[Token(Token = "0x4000B62")]
	开炮
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvQingZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002BD")]
public class AdvQingZombie : Zombie
{
	[Token(Token = "0x4000801")]
	[FieldOffset(Offset = "0x220")]
	public bool quickmove;

	[Token(Token = "0x4000802")]
	[FieldOffset(Offset = "0x224")]
	public float Vy;

	[Token(Token = "0x4000803")]
	[FieldOffset(Offset = "0x228")]
	public float landY;

	[Token(Token = "0x4000804")]
	[FieldOffset(Offset = "0x22C")]
	public bool temp;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x370680", Offset = "0x36F280", VA = "0x180370680", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x370420", Offset = "0x36F020", VA = "0x180370420", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x3700A0", Offset = "0x36ECA0", VA = "0x1803700A0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x36FF90", Offset = "0x36EB90", VA = "0x18036FF90", Slot = "26")]
	public override void DestoryZombie()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x36FEF0", Offset = "0x36EAF0", VA = "0x18036FEF0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x370100", Offset = "0x36ED00", VA = "0x180370100", Slot = "27")]
	public override void PlayEatSound()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x3706D0", Offset = "0x36F2D0", VA = "0x1803706D0")]
	private void Temp1()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x3706E0", Offset = "0x36F2E0", VA = "0x1803706E0")]
	public AdvQingZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AdvZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002AF")]
public class AdvZombie : Zombie
{
	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x370700", Offset = "0x36F300", VA = "0x180370700", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public AdvZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacBtn
using Il2CppDummyDll;

[Token(Token = "0x2000379")]
public class AlmanacBtn : NormalBtn
{
	[Token(Token = "0x6001217")]
	[Address(RVA = "0x3E76A0", Offset = "0x3E62A0", VA = "0x1803E76A0", Slot = "4")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AlmanacBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacCard
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x20000E8")]
public class AlmanacCard : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[FieldOffset(Offset = "0x20")]
	public int theSeedType;

	[Token(Token = "0x40003A8")]
	[FieldOffset(Offset = "0x24")]
	public bool isBasicCard;

	[Token(Token = "0x40003A9")]
	[FieldOffset(Offset = "0x28")]
	public SpriteRenderer thePlantSprite;

	[Token(Token = "0x40003AA")]
	[FieldOffset(Offset = "0x30")]
	public SpriteRenderer back;

	[Token(Token = "0x40003AB")]
	[FieldOffset(Offset = "0x38")]
	public TextMeshPro textMesh;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x44EB80", Offset = "0x44D780", VA = "0x18044EB80")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x44EC10", Offset = "0x44D810", VA = "0x18044EC10")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x44E360", Offset = "0x44CF60", VA = "0x18044E360")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x44E530", Offset = "0x44D130", VA = "0x18044E530")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x44E610", Offset = "0x44D210", VA = "0x18044E610")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x44E6F0", Offset = "0x44D2F0", VA = "0x18044E6F0")]
	private void SetSprite(Sprite sprite, float minX, float maxX, float minY, float maxY)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x44E9B0", Offset = "0x44D5B0", VA = "0x18044E9B0")]
	private void SetTheSprite(Sprite sprite)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x44E140", Offset = "0x44CD40", VA = "0x18044E140")]
	public static AlmanacCard CreateAlmanacCard(Transform parent, PlantType thePlantType)
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AlmanacCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacCardZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000067")]
public class AlmanacCardZombie : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[FieldOffset(Offset = "0x20")]
	public ZombieType theZombieType;

	[Token(Token = "0x4000221")]
	[FieldOffset(Offset = "0x28")]
	private SpriteRenderer r;

	[Token(Token = "0x4000222")]
	[FieldOffset(Offset = "0x30")]
	private SpriteRenderer _r;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x420E90", Offset = "0x41FA90", VA = "0x180420E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x421080", Offset = "0x41FC80", VA = "0x180421080")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x421430", Offset = "0x420030", VA = "0x180421430")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x421510", Offset = "0x420110", VA = "0x180421510")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x420F30", Offset = "0x41FB30", VA = "0x180420F30")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AlmanacCardZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacMenu
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200037A")]
public class AlmanacMenu : BaseMenu
{
	[Token(Token = "0x4000C26")]
	[FieldOffset(Offset = "0x0")]
	public static AlmanacMenu Instance;

	[Token(Token = "0x4000C27")]
	[FieldOffset(Offset = "0x30")]
	public AlmanacPlantCtrl currentShowCtrl;

	[Token(Token = "0x4000C28")]
	[FieldOffset(Offset = "0x38")]
	public GameObject plants;

	[Token(Token = "0x4000C29")]
	[FieldOffset(Offset = "0x40")]
	public GameObject plants2;

	[Token(Token = "0x4000C2A")]
	[FieldOffset(Offset = "0x48")]
	public GameObject zombies;

	[Token(Token = "0x4000C2B")]
	[FieldOffset(Offset = "0x50")]
	public GameObject help;

	[Token(Token = "0x4000C2C")]
	[FieldOffset(Offset = "0x58")]
	private GameObject currentShowObject;

	[Token(Token = "0x4000C2D")]
	[FieldOffset(Offset = "0x60")]
	public List<Collider2D> cols;

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x3E7740", Offset = "0x3E6340", VA = "0x1803E7740", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x3E77A0", Offset = "0x3E63A0", VA = "0x1803E77A0")]
	public void BackToIndex()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x3E7C60", Offset = "0x3E6860", VA = "0x1803E7C60")]
	public void LookPlant()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x3E7AA0", Offset = "0x3E66A0", VA = "0x1803E7AA0")]
	public void LookPlant2()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x3E7E20", Offset = "0x3E6A20", VA = "0x1803E7E20")]
	public void LookZombie()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x3E7910", Offset = "0x3E6510", VA = "0x1803E7910")]
	public void LookHelp()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x3E7FB0", Offset = "0x3E6BB0", VA = "0x1803E7FB0")]
	public AlmanacMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacMgrZombie
using System;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000068")]
public class AlmanacMgrZombie : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000069")]
	public class ZombieInfo
	{
		[Token(Token = "0x4000229")]
		[FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400022A")]
		[FieldOffset(Offset = "0x18")]
		public string introduce;

		[Token(Token = "0x400022B")]
		[FieldOffset(Offset = "0x20")]
		public string info;

		[Token(Token = "0x400022C")]
		[FieldOffset(Offset = "0x28")]
		public ZombieType theZombieType;

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public ZombieInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006A")]
	public class ZombieAlmanacData
	{
		[Token(Token = "0x400022D")]
		[FieldOffset(Offset = "0x10")]
		public ZombieInfo[] zombies;

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x430C60", Offset = "0x42F860", VA = "0x180430C60")]
		public ZombieAlmanacData()
		{
		}
	}

	[Token(Token = "0x4000223")]
	[FieldOffset(Offset = "0x20")]
	public ZombieType theZombieType;

	[Token(Token = "0x4000224")]
	[FieldOffset(Offset = "0x28")]
	private GameObject zombieName;

	[Token(Token = "0x4000225")]
	[FieldOffset(Offset = "0x30")]
	private GameObject info;

	[Token(Token = "0x4000226")]
	[FieldOffset(Offset = "0x38")]
	private int pageCount;

	[Token(Token = "0x4000227")]
	[FieldOffset(Offset = "0x3C")]
	private int currentPage;

	[Token(Token = "0x4000228")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshPro introduce;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x4215F0", Offset = "0x4201F0", VA = "0x1804215F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x421A00", Offset = "0x420600", VA = "0x180421A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x4216B0", Offset = "0x4202B0", VA = "0x1804216B0")]
	private void InitNameAndInfoFromJson()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x4219A0", Offset = "0x4205A0", VA = "0x1804219A0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x421AD0", Offset = "0x4206D0", VA = "0x180421AD0")]
	public AlmanacMgrZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacPageBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200006B")]
public class AlmanacPageBtn : NormalBtn
{
	[Token(Token = "0x400022E")]
	[FieldOffset(Offset = "0x58")]
	public int btnType;

	[Token(Token = "0x400022F")]
	[FieldOffset(Offset = "0x60")]
	public AlmanacZombieCtrl almanacZombieCtrl;

	[Token(Token = "0x4000230")]
	[FieldOffset(Offset = "0x68")]
	public GameObject groupToOpen;

	[Token(Token = "0x4000231")]
	[FieldOffset(Offset = "0x70")]
	public GameObject turnPage;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x421AE0", Offset = "0x4206E0", VA = "0x180421AE0", Slot = "4")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public AlmanacPageBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacPlantBank
using System;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x200006C")]
public class AlmanacPlantBank : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public class PlantInfo
	{
		[Token(Token = "0x400023B")]
		[FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400023C")]
		[FieldOffset(Offset = "0x18")]
		public string introduce;

		[Token(Token = "0x400023D")]
		[FieldOffset(Offset = "0x20")]
		public string info;

		[Token(Token = "0x400023E")]
		[FieldOffset(Offset = "0x28")]
		public string cost;

		[Token(Token = "0x400023F")]
		[FieldOffset(Offset = "0x30")]
		public int seedType;

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public PlantInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006E")]
	public class PlantData
	{
		[Token(Token = "0x4000240")]
		[FieldOffset(Offset = "0x10")]
		public PlantInfo[] plants;

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x42F620", Offset = "0x42E220", VA = "0x18042F620")]
		public PlantData()
		{
		}
	}

	[Token(Token = "0x4000232")]
	[FieldOffset(Offset = "0x20")]
	public int theSeedType;

	[Token(Token = "0x4000233")]
	[FieldOffset(Offset = "0x28")]
	public TextMeshPro plantName;

	[Token(Token = "0x4000234")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshPro plantName_shadow;

	[Token(Token = "0x4000235")]
	[FieldOffset(Offset = "0x38")]
	public TextMeshPro cost;

	[Token(Token = "0x4000236")]
	[FieldOffset(Offset = "0x40")]
	public GameObject skinButton;

	[Token(Token = "0x4000237")]
	[FieldOffset(Offset = "0x48")]
	public GameObject pvpPotSwitch;

	[Token(Token = "0x4000238")]
	[FieldOffset(Offset = "0x50")]
	private int pageCount;

	[Token(Token = "0x4000239")]
	[FieldOffset(Offset = "0x54")]
	private int currentPage;

	[Token(Token = "0x400023A")]
	[FieldOffset(Offset = "0x58")]
	public TextMeshPro introduce;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x422730", Offset = "0x421330", VA = "0x180422730")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x422180", Offset = "0x420D80", VA = "0x180422180")]
	private void InitNameAndInfoFromJson()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x4224F0", Offset = "0x4210F0", VA = "0x1804224F0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x421FC0", Offset = "0x420BC0", VA = "0x180421FC0")]
	public void BanedInPVP(TextMeshPro textMeshPro)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x422550", Offset = "0x421150", VA = "0x180422550")]
	private void PVPInit()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x4229A0", Offset = "0x4215A0", VA = "0x1804229A0")]
	public AlmanacPlantBank()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacPlantCtrl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000071")]
public class AlmanacPlantCtrl : MonoBehaviour
{
	[Token(Token = "0x4000244")]
	[FieldOffset(Offset = "0x20")]
	public int plantSelected;

	[Token(Token = "0x4000245")]
	[FieldOffset(Offset = "0x28")]
	public string cardGroupPath;

	[Token(Token = "0x4000246")]
	[FieldOffset(Offset = "0x30")]
	public bool instantiate;

	[Token(Token = "0x4000247")]
	[FieldOffset(Offset = "0x38")]
	public GameObject localShowPlant;

	[Token(Token = "0x4000248")]
	[FieldOffset(Offset = "0x40")]
	private GameObject localCardBank;

	[Token(Token = "0x4000249")]
	[FieldOffset(Offset = "0x48")]
	private GameObject localMixGroup;

	[Token(Token = "0x400024A")]
	[FieldOffset(Offset = "0x50")]
	private GameObject basicCard;

	[Token(Token = "0x400024B")]
	[FieldOffset(Offset = "0x58")]
	private Vector3 v;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x423180", Offset = "0x421D80", VA = "0x180423180")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x423000", Offset = "0x421C00", VA = "0x180423000")]
	public GameObject SetPlant(int theSeedType)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x422CB0", Offset = "0x4218B0", VA = "0x180422CB0")]
	public void GetSeedType(int theSeedType, bool isBasicCard)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x423100", Offset = "0x421D00", VA = "0x180423100")]
	public void ShowBasicCard()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x4229B0", Offset = "0x4215B0", VA = "0x1804229B0")]
	private void GetImage(PlantType theSeedType, Transform bank)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x423580", Offset = "0x422180", VA = "0x180423580")]
	public AlmanacPlantCtrl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AlmanacZombieCtrl
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000072")]
public class AlmanacZombieCtrl : MonoBehaviour
{
	[Token(Token = "0x400024C")]
	[FieldOffset(Offset = "0x0")]
	public static AlmanacZombieCtrl Instance;

	[Token(Token = "0x400024D")]
	[FieldOffset(Offset = "0x20")]
	public ZombieType zombieSelected;

	[Token(Token = "0x400024E")]
	[FieldOffset(Offset = "0x28")]
	private GameObject localShowZombie;

	[Token(Token = "0x400024F")]
	[FieldOffset(Offset = "0x30")]
	private GameObject localCardBank;

	[Token(Token = "0x4000250")]
	[FieldOffset(Offset = "0x38")]
	private Vector3 v;

	[Token(Token = "0x4000251")]
	[FieldOffset(Offset = "0x44")]
	public int currentShowGroup;

	[Token(Token = "0x4000252")]
	[FieldOffset(Offset = "0x48")]
	public List<GameObject> groups;

	[Token(Token = "0x4000253")]
	[FieldOffset(Offset = "0x50")]
	private readonly int maxPage;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x4235B0", Offset = "0x4221B0", VA = "0x1804235B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x423610", Offset = "0x422210", VA = "0x180423610")]
	public void GetZombieType(ZombieType theZombieType)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x423880", Offset = "0x422480", VA = "0x180423880")]
	public void NextPage()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x4237C0", Offset = "0x4223C0", VA = "0x1804237C0")]
	public void LastPage()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x423940", Offset = "0x422540", VA = "0x180423940")]
	public AlmanacZombieCtrl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AnimTool
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000329")]
public class AnimTool : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[FieldOffset(Offset = "0x20")]
	public GardenPlant plant;

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x3BDF60", Offset = "0x3BCB60", VA = "0x1803BDF60")]
	private void Fertilze()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x3BE2C0", Offset = "0x3BCEC0", VA = "0x1803BE2C0")]
	private void Water()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x3BE260", Offset = "0x3BCE60", VA = "0x1803BE260")]
	private void PlayWaterSound()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x3BDEB0", Offset = "0x3BCAB0", VA = "0x1803BDEB0")]
	private void BugSpray()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x3BE1B0", Offset = "0x3BCDB0", VA = "0x1803BE1B0")]
	private void Phonograph()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AnimTool()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AnimUIOver
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000078")]
public class AnimUIOver : MonoBehaviour
{
	[Token(Token = "0x4000261")]
	[FieldOffset(Offset = "0x20")]
	private Board board;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x425740", Offset = "0x424340", VA = "0x180425740")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x424A60", Offset = "0x423660", VA = "0x180424A60")]
	private void KillZombie()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x423B40", Offset = "0x422740", VA = "0x180423B40")]
	public void Die()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x424D20", Offset = "0x423920", VA = "0x180424D20")]
	private void ShowText()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x4239F0", Offset = "0x4225F0", VA = "0x1804239F0")]
	public void Die1()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x423A50", Offset = "0x422650", VA = "0x180423A50")]
	public void DieHugeWave()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AnimUIOver()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AoeDamage
using System;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003A1")]
public class AoeDamage : MonoBehaviour
{
	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x3F8DA0", Offset = "0x3F79A0", VA = "0x1803F8DA0")]
	private static bool Bomb(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage, int rangeRow)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x3F8B80", Offset = "0x3F7780", VA = "0x1803F8B80")]
	private static void BombPotato(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage, int rangeRow, Action<Zombie> action)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x3F9020", Offset = "0x3F7C20", VA = "0x1803F9020")]
	public static void SmallBombPotato(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage, [Optional] Action<Zombie> action)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x3F9230", Offset = "0x3F7E30", VA = "0x1803F9230")]
	public static void SmallBomb(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x3F8FD0", Offset = "0x3F7BD0", VA = "0x1803F8FD0")]
	public static bool MidBomb(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x3F8B40", Offset = "0x3F7740", VA = "0x1803F8B40")]
	public static void BigBomb(Vector3 position, float range, LayerMask layerMask, int theRow, int theDamage)
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x3F8F60", Offset = "0x3F7B60", VA = "0x1803F8F60")]
	public static bool InLandAoeRange(ZombieStatus theZombieStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x3F9010", Offset = "0x3F7C10", VA = "0x1803F9010")]
	public static bool PotatoAoeRange(ZombieStatus theZombieStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AoeDamage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ArmorZombie
using Il2CppDummyDll;

[Token(Token = "0x200028B")]
public class ArmorZombie : Zombie
{
	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ArmorZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Attacker
using Il2CppDummyDll;

[Token(Token = "0x200013C")]
public class Attacker : Plant
{
	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Attacker()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// AudioManager
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200033F")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	[CompilerGenerated]
	private sealed class <PlaySoundCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC1")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC2")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC3")]
		[FieldOffset(Offset = "0x20")]
		public AudioManager <>4__this;

		[Token(Token = "0x4000AC4")]
		[FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x4000AC5")]
		[FieldOffset(Offset = "0x30")]
		public float volume;

		[Token(Token = "0x4000AC6")]
		[FieldOffset(Offset = "0x34")]
		public float pitch;

		[Token(Token = "0x4000AC7")]
		[FieldOffset(Offset = "0x38")]
		private AudioSource <source>5__2;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <PlaySoundCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x3E0960", Offset = "0x3DF560", VA = "0x1803E0960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x3E0B40", Offset = "0x3DF740", VA = "0x1803E0B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABF")]
	[FieldOffset(Offset = "0x0")]
	private static AudioManager instance;

	[Token(Token = "0x4000AC0")]
	[FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x17000074")]
	public static AudioManager Instance
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x3BE710", Offset = "0x3BD310", VA = "0x1803BE710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x3BE510", Offset = "0x3BD110", VA = "0x1803BE510")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x3BE650", Offset = "0x3BD250", VA = "0x1803BE650")]
	public void PlaySound(AudioClip clip, float volume = 1f, float pitch = 1f)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x3BE5A0", Offset = "0x3BD1A0", VA = "0x1803BE5A0")]
	[IteratorStateMachine(typeof(<PlaySoundCoroutine>d__6))]
	private IEnumerator PlaySoundCoroutine(AudioClip clip, float volume, float pitch)
	{
		return null;
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public AudioManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BackToAlmanac
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000073")]
public class BackToAlmanac : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x4000255")]
	[FieldOffset(Offset = "0x28")]
	private Sprite originSprite;

	[Token(Token = "0x4000256")]
	[FieldOffset(Offset = "0x30")]
	private Vector3 originPosition;

	[Token(Token = "0x4000257")]
	[FieldOffset(Offset = "0x40")]
	private SpriteRenderer r;

	[Token(Token = "0x4000258")]
	[FieldOffset(Offset = "0x48")]
	public int type;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x4259C0", Offset = "0x4245C0", VA = "0x1804259C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x425840", Offset = "0x424440", VA = "0x180425840")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x425870", Offset = "0x424470", VA = "0x180425870")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x425790", Offset = "0x424390", VA = "0x180425790")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x4258D0", Offset = "0x4244D0", VA = "0x1804258D0")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BackToAlmanac()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BackToIndex
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200037D")]
public class BackToIndex : UIBtn
{
	[Token(Token = "0x4000C30")]
	[FieldOffset(Offset = "0x60")]
	public GameObject firstBtns;

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x3E8030", Offset = "0x3E6C30", VA = "0x1803E8030", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BackToIndex()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BalloonZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002BE")]
public class BalloonZombie : Zombie
{
	[Token(Token = "0x4000805")]
	[FieldOffset(Offset = "0x220")]
	protected bool fall;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x370C00", Offset = "0x36F800", VA = "0x180370C00", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x370CA0", Offset = "0x36F8A0", VA = "0x180370CA0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x370BD0", Offset = "0x36F7D0", VA = "0x180370BD0", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x3707A0", Offset = "0x36F3A0", VA = "0x1803707A0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x370980", Offset = "0x36F580", VA = "0x180370980", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x370850", Offset = "0x36F450", VA = "0x180370850", Slot = "55")]
	public virtual void Fall()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x3709B0", Offset = "0x36F5B0", VA = "0x1803709B0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x370A70", Offset = "0x36F670", VA = "0x180370A70", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BalloonZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BaseMenu
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200037B")]
public class BaseMenu : MonoBehaviour
{
	[Token(Token = "0x4000C2E")]
	[FieldOffset(Offset = "0x20")]
	private readonly List<Collider2D> collider2Ds;

	[Token(Token = "0x4000C2F")]
	[FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _interactable;

	[Token(Token = "0x1700007B")]
	public bool Interactable
	{
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x3E8420", Offset = "0x3E7020", VA = "0x1803E8420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x3E8430", Offset = "0x3E7030", VA = "0x1803E8430")]
		set
		{
		}
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x3E80F0", Offset = "0x3E6CF0", VA = "0x1803E80F0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x3E8100", Offset = "0x3E6D00", VA = "0x1803E8100")]
	protected void GetCol()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
	public virtual void OnExit()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x3E8330", Offset = "0x3E6F30", VA = "0x1803E8330")]
	public void PopMenu()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x3E82C0", Offset = "0x3E6EC0", VA = "0x1803E82C0")]
	public void PopAllMenu()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x3E83A0", Offset = "0x3E6FA0", VA = "0x1803E83A0")]
	public BaseMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BaseMoveWay
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000E6")]
public class BaseMoveWay : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[FieldOffset(Offset = "0x20")]
	public Bullet bullet;

	[Token(Token = "0x40003A5")]
	[FieldOffset(Offset = "0x28")]
	public Bullet.MoveWay theMoveWay;

	[Token(Token = "0x40003A6")]
	[FieldOffset(Offset = "0x30")]
	public Transform shadow;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "4")]
	protected virtual void PositionUpdate()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
	protected virtual void ShadowUpdate()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x44ED30", Offset = "0x44D930", VA = "0x18044ED30")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x44ED10", Offset = "0x44D910", VA = "0x18044ED10")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BaseMoveWay()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BasePlayer
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D7")]
public class BasePlayer : MonoBehaviour
{
	[Token(Token = "0x40010B7")]
	[FieldOffset(Offset = "0x20")]
	protected bool isMoving;

	[Token(Token = "0x40010B8")]
	[FieldOffset(Offset = "0x24")]
	protected Vector2 targetPosition;

	[Token(Token = "0x40010B9")]
	[FieldOffset(Offset = "0x2C")]
	protected float speed;

	[Token(Token = "0x40010BA")]
	[FieldOffset(Offset = "0x30")]
	public string ipEndPoint;

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x430D80", Offset = "0x42F980", VA = "0x180430D80")]
	protected void MoveTo(Vector2 position)
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x430D90", Offset = "0x42F990", VA = "0x180430D90")]
	protected void PositionUpdate()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x4310C0", Offset = "0x42FCC0", VA = "0x1804310C0")]
	public BasePlayer()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BasicZombie
using Il2CppDummyDll;

[Token(Token = "0x20002B0")]
public class BasicZombie : Zombie
{
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BasicZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BezierPathController
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000391")]
public class BezierPathController : MonoBehaviour
{
	[Token(Token = "0x4000C68")]
	[FieldOffset(Offset = "0x0")]
	public static BezierPathController Instance;

	[Token(Token = "0x4000C69")]
	[FieldOffset(Offset = "0x20")]
	public Transform t;

	[Token(Token = "0x4000C6A")]
	[FieldOffset(Offset = "0x28")]
	public bool debug;

	[Token(Token = "0x4000C6B")]
	[FieldOffset(Offset = "0x30")]
	public GameObject ballPrefab;

	[Token(Token = "0x4000C6C")]
	[FieldOffset(Offset = "0x38")]
	public List<GameObject> controlPointList;

	[Token(Token = "0x4000C6D")]
	[FieldOffset(Offset = "0x40")]
	public int segmentsPerCurve;

	[Token(Token = "0x4000C6E")]
	[FieldOffset(Offset = "0x44")]
	public float r;

	[Token(Token = "0x4000C6F")]
	[FieldOffset(Offset = "0x48")]
	public List<Vector3> ballPointList;

	[Token(Token = "0x4000C70")]
	[FieldOffset(Offset = "0x50")]
	public float distance;

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x3E8680", Offset = "0x3E7280", VA = "0x1803E8680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x3E8D60", Offset = "0x3E7960", VA = "0x1803E8D60")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x3E89F0", Offset = "0x3E75F0", VA = "0x1803E89F0")]
	private List<Vector3> GetDrawingPoints(List<Vector3> controlPoints, int segmentsPerCurve)
	{
		return null;
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x3E8890", Offset = "0x3E7490", VA = "0x1803E8890")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x3E96D0", Offset = "0x3E82D0", VA = "0x1803E96D0")]
	public BezierPathController()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigChomper
using Il2CppDummyDll;

[Token(Token = "0x2000161")]
public class BigChomper : Chomper
{
	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x4AB300", Offset = "0x4A9F00", VA = "0x1804AB300", Slot = "39")]
	protected override void SetAttackRange()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x4AACE0", Offset = "0x4A98E0", VA = "0x1804AACE0", Slot = "42")]
	public override void BiteEvent()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x4AAEA0", Offset = "0x4A9AA0", VA = "0x1804AAEA0")]
	private bool CheckBoss(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x4AAEF0", Offset = "0x4A9AF0", VA = "0x1804AAEF0", Slot = "43")]
	protected override void Chomp(Zombie zombie)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public BigChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigGatling
using Il2CppDummyDll;

[Token(Token = "0x20001FA")]
public class BigGatling : Shooter
{
	[Token(Token = "0x4000709")]
	[FieldOffset(Offset = "0x1C0")]
	protected float attackSpeed;

	[Token(Token = "0x400070A")]
	[FieldOffset(Offset = "0x1C4")]
	public float multiplier;

	[Token(Token = "0x400070B")]
	[FieldOffset(Offset = "0x1C8")]
	private int shootCount;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x4D35C0", Offset = "0x4D21C0", VA = "0x1804D35C0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x4D39E0", Offset = "0x4D25E0", VA = "0x1804D39E0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x4D3700", Offset = "0x4D2300", VA = "0x1804D3700")]
	private void Raised()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x4D3710", Offset = "0x4D2310", VA = "0x1804D3710", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x4D3A40", Offset = "0x4D2640", VA = "0x1804D3A40")]
	public BigGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigGatlingRaised
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000054")]
public class BigGatlingRaised : StateMachineBehaviour
{
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x425A60", Offset = "0x424660", VA = "0x180425A60", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public BigGatlingRaised()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigPumpkin
using Il2CppDummyDll;

[Token(Token = "0x2000162")]
public class BigPumpkin : JackboxPumpkin
{
	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x4AB3A0", Offset = "0x4A9FA0", VA = "0x1804AB3A0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public BigPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000122")]
public class BigStar : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	public enum BigStarType
	{
		[Token(Token = "0x40004B1")]
		Default,
		[Token(Token = "0x40004B2")]
		SuperStar,
		[Token(Token = "0x40004B3")]
		UltimateStar,
		[Token(Token = "0x40004B4")]
		IronStar,
		[Token(Token = "0x40004B5")]
		PickaxeStar,
		[Token(Token = "0x40004B6")]
		SolarStar
	}

	[Token(Token = "0x40004A8")]
	[FieldOffset(Offset = "0x20")]
	private readonly float g;

	[Token(Token = "0x40004A9")]
	[FieldOffset(Offset = "0x24")]
	private float speedX;

	[Token(Token = "0x40004AA")]
	[FieldOffset(Offset = "0x28")]
	private float speedY;

	[Token(Token = "0x40004AB")]
	[FieldOffset(Offset = "0x2C")]
	private bool isLand;

	[Token(Token = "0x40004AC")]
	[FieldOffset(Offset = "0x30")]
	private float minY;

	[Token(Token = "0x40004AD")]
	[FieldOffset(Offset = "0x34")]
	public BigStarType type;

	[Token(Token = "0x40004AE")]
	[FieldOffset(Offset = "0x38")]
	public bool zombie;

	[Token(Token = "0x40004AF")]
	[FieldOffset(Offset = "0x39")]
	private bool sun;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x4783D0", Offset = "0x476FD0", VA = "0x1804783D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x479100", Offset = "0x477D00", VA = "0x180479100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x4793B0", Offset = "0x477FB0", VA = "0x1804793B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x479570", Offset = "0x478170", VA = "0x180479570")]
	private void ZombieCrash()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x478420", Offset = "0x477020", VA = "0x180478420")]
	private void Crash()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x478C10", Offset = "0x477810", VA = "0x180478C10")]
	private void CreateStars(BulletType bulletType)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x479AD0", Offset = "0x4786D0", VA = "0x180479AD0")]
	public BigStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigSword
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000124")]
public class BigSword : MonoBehaviour
{
	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <Enumerator>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004BE")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BF")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C0")]
		[FieldOffset(Offset = "0x20")]
		public BigSword <>4__this;

		[Token(Token = "0x40004C1")]
		[FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Enumerator>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x48A980", Offset = "0x489580", VA = "0x18048A980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x48AB40", Offset = "0x489740", VA = "0x18048AB40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B7")]
	[FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 targetPosition;

	[Token(Token = "0x40004B8")]
	[FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool land;

	[Token(Token = "0x40004B9")]
	[FieldOffset(Offset = "0x2C")]
	private float moveSpeed;

	[Token(Token = "0x40004BA")]
	[FieldOffset(Offset = "0x30")]
	public Plant plant;

	[Token(Token = "0x40004BB")]
	[FieldOffset(Offset = "0x38")]
	public Action<Vector2> action;

	[Token(Token = "0x40004BC")]
	[FieldOffset(Offset = "0x40")]
	private SpriteRenderer r;

	[Token(Token = "0x40004BD")]
	[FieldOffset(Offset = "0x48")]
	private SortingGroup sortingGroup;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x479F30", Offset = "0x478B30", VA = "0x180479F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x47A040", Offset = "0x478C40", VA = "0x18047A040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x479AF0", Offset = "0x4786F0", VA = "0x180479AF0")]
	private void AttackZombies()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x47A050", Offset = "0x478C50", VA = "0x18047A050")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x479FD0", Offset = "0x478BD0", VA = "0x180479FD0")]
	[IteratorStateMachine(typeof(<Enumerator>d__11))]
	private IEnumerator Enumerator()
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x47A440", Offset = "0x479040", VA = "0x18047A440")]
	public BigSword()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BigWallNut
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000163")]
public class BigWallNut : Plant
{
	[Token(Token = "0x2000164")]
	public struct DamageZombie
	{
		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Zombie Zombie;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int dmg;
	}

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private readonly List<DamageZombie> damageZombies;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x4AB9D0", Offset = "0x4AA5D0", VA = "0x1804AB9D0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x4AB3D0", Offset = "0x4A9FD0", VA = "0x1804AB3D0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x4AB560", Offset = "0x4AA160", VA = "0x1804AB560")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x4AB6E0", Offset = "0x4AA2E0", VA = "0x1804AB6E0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "16")]
	public override void Crashed(int type = 0, int soundid = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "15")]
	public override void Die(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x4ABAD0", Offset = "0x4AA6D0", VA = "0x1804ABAD0")]
	public BigWallNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BilliardBall
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000063")]
public class BilliardBall : MonoBehaviour
{
	[Token(Token = "0x2000064")]
	public enum BilliardBallType
	{
		[Token(Token = "0x400020D")]
		Normal,
		[Token(Token = "0x400020E")]
		Cherry,
		[Token(Token = "0x400020F")]
		Ice,
		[Token(Token = "0x4000210")]
		Iron,
		[Token(Token = "0x4000211")]
		Hypno,
		[Token(Token = "0x4000212")]
		Sun
	}

	[Token(Token = "0x4000207")]
	[FieldOffset(Offset = "0x20")]
	public Rigidbody2D rb;

	[Token(Token = "0x4000208")]
	[FieldOffset(Offset = "0x28")]
	private Vector2 v;

	[Token(Token = "0x4000209")]
	[FieldOffset(Offset = "0x30")]
	private Transform axis;

	[Token(Token = "0x400020A")]
	[FieldOffset(Offset = "0x38")]
	private SpriteRenderer r;

	[Token(Token = "0x400020B")]
	[FieldOffset(Offset = "0x40")]
	public BilliardBallType theBallType;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x425AE0", Offset = "0x4246E0", VA = "0x180425AE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x425BC0", Offset = "0x4247C0", VA = "0x180425BC0")]
	public void Hit(Vector2 rodPositon, float force)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x426440", Offset = "0x425040", VA = "0x180426440")]
	private void Update()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x425D10", Offset = "0x424910", VA = "0x180425D10")]
	private void OnCollisionEnter2D(Collision2D collision)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x425E50", Offset = "0x424A50", VA = "0x180425E50")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BilliardBall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BilliardManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000065")]
public class BilliardManager : MonoBehaviour
{
	[Token(Token = "0x4000213")]
	[FieldOffset(Offset = "0x0")]
	public static BilliardManager Instance;

	[Token(Token = "0x4000214")]
	[FieldOffset(Offset = "0x20")]
	public List<GameObject> prefabs;

	[Token(Token = "0x4000215")]
	[FieldOffset(Offset = "0x28")]
	public BilliardBall whiteBall;

	[Token(Token = "0x4000216")]
	[FieldOffset(Offset = "0x30")]
	public BilliardRod billiardRod;

	[Token(Token = "0x4000217")]
	[FieldOffset(Offset = "0x38")]
	public List<BilliardBall> billiardBalls;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x426840", Offset = "0x425440", VA = "0x180426840")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x426CE0", Offset = "0x4258E0", VA = "0x180426CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x426AB0", Offset = "0x4256B0", VA = "0x180426AB0")]
	public BilliardBall SetBall(int theColumn, int theRow, BilliardBall.BilliardBallType theBallType)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x426D10", Offset = "0x425910", VA = "0x180426D10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x4268A0", Offset = "0x4254A0", VA = "0x1804268A0")]
	private void RodUpdate()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x426D90", Offset = "0x425990", VA = "0x180426D90")]
	public BilliardManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BilliardRod
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000066")]
public class BilliardRod : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x4000219")]
	[FieldOffset(Offset = "0x24")]
	private bool forcing;

	[Token(Token = "0x400021A")]
	[FieldOffset(Offset = "0x28")]
	private float currentForce;

	[Token(Token = "0x400021B")]
	[FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x400021C")]
	[FieldOffset(Offset = "0x30")]
	public GameObject sprites;

	[Token(Token = "0x400021D")]
	[FieldOffset(Offset = "0x38")]
	public LineRenderer line;

	[Token(Token = "0x400021E")]
	[FieldOffset(Offset = "0x40")]
	private int level;

	[Token(Token = "0x400021F")]
	[FieldOffset(Offset = "0x44")]
	private bool clicking;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x426E50", Offset = "0x425A50", VA = "0x180426E50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x4271C0", Offset = "0x425DC0", VA = "0x1804271C0")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x427840", Offset = "0x426440", VA = "0x180427840")]
	public bool Upgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x426EA0", Offset = "0x425AA0", VA = "0x180426EA0")]
	private void ForceUpdate()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x426FD0", Offset = "0x425BD0", VA = "0x180426FD0")]
	private void HitBall()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x4273B0", Offset = "0x425FB0", VA = "0x1804273B0")]
	public void PositionUpdate()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BilliardRod()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BlackFootballZombie
using Il2CppDummyDll;

[Token(Token = "0x200028C")]
public class BlackFootballZombie : TallNutFootballZ
{
	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x35BC50", Offset = "0x35A850", VA = "0x18035BC50", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x35BBD0", Offset = "0x35A7D0", VA = "0x18035BBD0", Slot = "50")]
	protected override void AttackEffect(Plant plant)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BlackFootballZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BlackHole
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000126")]
public class BlackHole : MonoBehaviour
{
	[Token(Token = "0x40004C2")]
	[FieldOffset(Offset = "0x20")]
	private int _row;

	[Token(Token = "0x40004C3")]
	[FieldOffset(Offset = "0x24")]
	public int theDamage;

	[Token(Token = "0x40004C4")]
	[FieldOffset(Offset = "0x28")]
	public SortingGroup g;

	[Token(Token = "0x40004C5")]
	[FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x40004C6")]
	[FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x40004C7")]
	[FieldOffset(Offset = "0x40")]
	private ParticleSystem particle;

	[Token(Token = "0x40004C8")]
	[FieldOffset(Offset = "0x48")]
	private bool dying;

	[Token(Token = "0x40004C9")]
	[FieldOffset(Offset = "0x4C")]
	private LayerMask zombieLayer;

	[Token(Token = "0x17000027")]
	public int Row
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x47AC20", Offset = "0x479820", VA = "0x18047AC20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x47AC30", Offset = "0x479830", VA = "0x18047AC30")]
		set
		{
		}
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x47A450", Offset = "0x479050", VA = "0x18047A450")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x47AB10", Offset = "0x479710", VA = "0x18047AB10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x47AB80", Offset = "0x479780", VA = "0x18047AB80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x47A990", Offset = "0x479590", VA = "0x18047A990")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x47A920", Offset = "0x479520", VA = "0x18047A920")]
	private void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x47A8A0", Offset = "0x4794A0", VA = "0x18047A8A0")]
	private void Die()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x47A5D0", Offset = "0x4791D0", VA = "0x18047A5D0")]
	private void Destory()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BlackHole()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Blover
using Il2CppDummyDll;

[Token(Token = "0x2000165")]
public class Blover : Plant
{
	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x4AC1B0", Offset = "0x4AADB0", VA = "0x1804AC1B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x4ABF30", Offset = "0x4AAB30", VA = "0x1804ABF30", Slot = "39")]
	protected virtual void AnimBlow()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x339B70", Offset = "0x338770", VA = "0x180339B70")]
	protected void DelayDie()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x4AC040", Offset = "0x4AAC40", VA = "0x1804AC040", Slot = "40")]
	protected virtual void BlowZombie()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Blover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BloverPumpkin
using Il2CppDummyDll;

[Token(Token = "0x2000166")]
public class BloverPumpkin : Pumpkin
{
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x4ABD00", Offset = "0x4AA900", VA = "0x1804ABD00", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x4ABB50", Offset = "0x4AA750", VA = "0x1804ABB50", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public BloverPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BloverUmbrella
using Il2CppDummyDll;

[Token(Token = "0x2000167")]
public class BloverUmbrella : Plant
{
	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x4ABDE0", Offset = "0x4AA9E0", VA = "0x1804ABDE0")]
	public void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x4ABD20", Offset = "0x4AA920", VA = "0x1804ABD20")]
	public void BlockBungi(BungiZombie zombie)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public BloverUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Blow
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200007A")]
public class Blow : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	private enum BlowType
	{
		[Token(Token = "0x4000269")]
		Default,
		[Token(Token = "0x400026A")]
		BlowKirov,
		[Token(Token = "0x400026B")]
		BlowZombieOnWater,
		[Token(Token = "0x400026C")]
		BlowIronBalloon,
		[Token(Token = "0x400026D")]
		BombThrower
	}

	[Token(Token = "0x4000262")]
	[FieldOffset(Offset = "0x20")]
	private Zombie zombie;

	[Token(Token = "0x4000263")]
	[FieldOffset(Offset = "0x28")]
	private BlowType blowType;

	[Token(Token = "0x4000264")]
	[FieldOffset(Offset = "0x2C")]
	private float blowTime;

	[Token(Token = "0x4000265")]
	[FieldOffset(Offset = "0x30")]
	private IronBalloonZombie ironBalloonZombie;

	[Token(Token = "0x4000266")]
	[FieldOffset(Offset = "0x38")]
	private BombThrower bombThrower;

	[Token(Token = "0x4000267")]
	[FieldOffset(Offset = "0x40")]
	private float vision;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x4279E0", Offset = "0x4265E0", VA = "0x1804279E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x427C00", Offset = "0x426800", VA = "0x180427C00")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Blow()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Board
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200007E")]
public class Board : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007F")]
	public class BoxInfo
	{
		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Plant> plants;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int currentLightLevel;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boxType;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waterBoxY;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waterBoxYDeviation;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int potNum;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lilyNum;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ladderNum;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int graveNum;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int pitNum;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int disableLevel;

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public BoxInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000080")]
	public struct BoardTag
	{
		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool zombieRevive;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isScaredyDream;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool isTowerDefence;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool isShooting;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool newShooting;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool isSeedRain;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool isIndestructible;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool isColumn;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isSuperRandom;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool isUltimateSuperRandom;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool isNight;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool isBigMap;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isEndless;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool isTravel;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool isCustom;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool isEditor;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableTravelPlant;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool enableAllTravelPlant;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool enableTravelBuff;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool isRoof;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isGarden;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isMirror;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool isConvey;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool isExchange;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool shooting_loon;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isBoss;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isBoss2;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool isFreeCardSelect;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isTutor;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool isObsidianImp;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool isDixMix;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool isSingle;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bungiBattle;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isBejeweled;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool isScaryPot;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool isMidMap;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isMidMap2;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isLookStar;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isGardenBattle;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool isRandomMix;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isRandomMix2;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool freeGloveZombie;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool disableMower;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isHappyRandom;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool oppsiteBuff;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool pvpScaryPot;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool ultimateEndless;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool isHammerZombie;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool fastZombie;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isHugeGravity;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool zombieSplit;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool fullStrike;
	}

	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <CheckZombieNum>d__182 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Board <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000241")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <CheckZombieNum>d__182(int <>1__state)
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x42FD70", Offset = "0x42E970", VA = "0x18042FD70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x42FFA0", Offset = "0x42EBA0", VA = "0x18042FFA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[CompilerGenerated]
	private sealed class <DelayNextRound>d__197 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Board <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000245")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000247")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DelayNextRound>d__197(int <>1__state)
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x42FFE0", Offset = "0x42EBE0", VA = "0x18042FFE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x430350", Offset = "0x42EF50", VA = "0x180430350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Board Instance;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlantStatistics> plantStatistics;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Plant> plantArray;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Plant> plantHead;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GardenPlant> gardenPlants;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Bullet> bulletArray;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Zombie> zombieArray;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Zombie> zombieHead;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Obstacle> zombieBalls;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GridItem> griditemArray;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] mowerArray;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FireLine[] fireLineArray;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject fog;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float[] iceRoadX;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float[] iceRoadFadeTime;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int[] roadType;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int[,] boxType;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BoxInfo[,] boxInfos;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<PlantType> seedPool;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float plantMaxVisionX;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float boardMaxY;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float boardMinY;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float boardMaxX;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float boardMinX;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float zombieMaxX;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float zombieMinX;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int theSun;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int extraSun;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int theUsedSun;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int theMoney;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int enermyCount;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int theTotalNumOfZombie;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int theTotalNumOfCoin;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int theTotalNumOfPlant;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int plantedCount;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int theCurrentPlantCount;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int theLimPlantCount;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int theWave;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int theMaxWave;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int theSurvivalMaxRound;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int theCurrentSurvivalRound;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int currentBulletNum;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int musicType;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int rowNum;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int columnNum;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int izDropCount;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int killZombieCount;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int savedID;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float thePoints;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float currentRoundPoint;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float zombieTotalHealth;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float zombieCurrentHealth;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float zombieHealthUpdater;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float holdOnTime;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float iceDoomFreezeTime;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float newZombieWaveCountDown;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float nextZombieWaveCountDown;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float happyRandomCardTimer;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float happyRecoverTimer;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float punishTime;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float bigStarPassiveCountDown;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float solarCountDown;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float solarMaxTime;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float bigStarPassiveMaxTime;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float bigStarActiveCountDown;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float bigStarActiveMaxTime;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float ultimateStarCountDown;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float ultimateStarMaxTime;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float zombieHealthAdder;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float zombieDamageAdder;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float zombieSpeedAdder;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float zombieBasicSpeed;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float lastRandomBuffTime;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float randomPresentTime;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float moreMultiplier;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float updatingTime;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public bool isEveStart;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	public bool isEveStarted;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool[] disAllowSetZombie;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool isAutoEve;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool isEveBalanced;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	public bool isIZ;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
	public bool over;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool freeCD;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool allowSummonZombie;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool droppedGardenPlant;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	public bool cardSelectable;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool cardBank;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	public bool freeSet;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
	public bool showPlantHealth;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
	public bool showZombieHealth;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public bool uniqueTrigger;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	public bool moreZombiesComing;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
	public bool startMove;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
	public bool fallSun;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool happyRandomCard;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool boss2;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	public bool goldHypnoAward;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
	public bool rightPutPot;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public bool randomCard;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public SettlementData settlementData;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public long startTime;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LayerMask zombieBulletCallBack;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public LayerMask plantBulletCallBack;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public List<Transform> plane;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public List<Transform> planeRoof;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public List<Plant>[] fallingPlants;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Dictionary<ZombieType, int> enermyCountDic;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Plant controledPlant;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public BoardTag boardTag;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public BoardGame boardGame;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public SceneType sceneType;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float time;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float theFallingSunCountDown;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private float hugeWaveCountDown;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool isHugeWave;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float eveCountDown;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float eveCurrentTime;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float randomDataUpdateTimer;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float zombieReduceDamage;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float tipTime;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float bejeweledTimer;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public int maxMatchCount;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public int matchCount;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public HashSet<PlantType> upgradedTypes;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int combo;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Transform UIParent;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x31E5D0", Offset = "0x31D1D0", VA = "0x18031E5D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x330810", Offset = "0x32F410", VA = "0x180330810")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x331F60", Offset = "0x330B60", VA = "0x180331F60")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x327E90", Offset = "0x326A90", VA = "0x180327E90")]
	private void RandomCardUpdate()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x332740", Offset = "0x331340", VA = "0x180332740")]
	public void UseSun(int count)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x3236D0", Offset = "0x3222D0", VA = "0x1803236D0")]
	public void GetSun(int count, int r = 1, bool save = true)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x32D730", Offset = "0x32C330", VA = "0x18032D730")]
	public void SetSun(int count)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x322BA0", Offset = "0x3217A0", VA = "0x180322BA0")]
	public PlantType GetBejeweledPlant()
	{
		return default(PlantType);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x3284E0", Offset = "0x3270E0", VA = "0x1803284E0")]
	public void SetBejeweledPlant()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x328000", Offset = "0x326C00", VA = "0x180328000")]
	public void RefrashBejeweldPlant()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x325170", Offset = "0x323D70", VA = "0x180325170")]
	private void MoveControlPlant(int index)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x31F3D0", Offset = "0x31DFD0", VA = "0x18031F3D0")]
	private void ControledPlantUpdate()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x32FD10", Offset = "0x32E910", VA = "0x18032FD10")]
	public void ShowPlantHealth()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x32FF10", Offset = "0x32EB10", VA = "0x18032FF10")]
	public void ShowZombieHealth()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x3230D0", Offset = "0x321CD0", VA = "0x1803230D0")]
	private void GetPlane()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x32A130", Offset = "0x328D30", VA = "0x18032A130")]
	private void SetLayerMask()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x3286D0", Offset = "0x3272D0", VA = "0x1803286D0")]
	private void SetBoundaries()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x32DC60", Offset = "0x32C860", VA = "0x18032DC60")]
	private void SetUniqueLevel()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x321830", Offset = "0x320430", VA = "0x180321830")]
	private void CustomMapSettings()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x32A5C0", Offset = "0x3291C0", VA = "0x18032A5C0")]
	private void SetPrePlants()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x329DF0", Offset = "0x3289F0", VA = "0x180329DF0")]
	private void SetGrave()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x3260D0", Offset = "0x324CD0", VA = "0x1803260D0")]
	private void NormalSceneSettings(SceneType type)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x3243D0", Offset = "0x322FD0", VA = "0x1803243D0")]
	private void InitIZSettings()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x3241B0", Offset = "0x322DB0", VA = "0x1803241B0")]
	private void InitBoxInfo()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x332750", Offset = "0x331350", VA = "0x180332750")]
	private void WaterYUpdate()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x328800", Offset = "0x327400", VA = "0x180328800")]
	private void SetDeviation()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x3227D0", Offset = "0x3213D0", VA = "0x1803227D0")]
	private void EveUpdate()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x32D620", Offset = "0x32C220", VA = "0x18032D620")]
	private void SetRandomZombies(float t)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x331980", Offset = "0x330580", VA = "0x180331980")]
	private bool WheatLimit(PlantType plantType)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x329930", Offset = "0x328530", VA = "0x180329930")]
	public GameObject SetEvePlants(int theColumn, int theRow, bool fromWheat = false)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x324BE0", Offset = "0x3237E0", VA = "0x180324BE0")]
	private void LevelUpdate()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x324920", Offset = "0x323520", VA = "0x180324920")]
	private void LevelUpUpdate()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x328140", Offset = "0x326D40", VA = "0x180328140")]
	private void RefreshHappyRandomCards()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x322F80", Offset = "0x321B80", VA = "0x180322F80")]
	public void GetHappyRandomCard()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x31ED30", Offset = "0x31D930", VA = "0x18031ED30")]
	private void BejeweledUpdate()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x31F010", Offset = "0x31DC10", VA = "0x18031F010")]
	private bool CheckMatch(Plant plant, bool tip = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x323C00", Offset = "0x322800", VA = "0x180323C00")]
	private void HeighLightPlant(List<Plant> plants)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x3300E0", Offset = "0x32ECE0", VA = "0x1803300E0")]
	private void SinglePresentUpdate()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x321160", Offset = "0x31FD60", VA = "0x180321160")]
	private void CreateRandomPresent()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x331A10", Offset = "0x330610", VA = "0x180331A10")]
	private void UniqueEvent()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x3240A0", Offset = "0x322CA0", VA = "0x1803240A0")]
	private void IceRoadUpdate()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x331DC0", Offset = "0x3309C0", VA = "0x180331DC0")]
	private void UpdateZombieHealth()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x330AA0", Offset = "0x32F6A0", VA = "0x180330AA0")]
	private void SunUpdate()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x328280", Offset = "0x326E80", VA = "0x180328280")]
	private void SeedRainUpdate()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x323660", Offset = "0x322260", VA = "0x180323660")]
	private PlantType GetSeedInPool()
	{
		return default(PlantType);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x324740", Offset = "0x323340", VA = "0x180324740")]
	private void InitSeedPool()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x325430", Offset = "0x324030", VA = "0x180325430")]
	private void NewZombieUpdate()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x331100", Offset = "0x32FD00", VA = "0x180331100")]
	private void SupplyGrave()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x323960", Offset = "0x322560", VA = "0x180323960")]
	private void HammerSummonZombie()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x326880", Offset = "0x325480", VA = "0x180326880")]
	private void NormalSummonZombies()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x3313D0", Offset = "0x32FFD0", VA = "0x1803313D0")]
	private void SurvivalPunish()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x329FF0", Offset = "0x328BF0", VA = "0x180329FF0")]
	public void SetHealthInTravel(Zombie z)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x32A380", Offset = "0x328F80", VA = "0x18032A380")]
	private void SetMoreHealth(Zombie z)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x31F2B0", Offset = "0x31DEB0", VA = "0x18031F2B0")]
	[IteratorStateMachine(typeof(<CheckZombieNum>d__182))]
	private IEnumerator CheckZombieNum()
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x3233D0", Offset = "0x321FD0", VA = "0x1803233D0")]
	private int GetRandomLandRow()
	{
		return default(int);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x323530", Offset = "0x322130", VA = "0x180323530")]
	private int GetRandomWaterRow()
	{
		return default(int);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x327D10", Offset = "0x326910", VA = "0x180327D10")]
	private int[] PickUniqueRandomNumbers(int min, int max, int count)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x328920", Offset = "0x327520", VA = "0x180328920")]
	public void SetDoom(int theColumn, int theRow, bool setPit, bool iceDoom = false, [Optional] Vector2 position, int damage = 1800, int effect = 0)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x32A440", Offset = "0x329040", VA = "0x18032A440")]
	private void SetPit(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x31F8C0", Offset = "0x31E4C0", VA = "0x18031F8C0")]
	public void CreateCherryExplode(Vector2 v, int theRow, int bombType = 0, int damage = 1800)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x320810", Offset = "0x31F410", VA = "0x180320810")]
	public void CreateFreeze(Vector2 pos)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x31FF20", Offset = "0x31EB20", VA = "0x18031FF20")]
	public void CreateFireLine(int theFireRow, int damage = 1800, bool fromZombie = false, bool fix = false, bool shake = true)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x31FBE0", Offset = "0x31E7E0", VA = "0x18031FBE0")]
	private void CreateFireAnim(int row)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x322980", Offset = "0x321580", VA = "0x180322980")]
	public Bullet FirePeas(Bullet ob, Plant torch, int damage, BulletType theBulletType)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x322250", Offset = "0x320E50", VA = "0x180322250")]
	public void EnterNextRound()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x331870", Offset = "0x330470", VA = "0x180331870")]
	private void Travel()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x32FC00", Offset = "0x32E800", VA = "0x18032FC00")]
	private void ShowChoice(int round)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x3317F0", Offset = "0x3303F0", VA = "0x1803317F0")]
	public void TravelNextRound()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x321ED0", Offset = "0x320AD0", VA = "0x180321ED0")]
	[IteratorStateMachine(typeof(<DelayNextRound>d__197))]
	private IEnumerator DelayNextRound()
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x330130", Offset = "0x32ED30", VA = "0x180330130")]
	public void StartNextRound()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x31F320", Offset = "0x31DF20", VA = "0x18031F320")]
	public void ClearTheBoard()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x32D940", Offset = "0x32C540", VA = "0x18032D940")]
	private void SetSuperTorch()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x32D740", Offset = "0x32C340", VA = "0x18032D740")]
	private void SetSuperKelp()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x3316A0", Offset = "0x3302A0", VA = "0x1803316A0")]
	public void TempAddLightLevel(float time)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x321DC0", Offset = "0x3209C0", VA = "0x180321DC0")]
	private void DecreaseLightLevel()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x32A2B0", Offset = "0x328EB0", VA = "0x18032A2B0")]
	public void SetMaxLightLevel(int level = 4)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x324F00", Offset = "0x323B00", VA = "0x180324F00")]
	private void MeteoriteUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x3213B0", Offset = "0x31FFB0", VA = "0x1803213B0")]
	private void CreateSolar()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x327840", Offset = "0x326440", VA = "0x180327840")]
	private void PassiveCreateMeteorite()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x31E3B0", Offset = "0x31CFB0", VA = "0x18031E3B0")]
	public void ActiveCreateMeteorite()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x321070", Offset = "0x31FC70", VA = "0x180321070")]
	private void CreatePassiveMateorite()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x31F7D0", Offset = "0x31E3D0", VA = "0x18031F7D0")]
	private void CreateActiveMateorite()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x327AE0", Offset = "0x3266E0", VA = "0x180327AE0")]
	private void PassiveUltimateMeteorite()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x3216D0", Offset = "0x3202D0", VA = "0x1803216D0")]
	private void CreateUltimateMateorite()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x321F40", Offset = "0x320B40", VA = "0x180321F40")]
	private void EnableTravelBuff(bool add = true, bool zombie = false)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x330910", Offset = "0x32F510", VA = "0x180330910")]
	private void StatisticsPlant(PlantType thePlantType)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x327550", Offset = "0x326150", VA = "0x180327550")]
	public void OnPlantCreate(Plant plant)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x327780", Offset = "0x326380", VA = "0x180327780")]
	public void OnPlantDie(Plant plant)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x331B00", Offset = "0x330700", VA = "0x180331B00")]
	public void UpdateRandomData(bool showText = false)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x323D00", Offset = "0x322900", VA = "0x180323D00")]
	private void HugeWaveEvent(int currentWave)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x3272B0", Offset = "0x325EB0", VA = "0x1803272B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x3328E0", Offset = "0x3314E0", VA = "0x1803328E0")]
	public Board()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BoardGame
using Il2CppDummyDll;

[Token(Token = "0x20003B7")]
public enum BoardGame
{
	[Token(Token = "0x4001018")]
	Default,
	[Token(Token = "0x4001019")]
	WheatProtection
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BombCherry
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000FF")]
public class BombCherry : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[FieldOffset(Offset = "0x20")]
	public bool isFromZombie;

	[Token(Token = "0x40003FF")]
	[FieldOffset(Offset = "0x24")]
	public int bombType;

	[Token(Token = "0x4000400")]
	[FieldOffset(Offset = "0x28")]
	public int bombRow;

	[Token(Token = "0x4000401")]
	[FieldOffset(Offset = "0x2C")]
	public bool attackAir;

	[Token(Token = "0x4000402")]
	[FieldOffset(Offset = "0x30")]
	public GameObject targetPlant;

	[Token(Token = "0x4000403")]
	[FieldOffset(Offset = "0x38")]
	private Plant target;

	[Token(Token = "0x4000404")]
	[FieldOffset(Offset = "0x40")]
	private Board board;

	[Token(Token = "0x4000405")]
	[FieldOffset(Offset = "0x48")]
	public int explodeDamage;

	[Token(Token = "0x4000406")]
	[FieldOffset(Offset = "0x4C")]
	private int killCount;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x463690", Offset = "0x462290", VA = "0x180463690")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x464040", Offset = "0x462C40", VA = "0x180464040")]
	private void Start()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x463770", Offset = "0x462370", VA = "0x180463770")]
	private void Explode(Vector2 explosionPosition, float explosionRadius)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x464190", Offset = "0x462D90", VA = "0x180464190")]
	private void ZombieExplode(Vector2 explosionPosition, float explosionRadius)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x463C70", Offset = "0x462870", VA = "0x180463C70")]
	private void PlantTakeDamage(Plant plant)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x4636E0", Offset = "0x4622E0", VA = "0x1804636E0")]
	private bool CherryPumpkin(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x464680", Offset = "0x463280", VA = "0x180464680")]
	public BombCherry()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BombThrower
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002BF")]
public class BombThrower : KirovAirship
{
	[Token(Token = "0x4000806")]
	[FieldOffset(Offset = "0x228")]
	public GameObject patels1;

	[Token(Token = "0x4000807")]
	[FieldOffset(Offset = "0x230")]
	public GameObject patels2;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x370D70", Offset = "0x36F970", VA = "0x180370D70", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "55")]
	protected override void PlayMachineSound()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x370DA0", Offset = "0x36F9A0", VA = "0x180370DA0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x370DC0", Offset = "0x36F9C0", VA = "0x180370DC0", Slot = "57")]
	protected override void CreateBomb()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x371070", Offset = "0x36FC70", VA = "0x180371070", Slot = "8")]
	protected override void MoveUpdate()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x3710D0", Offset = "0x36FCD0", VA = "0x1803710D0", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x3710F0", Offset = "0x36FCF0", VA = "0x1803710F0")]
	public BombThrower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Boss_headAttackOver
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005E")]
public class Boss_headAttackOver : StateMachineBehaviour
{
	[Token(Token = "0x600016D")]
	[Address(RVA = "0x427FF0", Offset = "0x426BF0", VA = "0x180427FF0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Boss_headAttackOver()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Boss_headEnter
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005F")]
public class Boss_headEnter : StateMachineBehaviour
{
	[Token(Token = "0x600016F")]
	[Address(RVA = "0x428120", Offset = "0x426D20", VA = "0x180428120", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Boss_headEnter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Boss_headLeave
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000060")]
public class Boss_headLeave : StateMachineBehaviour
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0x4281F0", Offset = "0x426DF0", VA = "0x1804281F0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x428280", Offset = "0x426E80", VA = "0x180428280", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Boss_headLeave()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Boss_idle
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000061")]
public class Boss_idle : StateMachineBehaviour
{
	[Token(Token = "0x6000174")]
	[Address(RVA = "0x4282E0", Offset = "0x426EE0", VA = "0x1804282E0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Boss_idle()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Boss_rv
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000062")]
public class Boss_rv : StateMachineBehaviour
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x428340", Offset = "0x426F40", VA = "0x180428340", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x4283B0", Offset = "0x426FB0", VA = "0x1804283B0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Boss_rv()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BossStatusManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000085")]
public class BossStatusManager : MonoBehaviour
{
	[Token(Token = "0x6000249")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public BossStatusManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BoxType
using Il2CppDummyDll;

[Token(Token = "0x200007C")]
public enum BoxType
{
	[Token(Token = "0x400026F")]
	Grass,
	[Token(Token = "0x4000270")]
	Water,
	[Token(Token = "0x4000271")]
	Dirt,
	[Token(Token = "0x4000272")]
	Roof
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BrainMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000088")]
public class BrainMgr : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[FieldOffset(Offset = "0x20")]
	public GameObject[] brains;

	[Token(Token = "0x400033E")]
	[FieldOffset(Offset = "0x28")]
	private Board board;

	[Token(Token = "0x400033F")]
	[FieldOffset(Offset = "0x30")]
	public int winRoad;

	[Token(Token = "0x4000340")]
	[FieldOffset(Offset = "0x34")]
	public int loseRoadNum;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x428510", Offset = "0x427110", VA = "0x180428510")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x428560", Offset = "0x427160", VA = "0x180428560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x4286A0", Offset = "0x4272A0", VA = "0x1804286A0")]
	private void Victory()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x428420", Offset = "0x427020", VA = "0x180428420")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x4289D0", Offset = "0x4275D0", VA = "0x1804289D0")]
	public BrainMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bucket
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000103")]
public class Bucket : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private sealed class <Flash>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000417")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000418")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000419")]
		[FieldOffset(Offset = "0x20")]
		public Bucket <>4__this;

		[Token(Token = "0x400041A")]
		[FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x400041B")]
		[FieldOffset(Offset = "0x38")]
		private bool <decrease>5__3;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Flash>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x48AD40", Offset = "0x489940", VA = "0x18048AD40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x48AFF0", Offset = "0x489BF0", VA = "0x18048AFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040C")]
	[FieldOffset(Offset = "0x20")]
	public bool isLand;

	[Token(Token = "0x400040D")]
	[FieldOffset(Offset = "0x21")]
	public bool disappear;

	[Token(Token = "0x400040E")]
	[FieldOffset(Offset = "0x24")]
	public BucketType theBucketType;

	[Token(Token = "0x400040F")]
	[FieldOffset(Offset = "0x28")]
	protected Mouse m;

	[Token(Token = "0x4000410")]
	[FieldOffset(Offset = "0x30")]
	public float existTime;

	[Token(Token = "0x4000411")]
	[FieldOffset(Offset = "0x34")]
	protected float gravity;

	[Token(Token = "0x4000412")]
	[FieldOffset(Offset = "0x38")]
	private Vector2 velocity;

	[Token(Token = "0x4000413")]
	[FieldOffset(Offset = "0x40")]
	public Vector2 startPosition;

	[Token(Token = "0x4000414")]
	[FieldOffset(Offset = "0x48")]
	private bool isFlash;

	[Token(Token = "0x4000415")]
	[FieldOffset(Offset = "0x4C")]
	private readonly float verticalSpeed;

	[Token(Token = "0x4000416")]
	[FieldOffset(Offset = "0x50")]
	public Magnetshroom magnetShroom;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x47B5C0", Offset = "0x47A1C0", VA = "0x18047B5C0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x47B530", Offset = "0x47A130", VA = "0x18047B530")]
	public void PutDown()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x47BB00", Offset = "0x47A700", VA = "0x18047BB00", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x47ACC0", Offset = "0x4798C0", VA = "0x18047ACC0")]
	private void Die()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x47B130", Offset = "0x479D30", VA = "0x18047B130")]
	[IteratorStateMachine(typeof(<Flash>d__15))]
	private IEnumerator Flash()
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x47B2C0", Offset = "0x479EC0", VA = "0x18047B2C0")]
	protected void PositionUpdate()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x47B1A0", Offset = "0x479DA0", VA = "0x18047B1A0", Slot = "6")]
	public virtual void Pick()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x47BC80", Offset = "0x47A880", VA = "0x18047BC80", Slot = "7")]
	public virtual void Use()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x47BDF0", Offset = "0x47A9F0", VA = "0x18047BDF0")]
	public Bucket()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BucketFume
using Il2CppDummyDll;

[Token(Token = "0x20001FB")]
public class BucketFume : FumeShroom
{
	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x4D3A70", Offset = "0x4D2670", VA = "0x1804D3A70", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x4D3B40", Offset = "0x4D2740", VA = "0x1804D3B40", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public BucketFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BucketNutZ
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200028D")]
public class BucketNutZ : WallNutZ
{
	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x35BF50", Offset = "0x35AB50", VA = "0x18035BF50", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x35C0E0", Offset = "0x35ACE0", VA = "0x18035C0E0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x35BDE0", Offset = "0x35A9E0", VA = "0x18035BDE0", Slot = "43")]
	public override GameObject DropArmor()
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BucketNutZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BucketType
using Il2CppDummyDll;

[Token(Token = "0x2000344")]
public enum BucketType
{
	[Token(Token = "0x4000ACF")]
	Bucket,
	[Token(Token = "0x4000AD0")]
	Helmet,
	[Token(Token = "0x4000AD1")]
	Jackbox,
	[Token(Token = "0x4000AD2")]
	Pickaxe,
	[Token(Token = "0x4000AD3")]
	Machine,
	[Token(Token = "0x4000AD4")]
	SuperMachine,
	[Token(Token = "0x4000AD5")]
	Jumper,
	[Token(Token = "0x4000AD6")]
	Ladder,
	[Token(Token = "0x4000AD7")]
	IronHead,
	[Token(Token = "0x4000AD8")]
	RedIronHead,
	[Token(Token = "0x4000AD9")]
	Door,
	[Token(Token = "0x4000ADA")]
	PortalHeart
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BucketZombie
using Il2CppDummyDll;

[Token(Token = "0x200028E")]
public class BucketZombie : ArmorZombie
{
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x35C1F0", Offset = "0x35ADF0", VA = "0x18035C1F0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x35C370", Offset = "0x35AF70", VA = "0x18035C370", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BucketZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BucketZombieDuck
using Il2CppDummyDll;

[Token(Token = "0x200028F")]
public class BucketZombieDuck : BucketZombie
{
	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x35C100", Offset = "0x35AD00", VA = "0x18035C100", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public BucketZombieDuck()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BuffType
using Il2CppDummyDll;

[Token(Token = "0x2000351")]
public enum BuffType
{
	[Token(Token = "0x4000B29")]
	UnlockPlant,
	[Token(Token = "0x4000B2A")]
	AdvancedBuff,
	[Token(Token = "0x4000B2B")]
	UltimateBuff,
	[Token(Token = "0x4000B2C")]
	Debuff
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000089")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x200008A")]
	public enum MoveWay
	{
		[Token(Token = "0x400036C")]
		Jump = -1,
		[Token(Token = "0x400036D")]
		MoveRight,
		[Token(Token = "0x400036E")]
		Roll,
		[Token(Token = "0x400036F")]
		Free,
		[Token(Token = "0x4000370")]
		Puff,
		[Token(Token = "0x4000371")]
		Three_up,
		[Token(Token = "0x4000372")]
		Three_down,
		[Token(Token = "0x4000373")]
		Track,
		[Token(Token = "0x4000374")]
		Fly,
		[Token(Token = "0x4000375")]
		Fly2,
		[Token(Token = "0x4000376")]
		Left,
		[Token(Token = "0x4000377")]
		Stable,
		[Token(Token = "0x4000378")]
		Rounding,
		[Token(Token = "0x4000379")]
		LittleFly,
		[Token(Token = "0x400037A")]
		Throw,
		[Token(Token = "0x400037B")]
		Cannon,
		[Token(Token = "0x400037C")]
		Right_free,
		[Token(Token = "0x400037D")]
		Convolute,
		[Token(Token = "0x400037E")]
		Quick_throw,
		[Token(Token = "0x400037F")]
		Freefly,
		[Token(Token = "0x4000380")]
		Split_left,
		[Token(Token = "0x4000381")]
		Track_air_singleRow
	}

	[Token(Token = "0x200008B")]
	public enum SpecialBulletType
	{
		[Token(Token = "0x4000383")]
		Nothing,
		[Token(Token = "0x4000384")]
		Split_left,
		[Token(Token = "0x4000385")]
		Split_left2
	}

	[Token(Token = "0x4000341")]
	[FieldOffset(Offset = "0x20")]
	public Board board;

	[Token(Token = "0x4000342")]
	[FieldOffset(Offset = "0x28")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x4000343")]
	[FieldOffset(Offset = "0x30")]
	public Transform shadow;

	[Token(Token = "0x4000344")]
	[FieldOffset(Offset = "0x38")]
	public Rigidbody2D rb;

	[Token(Token = "0x4000345")]
	[FieldOffset(Offset = "0x40")]
	public Collider2D col;

	[Token(Token = "0x4000346")]
	[FieldOffset(Offset = "0x48")]
	public BaseMoveWay moveWay;

	[Token(Token = "0x4000347")]
	[FieldOffset(Offset = "0x50")]
	public LayerMask zombieLayer;

	[Token(Token = "0x4000348")]
	[FieldOffset(Offset = "0x54")]
	public BulletType theBulletType;

	[Token(Token = "0x4000349")]
	[FieldOffset(Offset = "0x58")]
	public float minX;

	[Token(Token = "0x400034A")]
	[FieldOffset(Offset = "0x5C")]
	public float minY;

	[Token(Token = "0x400034B")]
	[FieldOffset(Offset = "0x60")]
	public float maxX;

	[Token(Token = "0x400034C")]
	[FieldOffset(Offset = "0x64")]
	public float maxY;

	[Token(Token = "0x400034D")]
	[FieldOffset(Offset = "0x68")]
	public Zombie targetZombie;

	[Token(Token = "0x400034E")]
	[FieldOffset(Offset = "0x70")]
	public Plant targetPlant;

	[Token(Token = "0x400034F")]
	[FieldOffset(Offset = "0x78")]
	public Plant torchWood;

	[Token(Token = "0x4000350")]
	[FieldOffset(Offset = "0x80")]
	public Plant parentPlantInDream;

	[Token(Token = "0x4000351")]
	[FieldOffset(Offset = "0x88")]
	public Plant from;

	[Token(Token = "0x4000352")]
	[FieldOffset(Offset = "0x90")]
	public BulletStatus bulletStatus;

	[Token(Token = "0x4000353")]
	[FieldOffset(Offset = "0x94")]
	public Vector2 cannonPos;

	[Token(Token = "0x4000354")]
	[FieldOffset(Offset = "0x9C")]
	public int theMovingWay;

	[Token(Token = "0x4000355")]
	[FieldOffset(Offset = "0xA0")]
	public int theBulletRow;

	[Token(Token = "0x4000356")]
	[FieldOffset(Offset = "0xA4")]
	public int _damage;

	[Token(Token = "0x4000357")]
	[FieldOffset(Offset = "0xA8")]
	public int hitTimes;

	[Token(Token = "0x4000358")]
	[FieldOffset(Offset = "0xAC")]
	public int penetrationTimes;

	[Token(Token = "0x4000359")]
	[FieldOffset(Offset = "0xB0")]
	public float theExistTime;

	[Token(Token = "0x400035A")]
	[FieldOffset(Offset = "0xB4")]
	public int indexInArray;

	[Token(Token = "0x400035B")]
	[FieldOffset(Offset = "0xB8")]
	public bool hit;

	[Token(Token = "0x400035C")]
	[FieldOffset(Offset = "0xB9")]
	public bool isZombieBullet;

	[Token(Token = "0x400035D")]
	[FieldOffset(Offset = "0xBA")]
	public bool isLand;

	[Token(Token = "0x400035E")]
	[FieldOffset(Offset = "0xBB")]
	public bool melonSputter;

	[Token(Token = "0x400035F")]
	[FieldOffset(Offset = "0xBC")]
	public bool umbrellaed;

	[Token(Token = "0x4000360")]
	[FieldOffset(Offset = "0xBD")]
	public bool goldMagneted;

	[Token(Token = "0x4000361")]
	[FieldOffset(Offset = "0xBE")]
	public bool goldThreeTorch;

	[Token(Token = "0x4000362")]
	[FieldOffset(Offset = "0xBF")]
	public bool accelerate;

	[Token(Token = "0x4000363")]
	[FieldOffset(Offset = "0xC0")]
	public float Vx;

	[Token(Token = "0x4000364")]
	[FieldOffset(Offset = "0xC4")]
	public float Vy;

	[Token(Token = "0x4000365")]
	[FieldOffset(Offset = "0xC8")]
	public float detaVx;

	[Token(Token = "0x4000366")]
	[FieldOffset(Offset = "0xCC")]
	public float detaVy;

	[Token(Token = "0x4000367")]
	[FieldOffset(Offset = "0xD0")]
	public float trackSpeed;

	[Token(Token = "0x4000368")]
	[FieldOffset(Offset = "0xD4")]
	public float normalSpeed;

	[Token(Token = "0x4000369")]
	[FieldOffset(Offset = "0xD8")]
	private float height;

	[Token(Token = "0x400036A")]
	[FieldOffset(Offset = "0xDC")]
	private bool dying;

	[Token(Token = "0x1700000D")]
	public int Damage
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x42E7D0", Offset = "0x42D3D0", VA = "0x18042E7D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x42E7E0", Offset = "0x42D3E0", VA = "0x18042E7E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x42BFD0", Offset = "0x42ABD0", VA = "0x18042BFD0", Slot = "4")]
	public virtual void InitData()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x42A2E0", Offset = "0x428EE0", VA = "0x18042A2E0")]
	public void Die()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x42E6B0", Offset = "0x42D2B0", VA = "0x18042E6B0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x42DC00", Offset = "0x42C800", VA = "0x18042DC00")]
	private void ShadowTransformUpdate()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x42CB20", Offset = "0x42B720", VA = "0x18042CB20")]
	private void PostionUpdate()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x42C360", Offset = "0x42AF60", VA = "0x18042C360")]
	private void JumpUpdate()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x42C2A0", Offset = "0x42AEA0", VA = "0x18042C2A0", Slot = "7")]
	protected virtual void JumpLand()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x428BA0", Offset = "0x4277A0", VA = "0x180428BA0")]
	private void CannonBulletUpdate()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x42DE10", Offset = "0x42CA10", VA = "0x18042DE10")]
	private void ThrowBulletUpdate()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x429E20", Offset = "0x428A20", VA = "0x180429E20")]
	private void ConvoluteUpdate()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x42B3F0", Offset = "0x429FF0", VA = "0x18042B3F0")]
	protected Zombie GetSingleRowFlyingZombie()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x42DEF0", Offset = "0x42CAF0", VA = "0x18042DEF0")]
	private void TrackSingleRowUpdate()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x42E1B0", Offset = "0x42CDB0", VA = "0x18042E1B0", Slot = "8")]
	protected virtual void TrackUpdate()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x42B0A0", Offset = "0x429CA0", VA = "0x18042B0A0", Slot = "9")]
	protected virtual Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x42C530", Offset = "0x42B130", VA = "0x18042C530", Slot = "10")]
	protected virtual bool NearestZombieCondition(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x42AD60", Offset = "0x429960", VA = "0x18042AD60")]
	protected Zombie GetNearestFlyingZombie()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x42AC70", Offset = "0x429870", VA = "0x18042AC70", Slot = "11")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x42C4A0", Offset = "0x42B0A0", VA = "0x18042C4A0", Slot = "12")]
	protected virtual void MoveDieUpdate(Vector2 currentPosition)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x42B6F0", Offset = "0x42A2F0", VA = "0x18042B6F0")]
	private void HitLandUpdate()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x42BA60", Offset = "0x42A660", VA = "0x18042BA60", Slot = "13")]
	public virtual void HitLand()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x42D400", Offset = "0x42C000", VA = "0x18042D400")]
	private void RollingUpdate()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x42C5C0", Offset = "0x42B1C0", VA = "0x18042C5C0", Slot = "14")]
	protected virtual void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x42C6F0", Offset = "0x42B2F0", VA = "0x18042C6F0", Slot = "15")]
	protected virtual void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x42E4C0", Offset = "0x42D0C0", VA = "0x18042E4C0")]
	private void TrackZombieSingleRow(Zombie zombie)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x42E5C0", Offset = "0x42D1C0", VA = "0x18042E5C0", Slot = "16")]
	protected virtual void TrackZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x429320", Offset = "0x427F20", VA = "0x180429320")]
	private void CheckPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x42D100", Offset = "0x42BD00", VA = "0x18042D100")]
	private void Rebound(Plant plant)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x42BAF0", Offset = "0x42A6F0", VA = "0x18042BAF0")]
	private void HitPlantInDream(Shooter shooter)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x428B80", Offset = "0x427780", VA = "0x180428B80")]
	private bool AllowUp(PlantType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x428A30", Offset = "0x427630", VA = "0x180428A30")]
	private bool AllowDown(PlantType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x42D610", Offset = "0x42C210", VA = "0x18042D610")]
	private void Rotate(GameObject obj, int angle)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x429C50", Offset = "0x428850", VA = "0x180429C50", Slot = "17")]
	protected virtual void CheckZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x42BEC0", Offset = "0x42AAC0", VA = "0x18042BEC0")]
	protected bool HitZombieCondition(ZombieStatus theZombieStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected virtual void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x42BF60", Offset = "0x42AB60", VA = "0x18042BF60", Slot = "19")]
	protected virtual void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x42C8D0", Offset = "0x42B4D0", VA = "0x18042C8D0", Slot = "20")]
	protected virtual void PlaySound(Zombie zombie)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x42AAC0", Offset = "0x4296C0", VA = "0x18042AAC0")]
	public void FireZombie(Zombie zombie, bool warm = true)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x42A400", Offset = "0x429000", VA = "0x18042A400")]
	private void FireOtherZombie(Zombie targetZombie, bool warm)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x428A50", Offset = "0x427650", VA = "0x180428A50")]
	private bool AllowSputter(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Bullet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_basketball
using Il2CppDummyDll;

[Token(Token = "0x200008C")]
public class Bullet_basketball : Bullet_cabbage
{
	[Token(Token = "0x600027E")]
	[Address(RVA = "0x44EDC0", Offset = "0x44D9C0", VA = "0x18044EDC0", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x44EE20", Offset = "0x44DA20", VA = "0x18044EE20", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x44EDB0", Offset = "0x44D9B0", VA = "0x18044EDB0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_basketball()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_bigButter
using Il2CppDummyDll;

[Token(Token = "0x200008D")]
public class Bullet_bigButter : Bullet_sunCabbage
{
	[Token(Token = "0x6000282")]
	[Address(RVA = "0x44F080", Offset = "0x44DC80", VA = "0x18044F080", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x44EF50", Offset = "0x44DB50", VA = "0x18044EF50", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x44EE70", Offset = "0x44DA70", VA = "0x18044EE70", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_bigButter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_bigKernal
using Il2CppDummyDll;

[Token(Token = "0x200008E")]
public class Bullet_bigKernal : Bullet_sunCabbage
{
	[Token(Token = "0x6000286")]
	[Address(RVA = "0x44F080", Offset = "0x44DC80", VA = "0x18044F080", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x44F170", Offset = "0x44DD70", VA = "0x18044F170", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x44F090", Offset = "0x44DC90", VA = "0x18044F090", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_bigKernal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_blackPuff
using Il2CppDummyDll;

[Token(Token = "0x200008F")]
public class Bullet_blackPuff : Bullet
{
	[Token(Token = "0x600028A")]
	[Address(RVA = "0x44F360", Offset = "0x44DF60", VA = "0x18044F360", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x44F280", Offset = "0x44DE80", VA = "0x18044F280", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_blackPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_butter
using Il2CppDummyDll;

[Token(Token = "0x2000090")]
public class Bullet_butter : Bullet_cabbage
{
	[Token(Token = "0x600028D")]
	[Address(RVA = "0x44F660", Offset = "0x44E260", VA = "0x18044F660", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x44F720", Offset = "0x44E320", VA = "0x18044F720", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_butter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_butter_iron
using Il2CppDummyDll;

[Token(Token = "0x2000092")]
public class Bullet_butter_iron : Bullet_butter
{
	[Token(Token = "0x6000293")]
	[Address(RVA = "0x44F910", Offset = "0x44E510", VA = "0x18044F910", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x44F840", Offset = "0x44E440", VA = "0x18044F840", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_butter_iron()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_butter_portal
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000093")]
public class Bullet_butter_portal : Bullet_butter
{
	[Token(Token = "0x4000386")]
	[FieldOffset(Offset = "0xE8")]
	public GameObject holePrefab;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x44FA50", Offset = "0x44E650", VA = "0x18044FA50", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x44FC30", Offset = "0x44E830", VA = "0x18044FC30", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_butter_portal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_butterMelon
using Il2CppDummyDll;

[Token(Token = "0x2000091")]
public class Bullet_butterMelon : Bullet_melon
{
	[Token(Token = "0x6000290")]
	[Address(RVA = "0x44F420", Offset = "0x44E020", VA = "0x18044F420", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x44F510", Offset = "0x44E110", VA = "0x18044F510", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_butterMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cabbage
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000094")]
public class Bullet_cabbage : Bullet
{
	[Token(Token = "0x4000387")]
	[FieldOffset(Offset = "0xE0")]
	protected Transform spriteObject;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x450900", Offset = "0x44F500", VA = "0x180450900", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x450A60", Offset = "0x44F660", VA = "0x180450A60", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x450980", Offset = "0x44F580", VA = "0x180450980", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x450950", Offset = "0x44F550", VA = "0x180450950", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x450B20", Offset = "0x44F720", VA = "0x180450B20", Slot = "21")]
	public virtual void RotateUpdate()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cabbageMelon
using Il2CppDummyDll;

[Token(Token = "0x2000095")]
public class Bullet_cabbageMelon : Bullet_sunCabbage
{
	[Token(Token = "0x600029F")]
	[Address(RVA = "0x4508F0", Offset = "0x44F4F0", VA = "0x1804508F0", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x4506A0", Offset = "0x44F2A0", VA = "0x1804506A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x450790", Offset = "0x44F390", VA = "0x180450790", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x44FEB0", Offset = "0x44EAB0", VA = "0x18044FEB0")]
	protected void AttackOtherZombie(Zombie targetZombie, int damageType)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cabbageMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cactus
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000096")]
public class Bullet_cactus : Bullet_pierce
{
	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <RotateTowardsTarget>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000388")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000389")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038A")]
		[FieldOffset(Offset = "0x20")]
		public Bullet_cactus <>4__this;

		[Token(Token = "0x400038B")]
		[FieldOffset(Offset = "0x28")]
		private float <rotationSpeed>5__2;

		[Token(Token = "0x400038C")]
		[FieldOffset(Offset = "0x2C")]
		private float <smoothTime>5__3;

		[Token(Token = "0x400038D")]
		[FieldOffset(Offset = "0x30")]
		private Quaternion <startRotation>5__4;

		[Token(Token = "0x400038E")]
		[FieldOffset(Offset = "0x40")]
		private Quaternion <targetRotation>5__5;

		[Token(Token = "0x400038F")]
		[FieldOffset(Offset = "0x50")]
		private float <elapsedTime>5__6;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <RotateTowardsTarget>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x4631D0", Offset = "0x461DD0", VA = "0x1804631D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x4633F0", Offset = "0x461FF0", VA = "0x1804633F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x450D20", Offset = "0x44F920", VA = "0x180450D20", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x450CA0", Offset = "0x44F8A0", VA = "0x180450CA0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x450D90", Offset = "0x44F990", VA = "0x180450D90", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x450E30", Offset = "0x44FA30", VA = "0x180450E30")]
	[IteratorStateMachine(typeof(<RotateTowardsTarget>d__3))]
	private IEnumerator RotateTowardsTarget()
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x450EA0", Offset = "0x44FAA0", VA = "0x180450EA0", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cactusStar
using Il2CppDummyDll;

[Token(Token = "0x2000098")]
public class Bullet_cactusStar : Bullet_star
{
	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x450BB0", Offset = "0x44F7B0", VA = "0x180450BB0", Slot = "9")]
	protected override Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x450C40", Offset = "0x44F840", VA = "0x180450C40", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x42BF60", Offset = "0x42AB60", VA = "0x18042BF60", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x450BC0", Offset = "0x44F7C0", VA = "0x180450BC0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_cactusStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cannon
using Il2CppDummyDll;

[Token(Token = "0x2000099")]
public class Bullet_cannon : Bullet
{
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x4524F0", Offset = "0x4510F0", VA = "0x1804524F0", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x450EB0", Offset = "0x44FAB0", VA = "0x180450EB0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cherry
using Il2CppDummyDll;

[Token(Token = "0x200009A")]
public class Bullet_cherry : Bullet
{
	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x452970", Offset = "0x451570", VA = "0x180452970", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x452780", Offset = "0x451380", VA = "0x180452780", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x452860", Offset = "0x451460", VA = "0x180452860", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cherry()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cherrySquash
using Il2CppDummyDll;

[Token(Token = "0x200009B")]
public class Bullet_cherrySquash : Bullet_squash
{
	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x452530", Offset = "0x451130", VA = "0x180452530", Slot = "21")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cherrySquash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_cornMelon
using Il2CppDummyDll;

[Token(Token = "0x200009C")]
public class Bullet_cornMelon : Bullet_melon
{
	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x452A40", Offset = "0x451640", VA = "0x180452A40", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x452B30", Offset = "0x451730", VA = "0x180452B30", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_cornMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_doom
using Il2CppDummyDll;

[Token(Token = "0x200009D")]
public class Bullet_doom : Bullet
{
	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x452EF0", Offset = "0x451AF0", VA = "0x180452EF0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x452E10", Offset = "0x451A10", VA = "0x180452E10", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_doom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_doomCactus
using Il2CppDummyDll;

[Token(Token = "0x200009E")]
public class Bullet_doomCactus : Bullet_pierce
{
	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x452E00", Offset = "0x451A00", VA = "0x180452E00", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x452D40", Offset = "0x451940", VA = "0x180452D40", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x452C60", Offset = "0x451860", VA = "0x180452C60", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_doomCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_endoSun
using Il2CppDummyDll;

[Token(Token = "0x200009F")]
public class Bullet_endoSun : Bullet
{
	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x453430", Offset = "0x452030", VA = "0x180453430", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x453320", Offset = "0x451F20", VA = "0x180453320", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x453250", Offset = "0x451E50", VA = "0x180453250", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_endoSun()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_extremeSnowPea
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000A0")]
public class Bullet_extremeSnowPea : Bullet_snowPea
{
	[Token(Token = "0x4000390")]
	[FieldOffset(Offset = "0xE0")]
	private Transform _sprite;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x453530", Offset = "0x452130", VA = "0x180453530", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x453580", Offset = "0x452180", VA = "0x180453580", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x4536A0", Offset = "0x4522A0", VA = "0x1804536A0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_extremeSnowPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_fireKelp
using Il2CppDummyDll;

[Token(Token = "0x20000A1")]
public class Bullet_fireKelp : Bullet
{
	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x453C30", Offset = "0x452830", VA = "0x180453C30", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x453B50", Offset = "0x452750", VA = "0x180453B50", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x453750", Offset = "0x452350", VA = "0x180453750")]
	private void AttackOtherZombie(Zombie targetZombie)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x453710", Offset = "0x452310", VA = "0x180453710")]
	private bool AllowSputter(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_fireKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_fireMelon
using Il2CppDummyDll;

[Token(Token = "0x20000A2")]
public class Bullet_fireMelon : Bullet_melon
{
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x453DC0", Offset = "0x4529C0", VA = "0x180453DC0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x453ED0", Offset = "0x452AD0", VA = "0x180453ED0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_fireMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_firePea
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000A3")]
public class Bullet_firePea : Bullet
{
	[Token(Token = "0x4000391")]
	[FieldOffset(Offset = "0xE0")]
	private Transform tail;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x450900", Offset = "0x44F500", VA = "0x180450900", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x4536A0", Offset = "0x4522A0", VA = "0x1804536A0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x454110", Offset = "0x452D10", VA = "0x180454110", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x454030", Offset = "0x452C30", VA = "0x180454030", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_firePea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_firePea_purple
using Il2CppDummyDll;

[Token(Token = "0x20000A4")]
public class Bullet_firePea_purple : Bullet_firePea
{
	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x454120", Offset = "0x452D20", VA = "0x180454120", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x454340", Offset = "0x452F40", VA = "0x180454340")]
	private void SetEmbered(Zombie zombie)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_firePea_purple()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_firePea_super
using Il2CppDummyDll;

[Token(Token = "0x20000A5")]
public class Bullet_firePea_super : Bullet_pierce
{
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x454370", Offset = "0x452F70", VA = "0x180454370", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x454450", Offset = "0x453050", VA = "0x180454450", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x454570", Offset = "0x453170", VA = "0x180454570", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_firePea_super()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_fireStar
using Il2CppDummyDll;

[Token(Token = "0x20000A6")]
public class Bullet_fireStar : Bullet_star
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x454110", Offset = "0x452D10", VA = "0x180454110", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x4545A0", Offset = "0x4531A0", VA = "0x1804545A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_fireStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_fireTrack
using Il2CppDummyDll;

[Token(Token = "0x20000A7")]
public class Bullet_fireTrack : Bullet
{
	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x454700", Offset = "0x453300", VA = "0x180454700", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x454680", Offset = "0x453280", VA = "0x180454680", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_fireTrack()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_garlicBomb
using Il2CppDummyDll;

[Token(Token = "0x20000A8")]
public class Bullet_garlicBomb : Bullet
{
	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x454A40", Offset = "0x453640", VA = "0x180454A40", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x454970", Offset = "0x453570", VA = "0x180454970", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x454780", Offset = "0x453380", VA = "0x180454780")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_garlicBomb()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_garlicButter
using Il2CppDummyDll;

[Token(Token = "0x20000A9")]
public class Bullet_garlicButter : Bullet_butter
{
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x454C00", Offset = "0x453800", VA = "0x180454C00", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x454B10", Offset = "0x453710", VA = "0x180454B10", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_garlicButter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_garlicCabbage
using Il2CppDummyDll;

[Token(Token = "0x20000AA")]
public class Bullet_garlicCabbage : Bullet_sunCabbage
{
	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x4508F0", Offset = "0x44F4F0", VA = "0x1804508F0", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x454E80", Offset = "0x453A80", VA = "0x180454E80", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x454D80", Offset = "0x453980", VA = "0x180454D80", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_garlicCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_garlicKernal
using Il2CppDummyDll;

[Token(Token = "0x20000AB")]
public class Bullet_garlicKernal : Bullet_kernal
{
	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x455030", Offset = "0x453C30", VA = "0x180455030", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_garlicKernal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_garlicMelon
using Il2CppDummyDll;

[Token(Token = "0x20000AC")]
public class Bullet_garlicMelon : Bullet_melon
{
	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x455110", Offset = "0x453D10", VA = "0x180455110", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x455230", Offset = "0x453E30", VA = "0x180455230", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_garlicMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_goldSquashKelp
using Il2CppDummyDll;

[Token(Token = "0x20000AD")]
public class Bullet_goldSquashKelp : Bullet_squashKelp
{
	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x4553A0", Offset = "0x453FA0", VA = "0x1804553A0", Slot = "21")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_goldSquashKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_iceDoom
using Il2CppDummyDll;

[Token(Token = "0x20000AE")]
public class Bullet_iceDoom : Bullet_pierce
{
	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x455710", Offset = "0x454310", VA = "0x180455710", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x4555E0", Offset = "0x4541E0", VA = "0x1804555E0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_iceDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_iceSpark
using Il2CppDummyDll;

[Token(Token = "0x20000AF")]
public class Bullet_iceSpark : Bullet_pierce
{
	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x455980", Offset = "0x454580", VA = "0x180455980", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x4558A0", Offset = "0x4544A0", VA = "0x1804558A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x455B60", Offset = "0x454760", VA = "0x180455B60", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_iceSpark()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_iceTrack
using Il2CppDummyDll;

[Token(Token = "0x20000B0")]
public class Bullet_iceTrack : Bullet
{
	[Token(Token = "0x6000303")]
	[Address(RVA = "0x456000", Offset = "0x454C00", VA = "0x180456000", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x455F80", Offset = "0x454B80", VA = "0x180455F80", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x455F00", Offset = "0x454B00", VA = "0x180455F00", Slot = "9")]
	protected override Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x455B90", Offset = "0x454790", VA = "0x180455B90")]
	private Zombie GetNearestFreezedZombie()
	{
		return null;
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_iceTrack()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ironPea
using Il2CppDummyDll;

[Token(Token = "0x20000B1")]
public class Bullet_ironPea : Bullet
{
	[Token(Token = "0x6000308")]
	[Address(RVA = "0x456290", Offset = "0x454E90", VA = "0x180456290", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x4560A0", Offset = "0x454CA0", VA = "0x1804560A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x456180", Offset = "0x454D80", VA = "0x180456180", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_ironPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ironPea_air
using Il2CppDummyDll;

[Token(Token = "0x20000B2")]
public class Bullet_ironPea_air : Bullet
{
	[Token(Token = "0x600030C")]
	[Address(RVA = "0x4564B0", Offset = "0x4550B0", VA = "0x1804564B0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x4563A0", Offset = "0x454FA0", VA = "0x1804563A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_ironPea_air()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ironStar
using Il2CppDummyDll;

[Token(Token = "0x20000B3")]
public class Bullet_ironStar : Bullet_star
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0x4566A0", Offset = "0x4552A0", VA = "0x1804566A0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x4565C0", Offset = "0x4551C0", VA = "0x1804565C0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_ironStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_jackboxStar
using Il2CppDummyDll;

[Token(Token = "0x20000B4")]
public class Bullet_jackboxStar : Bullet_star
{
	[Token(Token = "0x6000312")]
	[Address(RVA = "0x4568B0", Offset = "0x4554B0", VA = "0x1804568B0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x456780", Offset = "0x455380", VA = "0x180456780", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_jackboxStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_kelp
using Il2CppDummyDll;

[Token(Token = "0x20000B5")]
public class Bullet_kelp : Bullet
{
	[Token(Token = "0x6000315")]
	[Address(RVA = "0x456A70", Offset = "0x455670", VA = "0x180456A70", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x4569F0", Offset = "0x4555F0", VA = "0x1804569F0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_kelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_kernal
using Il2CppDummyDll;

[Token(Token = "0x20000B6")]
public class Bullet_kernal : Bullet_cabbage
{
	[Token(Token = "0x6000318")]
	[Address(RVA = "0x456B80", Offset = "0x455780", VA = "0x180456B80", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x456B00", Offset = "0x455700", VA = "0x180456B00", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_kernal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_lourCactus
using Il2CppDummyDll;

[Token(Token = "0x20000B7")]
public class Bullet_lourCactus : Bullet_cactus
{
	[Token(Token = "0x4000392")]
	[FieldOffset(Offset = "0xE0")]
	public CattailLour lour;

	[Token(Token = "0x4000393")]
	[FieldOffset(Offset = "0xE8")]
	private float lourTimer;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x456D60", Offset = "0x455960", VA = "0x180456D60", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x456E00", Offset = "0x455A00", VA = "0x180456E00", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x456C40", Offset = "0x455840", VA = "0x180456C40", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_lourCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_magicTrack
using Il2CppDummyDll;

[Token(Token = "0x20000B8")]
public class Bullet_magicTrack : Bullet
{
	[Token(Token = "0x600031F")]
	[Address(RVA = "0x456EE0", Offset = "0x455AE0", VA = "0x180456EE0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x456E60", Offset = "0x455A60", VA = "0x180456E60", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_magicTrack()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_magnetCactus
using Il2CppDummyDll;

[Token(Token = "0x20000B9")]
public class Bullet_magnetCactus : Bullet
{
	[Token(Token = "0x6000322")]
	[Address(RVA = "0x4570A0", Offset = "0x455CA0", VA = "0x1804570A0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x457020", Offset = "0x455C20", VA = "0x180457020", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x456F90", Offset = "0x455B90", VA = "0x180456F90")]
	private int AttackIronArmor(Zombie zombie, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_magnetCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_magnetStar
using Il2CppDummyDll;

[Token(Token = "0x20000BA")]
public class Bullet_magnetStar : Bullet_star
{
	[Token(Token = "0x6000326")]
	[Address(RVA = "0x457440", Offset = "0x456040", VA = "0x180457440", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x457360", Offset = "0x455F60", VA = "0x180457360", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x4572F0", Offset = "0x455EF0", VA = "0x1804572F0")]
	private int AttackIronArmor(Zombie zombie, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_magnetStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_melon
using Il2CppDummyDll;

[Token(Token = "0x20000BB")]
public class Bullet_melon : Bullet_cabbage
{
	[Token(Token = "0x600032A")]
	[Address(RVA = "0x458050", Offset = "0x456C50", VA = "0x180458050", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x458140", Offset = "0x456D40", VA = "0x180458140", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x457660", Offset = "0x456260", VA = "0x180457660")]
	protected void AttackOtherZombie(Zombie targetZombie, int damageType)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_melon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_melonCannon
using Il2CppDummyDll;

[Token(Token = "0x20000BC")]
public class Bullet_melonCannon : Bullet_cannon
{
	[Token(Token = "0x4000394")]
	[FieldOffset(Offset = "0xE0")]
	private float rotateSpeed;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x457560", Offset = "0x456160", VA = "0x180457560", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x4575C0", Offset = "0x4561C0", VA = "0x1804575C0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_melonCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_normalSun
using Il2CppDummyDll;

[Token(Token = "0x20000BD")]
public class Bullet_normalSun : Bullet_smallSun
{
	[Token(Token = "0x6000331")]
	[Address(RVA = "0x458270", Offset = "0x456E70", VA = "0x180458270", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_normalSun()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_nut
using Il2CppDummyDll;

[Token(Token = "0x20000BE")]
public class Bullet_nut : Bullet_pierce
{
	[Token(Token = "0x6000333")]
	[Address(RVA = "0x4584B0", Offset = "0x4570B0", VA = "0x1804584B0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x458570", Offset = "0x457170", VA = "0x180458570", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x4583D0", Offset = "0x456FD0", VA = "0x1804583D0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_nut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_pea
using Il2CppDummyDll;

[Token(Token = "0x20000BF")]
public class Bullet_pea : Bullet
{
	[Token(Token = "0x6000337")]
	[Address(RVA = "0x458770", Offset = "0x457370", VA = "0x180458770", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x458660", Offset = "0x457260", VA = "0x180458660", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x458580", Offset = "0x457180", VA = "0x180458580", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_pea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_pickaxeStar
using Il2CppDummyDll;

[Token(Token = "0x20000C0")]
public class Bullet_pickaxeStar : Bullet_star
{
	[Token(Token = "0x600033B")]
	[Address(RVA = "0x458920", Offset = "0x457520", VA = "0x180458920", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x458840", Offset = "0x457440", VA = "0x180458840", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_pickaxeStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_pierce
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000C1")]
public class Bullet_pierce : Bullet
{
	[Token(Token = "0x600033E")]
	[Address(RVA = "0x458A10", Offset = "0x457610", VA = "0x180458A10", Slot = "14")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x4589E0", Offset = "0x4575E0", VA = "0x1804589E0", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x44F080", Offset = "0x44DC80", VA = "0x18044F080", Slot = "21")]
	protected virtual void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x458B90", Offset = "0x457790", VA = "0x180458B90", Slot = "16")]
	protected override void TrackZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_pierce()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_portalPea
using Il2CppDummyDll;

[Token(Token = "0x20000C2")]
public class Bullet_portalPea : Bullet
{
	[Token(Token = "0x6000343")]
	[Address(RVA = "0x458E80", Offset = "0x457A80", VA = "0x180458E80", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x458D70", Offset = "0x457970", VA = "0x180458D70", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x458C90", Offset = "0x457890", VA = "0x180458C90", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_portalPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_puff
using Il2CppDummyDll;

[Token(Token = "0x20000C3")]
public class Bullet_puff : Bullet
{
	[Token(Token = "0x6000347")]
	[Address(RVA = "0x45A340", Offset = "0x458F40", VA = "0x18045A340", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x45A260", Offset = "0x458E60", VA = "0x18045A260", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_puff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_puffLove
using Il2CppDummyDll;

[Token(Token = "0x20000C4")]
public class Bullet_puffLove : Bullet
{
	[Token(Token = "0x600034A")]
	[Address(RVA = "0x459360", Offset = "0x457F60", VA = "0x180459360", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x459270", Offset = "0x457E70", VA = "0x180459270", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x458F60", Offset = "0x457B60", VA = "0x180458F60")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x4593F0", Offset = "0x457FF0", VA = "0x1804593F0")]
	private void TrySetMindControl(Zombie zombie)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_puffLove()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_puffPea
using Il2CppDummyDll;

[Token(Token = "0x20000C5")]
public class Bullet_puffPea : Bullet
{
	[Token(Token = "0x600034F")]
	[Address(RVA = "0x4595F0", Offset = "0x4581F0", VA = "0x1804595F0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x459510", Offset = "0x458110", VA = "0x180459510", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_puffPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_puffPotato
using Il2CppDummyDll;

[Token(Token = "0x20000C6")]
public class Bullet_puffPotato : Bullet
{
	[Token(Token = "0x6000352")]
	[Address(RVA = "0x459790", Offset = "0x458390", VA = "0x180459790", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x4596B0", Offset = "0x4582B0", VA = "0x1804596B0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_puffPotato()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_puffRandomColor
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000C7")]
public class Bullet_puffRandomColor : Bullet
{
	[Token(Token = "0x4000395")]
	[FieldOffset(Offset = "0xE0")]
	public Sprite sprite;

	[Token(Token = "0x4000396")]
	[FieldOffset(Offset = "0xE8")]
	public int puffColor;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x459F90", Offset = "0x458B90", VA = "0x180459F90", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x459BB0", Offset = "0x4587B0", VA = "0x180459BB0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x459C90", Offset = "0x458890", VA = "0x180459C90", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x459850", Offset = "0x458450", VA = "0x180459850")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x45A0E0", Offset = "0x458CE0", VA = "0x18045A0E0")]
	private void TrySetMindControl(Zombie zombie)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_puffRandomColor()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_seaStar
using Il2CppDummyDll;

[Token(Token = "0x20000C8")]
public class Bullet_seaStar : Bullet_star
{
	[Token(Token = "0x600035B")]
	[Address(RVA = "0x45A4E0", Offset = "0x4590E0", VA = "0x18045A4E0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x45A400", Offset = "0x459000", VA = "0x18045A400", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_seaStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_shulkLeaf
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000C9")]
public class Bullet_shulkLeaf : Bullet_pierce
{
	[Token(Token = "0x4000397")]
	[FieldOffset(Offset = "0xE0")]
	private Transform spriteObject;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x450900", Offset = "0x44F500", VA = "0x180450900", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x458570", Offset = "0x457170", VA = "0x180458570", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x45A6C0", Offset = "0x4592C0", VA = "0x18045A6C0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x45A640", Offset = "0x459240", VA = "0x18045A640", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x45A5A0", Offset = "0x4591A0", VA = "0x18045A5A0", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_shulkLeaf()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_silverButter
using Il2CppDummyDll;

[Token(Token = "0x20000CA")]
public class Bullet_silverButter : Bullet_butter
{
	[Token(Token = "0x6000364")]
	[Address(RVA = "0x45A730", Offset = "0x459330", VA = "0x18045A730", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x45A930", Offset = "0x459530", VA = "0x18045A930", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_silverButter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_silverCabbage
using Il2CppDummyDll;

[Token(Token = "0x20000CB")]
public class Bullet_silverCabbage : Bullet_cabbage
{
	[Token(Token = "0x4000398")]
	[FieldOffset(Offset = "0xE8")]
	public bool miusa;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x45ACA0", Offset = "0x4598A0", VA = "0x18045ACA0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x45AB90", Offset = "0x459790", VA = "0x18045AB90", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_silverCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_silverCoin
using Il2CppDummyDll;

[Token(Token = "0x20000CC")]
public class Bullet_silverCoin : Bullet
{
	[Token(Token = "0x600036A")]
	[Address(RVA = "0x45AEE0", Offset = "0x459AE0", VA = "0x18045AEE0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x45ADD0", Offset = "0x4599D0", VA = "0x18045ADD0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_silverCoin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_silverMelon
using Il2CppDummyDll;

[Token(Token = "0x20000CD")]
public class Bullet_silverMelon : Bullet_melon
{
	[Token(Token = "0x600036D")]
	[Address(RVA = "0x45AFF0", Offset = "0x459BF0", VA = "0x18045AFF0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x45B110", Offset = "0x459D10", VA = "0x18045B110", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_silverMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_smallButter
using Il2CppDummyDll;

[Token(Token = "0x20000CE")]
public class Bullet_smallButter : Bullet_butter
{
	[Token(Token = "0x6000370")]
	[Address(RVA = "0x45B270", Offset = "0x459E70", VA = "0x18045B270", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_smallButter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_smallGoldCannon
using Il2CppDummyDll;

[Token(Token = "0x20000CF")]
public class Bullet_smallGoldCannon : Bullet
{
	[Token(Token = "0x6000372")]
	[Address(RVA = "0x45B6C0", Offset = "0x45A2C0", VA = "0x18045B6C0", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x45B530", Offset = "0x45A130", VA = "0x18045B530", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x45B3B0", Offset = "0x459FB0", VA = "0x18045B3B0", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_smallGoldCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_smallSun
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000D0")]
public class Bullet_smallSun : Bullet_pea
{
	[Token(Token = "0x4000399")]
	[FieldOffset(Offset = "0xE0")]
	private Animator Animator;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x45B750", Offset = "0x45A350", VA = "0x18045B750", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x45BD00", Offset = "0x45A900", VA = "0x18045BD00", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x45B7D0", Offset = "0x45A3D0", VA = "0x18045B7D0", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x45BBA0", Offset = "0x45A7A0", VA = "0x18045BBA0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x45BAC0", Offset = "0x45A6C0", VA = "0x18045BAC0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_smallSun()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_snowBall
using Il2CppDummyDll;

[Token(Token = "0x20000D1")]
public class Bullet_snowBall : Bullet
{
	[Token(Token = "0x600037C")]
	[Address(RVA = "0x45BD40", Offset = "0x45A940", VA = "0x18045BD40", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x45C210", Offset = "0x45AE10", VA = "0x18045C210", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x45BE20", Offset = "0x45AA20", VA = "0x18045BE20", Slot = "18")]
	protected override void HitPlant(Plant p)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_snowBall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_snowPea
using Il2CppDummyDll;

[Token(Token = "0x20000D2")]
public class Bullet_snowPea : Bullet_pea
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x45C400", Offset = "0x45B000", VA = "0x18045C400", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x45C320", Offset = "0x45AF20", VA = "0x18045C320", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_snowPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_springMelon
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000D3")]
public class Bullet_springMelon : Bullet_fireMelon
{
	[Token(Token = "0x400039A")]
	[FieldOffset(Offset = "0xE8")]
	public GameObject fire;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x45CA20", Offset = "0x45B620", VA = "0x18045CA20", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x45CB20", Offset = "0x45B720", VA = "0x18045CB20", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x45C510", Offset = "0x45B110", VA = "0x18045C510")]
	private void ExtraDamage(Zombie originalZombie)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x45CD30", Offset = "0x45B930", VA = "0x18045CD30", Slot = "21")]
	public override void RotateUpdate()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_springMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_squash
using Il2CppDummyDll;

[Token(Token = "0x20000D4")]
public class Bullet_squash : Bullet
{
	[Token(Token = "0x6000388")]
	[Address(RVA = "0x45D430", Offset = "0x45C030", VA = "0x18045D430", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x45D3B0", Offset = "0x45BFB0", VA = "0x18045D3B0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x45D330", Offset = "0x45BF30", VA = "0x18045D330", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x45D4E0", Offset = "0x45C0E0", VA = "0x18045D4E0", Slot = "7")]
	protected override void JumpLand()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x45D140", Offset = "0x45BD40", VA = "0x18045D140", Slot = "21")]
	protected virtual void AttackZombie()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_squash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_squashKelp
using Il2CppDummyDll;

[Token(Token = "0x20000D5")]
public class Bullet_squashKelp : Bullet_squash
{
	[Token(Token = "0x600038E")]
	[Address(RVA = "0x45D060", Offset = "0x45BC60", VA = "0x18045D060", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x45CFE0", Offset = "0x45BBE0", VA = "0x18045CFE0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x45CDB0", Offset = "0x45B9B0", VA = "0x18045CDB0", Slot = "21")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_squashKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_star
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000D6")]
public class Bullet_star : Bullet
{
	[Token(Token = "0x400039B")]
	[FieldOffset(Offset = "0xE0")]
	public float accelerateTime;

	[Token(Token = "0x400039C")]
	[FieldOffset(Offset = "0xE4")]
	public float angularSpeed;

	[Token(Token = "0x400039D")]
	[FieldOffset(Offset = "0xE8")]
	public float angle;

	[Token(Token = "0x400039E")]
	[FieldOffset(Offset = "0xEC")]
	public bool movingToCircle;

	[Token(Token = "0x400039F")]
	[FieldOffset(Offset = "0xF0")]
	public Vector2 targetPosition;

	[Token(Token = "0x40003A0")]
	[FieldOffset(Offset = "0xF8")]
	public bool track;

	[Token(Token = "0x40003A1")]
	[FieldOffset(Offset = "0x100")]
	private Transform star;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x45DB10", Offset = "0x45C710", VA = "0x18045DB10", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x45DC80", Offset = "0x45C880", VA = "0x18045DC80", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x45DA40", Offset = "0x45C640", VA = "0x18045DA40", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x45D930", Offset = "0x45C530", VA = "0x18045D930", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x45D850", Offset = "0x45C450", VA = "0x18045D850", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x45D510", Offset = "0x45C110", VA = "0x18045D510", Slot = "9")]
	protected override Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x45DC30", Offset = "0x45C830", VA = "0x18045DC30", Slot = "12")]
	protected override void MoveDieUpdate(Vector2 currentPosition)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_star()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_steelPea
using Il2CppDummyDll;

[Token(Token = "0x20000D7")]
public class Bullet_steelPea : Bullet_pierce
{
	[Token(Token = "0x600039A")]
	[Address(RVA = "0x44F080", Offset = "0x44DC80", VA = "0x18044F080", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x45DDF0", Offset = "0x45C9F0", VA = "0x18045DDF0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x45DD10", Offset = "0x45C910", VA = "0x18045DD10", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_steelPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_sunCabbage
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000D8")]
public class Bullet_sunCabbage : Bullet_pierce
{
	[Token(Token = "0x40003A2")]
	[FieldOffset(Offset = "0xE0")]
	private Transform spriteObject;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x450900", Offset = "0x44F500", VA = "0x180450900", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x45E180", Offset = "0x45CD80", VA = "0x18045E180", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x45DF10", Offset = "0x45CB10", VA = "0x18045DF10", Slot = "11")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x45E030", Offset = "0x45CC30", VA = "0x18045E030", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x45DF70", Offset = "0x45CB70", VA = "0x18045DF70", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_sunCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_sunSpike
using Il2CppDummyDll;

[Token(Token = "0x20000D9")]
public class Bullet_sunSpike : Bullet_iceSpark
{
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x45E210", Offset = "0x45CE10", VA = "0x18045E210", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x45E2F0", Offset = "0x45CEF0", VA = "0x18045E2F0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_sunSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_superCherry
using Il2CppDummyDll;

[Token(Token = "0x20000DA")]
public class Bullet_superCherry : Bullet
{
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x45E860", Offset = "0x45D460", VA = "0x18045E860", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x45E4C0", Offset = "0x45D0C0", VA = "0x18045E4C0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x45E5D0", Offset = "0x45D1D0", VA = "0x18045E5D0", Slot = "18")]
	protected override void HitPlant(Plant plant)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_superCherry()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_superMelon
using Il2CppDummyDll;

[Token(Token = "0x20000DB")]
public class Bullet_superMelon : Bullet_melon
{
	[Token(Token = "0x40003A3")]
	[FieldOffset(Offset = "0xE8")]
	public int p;

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x45E980", Offset = "0x45D580", VA = "0x18045E980", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x45EAC0", Offset = "0x45D6C0", VA = "0x18045EAC0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_superMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_superStar
using Il2CppDummyDll;

[Token(Token = "0x20000DC")]
public class Bullet_superStar : Bullet_star
{
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x450C40", Offset = "0x44F840", VA = "0x180450C40", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x45F000", Offset = "0x45DC00", VA = "0x18045F000", Slot = "8")]
	protected override void TrackUpdate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x45DA40", Offset = "0x45C640", VA = "0x18045DA40", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x45EED0", Offset = "0x45DAD0", VA = "0x18045EED0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x45EFB0", Offset = "0x45DBB0", VA = "0x18045EFB0", Slot = "10")]
	protected override bool NearestZombieCondition(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_superStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_sword
using Il2CppDummyDll;

[Token(Token = "0x20000DD")]
public class Bullet_sword : Bullet_pierce
{
	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x458570", Offset = "0x457170", VA = "0x180458570", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x45F330", Offset = "0x45DF30", VA = "0x18045F330", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x45F2B0", Offset = "0x45DEB0", VA = "0x18045F2B0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_sword()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_threeSpike
using Il2CppDummyDll;

[Token(Token = "0x20000DE")]
public class Bullet_threeSpike : Bullet
{
	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x45F420", Offset = "0x45E020", VA = "0x18045F420", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x45F3A0", Offset = "0x45DFA0", VA = "0x18045F3A0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_threeSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ultimateCactus
using Il2CppDummyDll;

[Token(Token = "0x20000DF")]
public class Bullet_ultimateCactus : Bullet_iceDoom
{
	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x45F880", Offset = "0x45E480", VA = "0x18045F880", Slot = "21")]
	protected override void SetPenetrationTime()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x45F620", Offset = "0x45E220", VA = "0x18045F620", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x45F550", Offset = "0x45E150", VA = "0x18045F550", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x45F890", Offset = "0x45E490", VA = "0x18045F890")]
	private void SmallDoom(Zombie z)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x45FAA0", Offset = "0x45E6A0", VA = "0x18045FAA0")]
	private void TrySetMindControl(Zombie zombie, int damage)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_ultimateCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ultimateKernal
using Il2CppDummyDll;

[Token(Token = "0x20000E0")]
public class Bullet_ultimateKernal : Bullet
{
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x45FC50", Offset = "0x45E850", VA = "0x18045FC50", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_ultimateKernal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ultimateMelon
using Il2CppDummyDll;

[Token(Token = "0x20000E1")]
public class Bullet_ultimateMelon : Bullet_superMelon
{
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x45FCD0", Offset = "0x45E8D0", VA = "0x18045FCD0", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x45FDF0", Offset = "0x45E9F0", VA = "0x18045FDF0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_ultimateMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_ultimateStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000E2")]
public class Bullet_ultimateStar : Bullet_star
{
	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x460660", Offset = "0x45F260", VA = "0x180460660", Slot = "4")]
	public override void InitData()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x450C40", Offset = "0x44F840", VA = "0x180450C40", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x4602E0", Offset = "0x45EEE0", VA = "0x1804602E0", Slot = "9")]
	protected override Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x4607B0", Offset = "0x45F3B0", VA = "0x1804607B0", Slot = "8")]
	protected override void TrackUpdate()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x460460", Offset = "0x45F060", VA = "0x180460460", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x460360", Offset = "0x45EF60", VA = "0x180460360", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x460790", Offset = "0x45F390", VA = "0x180460790", Slot = "15")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x450C90", Offset = "0x44F890", VA = "0x180450C90")]
	public Bullet_ultimateStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_winterMelon
using Il2CppDummyDll;

[Token(Token = "0x20000E3")]
public class Bullet_winterMelon : Bullet_melon
{
	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x460A60", Offset = "0x45F660", VA = "0x180460A60", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x460B50", Offset = "0x45F750", VA = "0x180460B50", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_winterMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_zombieBlock
using Il2CppDummyDll;

[Token(Token = "0x20000E4")]
public class Bullet_zombieBlock : Bullet_nut
{
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x460E70", Offset = "0x45FA70", VA = "0x180460E70", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x460D90", Offset = "0x45F990", VA = "0x180460D90", Slot = "13")]
	public override void HitLand()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_zombieBlock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Bullet_zombieBlock2
using Il2CppDummyDll;

[Token(Token = "0x20000E5")]
public class Bullet_zombieBlock2 : Bullet_zombieBlock
{
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x460CB0", Offset = "0x45F8B0", VA = "0x180460CB0", Slot = "19")]
	protected override void HitZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public Bullet_zombieBlock2()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BulletPoolManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Pool;

[Token(Token = "0x2000341")]
public class BulletPoolManager : MonoBehaviour
{
	[Token(Token = "0x4000AC8")]
	[FieldOffset(Offset = "0x0")]
	public static BulletPoolManager Instance;

	[Token(Token = "0x4000AC9")]
	[FieldOffset(Offset = "0x20")]
	public Dictionary<BulletType, ObjectPool<Bullet>> pools;

	[Token(Token = "0x4000ACA")]
	[FieldOffset(Offset = "0x28")]
	private Board board;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x3BE8A0", Offset = "0x3BD4A0", VA = "0x1803BE8A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x3BEC20", Offset = "0x3BD820", VA = "0x1803BEC20")]
	private Bullet CreateBullet(BulletType theBulletType)
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x3BEFB0", Offset = "0x3BDBB0", VA = "0x1803BEFB0")]
	private void GetBullet(Bullet obj)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x3BEFF0", Offset = "0x3BDBF0", VA = "0x1803BEFF0")]
	private void ReleaseBullet(Bullet obj)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x3BEF40", Offset = "0x3BDB40", VA = "0x1803BEF40")]
	private void DestoryBullet(Bullet obj)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x3BF030", Offset = "0x3BDC30", VA = "0x1803BF030")]
	public BulletPoolManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BulletStatus
using Il2CppDummyDll;

[Token(Token = "0x20003BC")]
public enum BulletStatus
{
	[Token(Token = "0x4001042")]
	Default,
	[Token(Token = "0x4001043")]
	Melon_cannon,
	[Token(Token = "0x4001044")]
	GoldMelon_cannon,
	[Token(Token = "0x4001045")]
	Endoflame_sun,
	[Token(Token = "0x4001046")]
	Lanternstar_advanced,
	[Token(Token = "0x4001047")]
	Roll_land,
	[Token(Token = "0x4001048")]
	Doom_big,
	[Token(Token = "0x4001049")]
	SpringMelon_sub
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BulletType
using Il2CppDummyDll;

[Token(Token = "0x20003AE")]
public enum BulletType
{
	[Token(Token = "0x4000EE0")]
	Bullet_pea = 0,
	[Token(Token = "0x4000EE1")]
	Bullet_cherry = 1,
	[Token(Token = "0x4000EE2")]
	Bullet_nut = 2,
	[Token(Token = "0x4000EE3")]
	Bullet_superCherry = 3,
	[Token(Token = "0x4000EE4")]
	Bullet_zombieBlock = 4,
	[Token(Token = "0x4000EE5")]
	Bullet_zombieBlock2 = 5,
	[Token(Token = "0x4000EE6")]
	Bullet_zombieBlock3 = 6,
	[Token(Token = "0x4000EE7")]
	Bullet_potato = 7,
	[Token(Token = "0x4000EE8")]
	Bullet_smallSun = 8,
	[Token(Token = "0x4000EE9")]
	Bullet_puff = 9,
	[Token(Token = "0x4000EEA")]
	Bullet_puffPea = 10,
	[Token(Token = "0x4000EEB")]
	Bullet_ironPea = 11,
	[Token(Token = "0x4000EEC")]
	Bullet_threeSpike = 12,
	[Token(Token = "0x4000EED")]
	Bullet_puffRandomColor = 13,
	[Token(Token = "0x4000EEE")]
	Bullet_puffLove = 14,
	[Token(Token = "0x4000EEF")]
	Bullet_snowPea = 15,
	[Token(Token = "0x4000EF0")]
	Bullet_snowPuffPea = 16,
	[Token(Token = "0x4000EF1")]
	Bullet_iceSpark = 17,
	[Token(Token = "0x4000EF2")]
	Bullet_smallIceSpark = 18,
	[Token(Token = "0x4000EF3")]
	Bullet_magicTrack = 20,
	[Token(Token = "0x4000EF4")]
	Bullet_snowPuff = 21,
	[Token(Token = "0x4000EF5")]
	Bullet_blackPuff = 22,
	[Token(Token = "0x4000EF6")]
	Bullet_doom = 23,
	[Token(Token = "0x4000EF7")]
	Bullet_iceDoom = 24,
	[Token(Token = "0x4000EF8")]
	Bullet_firePea_yellow = 25,
	[Token(Token = "0x4000EF9")]
	Bullet_firePea_orange = 26,
	[Token(Token = "0x4000EFA")]
	Bullet_firePea_red = 27,
	[Token(Token = "0x4000EFB")]
	Bullet_squash = 28,
	[Token(Token = "0x4000EFC")]
	Bullet_kelp = 29,
	[Token(Token = "0x4000EFD")]
	Bullet_fireKelp = 30,
	[Token(Token = "0x4000EFE")]
	Bullet_squashKelp = 32,
	[Token(Token = "0x4000EFF")]
	Bullet_normalTrack = 33,
	[Token(Token = "0x4000F00")]
	Bullet_iceTrack = 34,
	[Token(Token = "0x4000F01")]
	Bullet_fireTrack = 35,
	[Token(Token = "0x4000F02")]
	Bullet_cherrySquash = 36,
	[Token(Token = "0x4000F03")]
	Bullet_cactus = 37,
	[Token(Token = "0x4000F04")]
	Bullet_lanternCactus_glow = 38,
	[Token(Token = "0x4000F05")]
	Bullet_star = 39,
	[Token(Token = "0x4000F06")]
	Bullet_lanternStar = 40,
	[Token(Token = "0x4000F07")]
	Bullet_seaStar = 41,
	[Token(Token = "0x4000F08")]
	Bullet_cactusStar = 42,
	[Token(Token = "0x4000F09")]
	Bullet_jackboxStar = 43,
	[Token(Token = "0x4000F0A")]
	Bullet_pickaxeStar = 44,
	[Token(Token = "0x4000F0B")]
	Bullet_magnetStar = 45,
	[Token(Token = "0x4000F0C")]
	Bullet_ironStar = 46,
	[Token(Token = "0x4000F0D")]
	Bullet_magnetCactus = 47,
	[Token(Token = "0x4000F0E")]
	Bullet_superStar = 48,
	[Token(Token = "0x4000F0F")]
	Bullet_ultimateStar = 49,
	[Token(Token = "0x4000F10")]
	Bullet_firePea_small = 50,
	[Token(Token = "0x4000F11")]
	Bullet_sword = 51,
	[Token(Token = "0x4000F12")]
	Bullet_cabbage = 52,
	[Token(Token = "0x4000F13")]
	Bullet_sunCabbage = 53,
	[Token(Token = "0x4000F14")]
	Bullet_kernal = 54,
	[Token(Token = "0x4000F15")]
	Bullet_butter = 55,
	[Token(Token = "0x4000F16")]
	Bullet_bigKernal = 56,
	[Token(Token = "0x4000F17")]
	Bullet_bigButter = 57,
	[Token(Token = "0x4000F18")]
	Bullet_basketball = 58,
	[Token(Token = "0x4000F19")]
	Bullet_melon = 59,
	[Token(Token = "0x4000F1A")]
	Bullet_winterMelon = 60,
	[Token(Token = "0x4000F1B")]
	Bullet_garlicKernal = 61,
	[Token(Token = "0x4000F1C")]
	Bullet_garlicButter = 62,
	[Token(Token = "0x4000F1D")]
	Bullet_garlicCabbage = 63,
	[Token(Token = "0x4000F1E")]
	Bullet_garlicMelon = 64,
	[Token(Token = "0x4000F1F")]
	Bullet_cannon = 65,
	[Token(Token = "0x4000F20")]
	Bullet_cornMelon = 66,
	[Token(Token = "0x4000F21")]
	Bullet_butterMelon = 67,
	[Token(Token = "0x4000F22")]
	Bullet_fireCannon = 68,
	[Token(Token = "0x4000F23")]
	Bullet_iceCannon = 69,
	[Token(Token = "0x4000F24")]
	Bullet_cabbageMelon = 70,
	[Token(Token = "0x4000F25")]
	Bullet_superMelon = 71,
	[Token(Token = "0x4000F26")]
	Bullet_ultimateMelon = 72,
	[Token(Token = "0x4000F27")]
	Bullet_melonCannon = 73,
	[Token(Token = "0x4000F28")]
	Bullet_silverCabbage = 74,
	[Token(Token = "0x4000F29")]
	Bullet_goldCabbage = 75,
	[Token(Token = "0x4000F2A")]
	Bullet_silverKernal = 76,
	[Token(Token = "0x4000F2B")]
	Bullet_goldKernal = 77,
	[Token(Token = "0x4000F2C")]
	Bullet_silverButter = 78,
	[Token(Token = "0x4000F2D")]
	Bullet_goldButter = 79,
	[Token(Token = "0x4000F2E")]
	Bullet_smallGoldCannon = 80,
	[Token(Token = "0x4000F2F")]
	Bullet_silverMelon = 81,
	[Token(Token = "0x4000F30")]
	Bullet_goldMelon = 82,
	[Token(Token = "0x4000F31")]
	Bullet_goldMelonCannon = 83,
	[Token(Token = "0x4000F32")]
	Bullet_ultimateCannon = 84,
	[Token(Token = "0x4000F33")]
	Bullet_ultimateKernal = 85,
	[Token(Token = "0x4000F34")]
	Bullet_fireMelon = 86,
	[Token(Token = "0x4000F35")]
	Bullet_firePea_super = 87,
	[Token(Token = "0x4000F36")]
	Bullet_garlicBomb = 89,
	[Token(Token = "0x4000F37")]
	Bullet_puffIronPea = 90,
	[Token(Token = "0x4000F38")]
	Bullet_lourCactus = 91,
	[Token(Token = "0x4000F39")]
	Bullet_puffPotato = 92,
	[Token(Token = "0x4000F3A")]
	Bullet_steelPea = 93,
	[Token(Token = "0x4000F3B")]
	Bullet_shulkLeaf = 94,
	[Token(Token = "0x4000F3C")]
	Bullet_sunSpike = 95,
	[Token(Token = "0x4000F3D")]
	Bullet_endoSun = 96,
	[Token(Token = "0x4000F3E")]
	Bullet_extremeSnowPea = 97,
	[Token(Token = "0x4000F3F")]
	Bullet_silverCoin = 98,
	[Token(Token = "0x4000F40")]
	Bullet_goldCoin = 99,
	[Token(Token = "0x4000F41")]
	Bullet_ultimateCactus = 100,
	[Token(Token = "0x4000F42")]
	Bullet_snowBall = 101,
	[Token(Token = "0x4000F43")]
	Bullet_doomCactus = 102,
	[Token(Token = "0x4000F44")]
	Bullet_bigMelon = 103,
	[Token(Token = "0x4000F45")]
	Bullet_fireStar = 104,
	[Token(Token = "0x4000F46")]
	Bullet_fireCherry = 105,
	[Token(Token = "0x4000F47")]
	Bullet_lanternCactus_dark = 106,
	[Token(Token = "0x4000F48")]
	Bullet_firePea_ultimate = 107,
	[Token(Token = "0x4000F49")]
	Bullet_redIronPea = 108,
	[Token(Token = "0x4000F4A")]
	Bullet_normalSun = 109,
	[Token(Token = "0x4000F4B")]
	Bullet_firePea_purple = 110,
	[Token(Token = "0x4000F4C")]
	Bullet_springMelon = 111,
	[Token(Token = "0x4000F4D")]
	Bullet_smallKernal = 112,
	[Token(Token = "0x4000F4E")]
	Bullet_smallButter = 113,
	[Token(Token = "0x4000F4F")]
	Bullet_portalPea = 114,
	[Token(Token = "0x4000F50")]
	Bullet_goldSquashKelp = 115,
	[Token(Token = "0x4000F51")]
	Bullet_ironPea_air = 116,
	[Token(Token = "0x4000F52")]
	Bullet_kernal_magnet = 117,
	[Token(Token = "0x4000F53")]
	Bullet_butter_magnet = 118,
	[Token(Token = "0x4000F54")]
	Bullet_kernal_portal = 119,
	[Token(Token = "0x4000F55")]
	Bullet_butter_portal = 120,
	[Token(Token = "0x4000F56")]
	Bullet_kernal_iron = 121,
	[Token(Token = "0x4000F57")]
	Bullet_butter_iron = 122,
	[Token(Token = "0x4000F58")]
	Bullet_pea_doom = 123,
	[Token(Token = "0x4000F59")]
	Bullet_pea_doom_fire = 124,
	[Token(Token = "0x4000F5A")]
	Bullet_doom_fire = 125,
	[Token(Token = "0x4000F5B")]
	Bullet_doom_big = 126
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// BungiZombie
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x20002C0")]
public class BungiZombie : Zombie
{
	[Token(Token = "0x4000808")]
	[FieldOffset(Offset = "0x220")]
	public GameObject BungeeCord;

	[Token(Token = "0x4000809")]
	[FieldOffset(Offset = "0x228")]
	public GameObject bungeeTarget;

	[Token(Token = "0x400080A")]
	[FieldOffset(Offset = "0x230")]
	public ZombieBoss boss;

	[Token(Token = "0x400080B")]
	[FieldOffset(Offset = "0x238")]
	public int targetColumn;

	[Token(Token = "0x400080C")]
	[FieldOffset(Offset = "0x23C")]
	private Vector2 target;

	[Token(Token = "0x400080D")]
	[FieldOffset(Offset = "0x244")]
	private readonly float moveSpeed;

	[Token(Token = "0x400080E")]
	[FieldOffset(Offset = "0x248")]
	private float startY;

	[Token(Token = "0x400080F")]
	[FieldOffset(Offset = "0x24C")]
	private bool targetLand;

	[Token(Token = "0x4000810")]
	[FieldOffset(Offset = "0x250")]
	public List<SortingGroup> hands;

	[Token(Token = "0x4000811")]
	[FieldOffset(Offset = "0x258")]
	public SpriteRenderer s;

	[Token(Token = "0x4000812")]
	[FieldOffset(Offset = "0x260")]
	public bool setZombie;

	[Token(Token = "0x4000813")]
	[FieldOffset(Offset = "0x264")]
	private ZombieType theSetZombieType;

	[Token(Token = "0x4000814")]
	[FieldOffset(Offset = "0x268")]
	private GameObject preZombie;

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x371580", Offset = "0x370180", VA = "0x180371580", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x372AB0", Offset = "0x3716B0", VA = "0x180372AB0")]
	private void Scream()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	public override void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "37")]
	public override void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x371500", Offset = "0x370100", VA = "0x180371500", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x372FB0", Offset = "0x371BB0", VA = "0x180372FB0")]
	public void SetZombie()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x372FE0", Offset = "0x371BE0", VA = "0x180372FE0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x371BF0", Offset = "0x3707F0", VA = "0x180371BF0")]
	private void GetZombiePlace()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x3713B0", Offset = "0x36FFB0", VA = "0x1803713B0")]
	private void AnimPutZombie()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x371B90", Offset = "0x370790", VA = "0x180371B90", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x3734E0", Offset = "0x3720E0", VA = "0x1803734E0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x3718D0", Offset = "0x3704D0", VA = "0x1803718D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x372B20", Offset = "0x371720", VA = "0x180372B20")]
	private void SetTarget()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x371E90", Offset = "0x370A90", VA = "0x180371E90")]
	private void MoveToTarget()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x371660", Offset = "0x370260", VA = "0x180371660")]
	private void BungeeTargetPositonUpdate()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x373310", Offset = "0x371F10", VA = "0x180373310")]
	private bool Stealable(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x3722C0", Offset = "0x370EC0", VA = "0x1803722C0", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x3718F0", Offset = "0x3704F0", VA = "0x1803718F0")]
	private bool FindUmbrella()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x371650", Offset = "0x370250", VA = "0x180371650")]
	public void Blocked()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x371100", Offset = "0x36FD00", VA = "0x180371100")]
	private void AnimCatch()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "22")]
	protected override void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "24")]
	protected override void CancelAttack()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x373560", Offset = "0x372160", VA = "0x180373560")]
	public BungiZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ButtonSoundType
using Il2CppDummyDll;

[Token(Token = "0x200038E")]
public enum ButtonSoundType
{
	[Token(Token = "0x4000C64")]
	Default,
	[Token(Token = "0x4000C65")]
	Grave
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Cabbage
using Il2CppDummyDll;

[Token(Token = "0x20001FC")]
public class Cabbage : Thrower
{
	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x4D3D90", Offset = "0x4D2990", VA = "0x1804D3D90", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x4D3DA0", Offset = "0x4D29A0", VA = "0x1804D3DA0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x4D3DD0", Offset = "0x4D29D0", VA = "0x1804D3DD0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public Cabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CabbageMelon
using Il2CppDummyDll;

[Token(Token = "0x20001FD")]
public class CabbageMelon : Cabbage
{
	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x4D3CC0", Offset = "0x4D28C0", VA = "0x1804D3CC0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x4D3CD0", Offset = "0x4D28D0", VA = "0x1804D3CD0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x4D3D30", Offset = "0x4D2930", VA = "0x1804D3D30", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public CabbageMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CabbageUmbrella
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000168")]
public class CabbageUmbrella : CornUmbrella
{
	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x4AC620", Offset = "0x4AB220", VA = "0x1804AC620")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x4AC570", Offset = "0x4AB170", VA = "0x1804AC570", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x4AC210", Offset = "0x4AAE10", VA = "0x1804AC210")]
	private void AdjustBulletSpeed(Bullet bullet)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x4AC790", Offset = "0x4AB390", VA = "0x1804AC790")]
	protected Zombie UmbrellaSearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CabbageUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Cactus
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001FE")]
public class Cactus : Shooter
{
	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x4D4740", Offset = "0x4D3340", VA = "0x1804D4740", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x4D48C0", Offset = "0x4D34C0", VA = "0x1804D48C0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x4D40F0", Offset = "0x4D2CF0", VA = "0x1804D40F0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x4D4100", Offset = "0x4D2D00", VA = "0x1804D4100", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x4D43C0", Offset = "0x4D2FC0", VA = "0x1804D43C0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x4D42F0", Offset = "0x4D2EF0", VA = "0x1804D42F0", Slot = "27")]
	protected override bool SearchUniqueZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public Cactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CactusBlover
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000169")]
public class CactusBlover : Shooter
{
	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x4ACF50", Offset = "0x4ABB50", VA = "0x1804ACF50", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x4ACA50", Offset = "0x4AB650", VA = "0x1804ACA50")]
	private void BlowZombie()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x4ACDF0", Offset = "0x4AB9F0", VA = "0x1804ACDF0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x4ACBC0", Offset = "0x4AB7C0", VA = "0x1804ACBC0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public CactusBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CactusStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001FF")]
public class CactusStar : StarFruit
{
	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x4D3FD0", Offset = "0x4D2BD0", VA = "0x1804D3FD0", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x4D3E00", Offset = "0x4D2A00", VA = "0x1804D3E00", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public CactusStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CactusUmbrella
using Il2CppDummyDll;

[Token(Token = "0x200016A")]
public class CactusUmbrella : Umbrellaleaf
{
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x4AD4F0", Offset = "0x4AC0F0", VA = "0x1804AD4F0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x4AD040", Offset = "0x4ABC40", VA = "0x1804AD040")]
	private void ConvertUpdate()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CactusUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Caltrop
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200016B")]
public class Caltrop : Attacker
{
	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x4AE360", Offset = "0x4ACF60", VA = "0x1804AE360", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x4AE1D0", Offset = "0x4ACDD0", VA = "0x1804AE1D0", Slot = "39")]
	protected virtual void ReadyToAttack()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x4AE110", Offset = "0x4ACD10", VA = "0x1804AE110")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x4ADF10", Offset = "0x4ACB10", VA = "0x1804ADF10", Slot = "40")]
	protected virtual void KillCar()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x4ADCE0", Offset = "0x4AC8E0", VA = "0x1804ADCE0", Slot = "41")]
	protected virtual void AnimAttack()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public Caltrop()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CaltropTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200016C")]
public class CaltropTorch : Plant
{
	[Token(Token = "0x400064C")]
	[FieldOffset(Offset = "0x1B8")]
	private int count;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x4ADC80", Offset = "0x4AC880", VA = "0x1804ADC80", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x4AD5A0", Offset = "0x4AC1A0", VA = "0x1804AD5A0")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x4AD850", Offset = "0x4AC450", VA = "0x1804AD850")]
	private void SummonCaltrop()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x4AD550", Offset = "0x4AC150", VA = "0x1804AD550")]
	private void FireUpdate()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x4AD9F0", Offset = "0x4AC5F0", VA = "0x1804AD9F0")]
	private void SummonFire()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public CaltropTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CamaraFollowMouse
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000354")]
public class CamaraFollowMouse : MonoBehaviour
{
	[Token(Token = "0x4000B63")]
	[FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x4000B64")]
	[FieldOffset(Offset = "0x0")]
	public static CamaraFollowMouse Instance;

	[Token(Token = "0x4000B65")]
	[FieldOffset(Offset = "0x24")]
	public Vector2 minPosition;

	[Token(Token = "0x4000B66")]
	[FieldOffset(Offset = "0x2C")]
	public Vector2 maxPosition;

	[Token(Token = "0x4000B67")]
	[FieldOffset(Offset = "0x34")]
	private Vector3 lastMousePosition;

	[Token(Token = "0x4000B68")]
	[FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool isFollowing;

	[Token(Token = "0x4000B69")]
	[FieldOffset(Offset = "0x48")]
	private Camera Camera;

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x3BF1F0", Offset = "0x3BDDF0", VA = "0x1803BF1F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x3BF360", Offset = "0x3BDF60", VA = "0x1803BF360")]
	private void Update()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x3BF0B0", Offset = "0x3BDCB0", VA = "0x1803BF0B0")]
	public void AdjustCameraPosition()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x3BF260", Offset = "0x3BDE60", VA = "0x1803BF260")]
	public void ResetCamera()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x3BF820", Offset = "0x3BE420", VA = "0x1803BF820")]
	public CamaraFollowMouse()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CanvasUpUI
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200030A")]
public class CanvasUpUI : MonoBehaviour
{
	[Token(Token = "0x6001027")]
	[Address(RVA = "0x3A9350", Offset = "0x3A7F50", VA = "0x1803A9350")]
	private void Start()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CanvasUpUI()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Car
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000029")]
public class Car : MonoBehaviour
{
	[Token(Token = "0x40000C1")]
	[FieldOffset(Offset = "0x20")]
	public int theHealth;

	[Token(Token = "0x40000C2")]
	[FieldOffset(Offset = "0x24")]
	public int theMaxHealth;

	[Token(Token = "0x40000C3")]
	[FieldOffset(Offset = "0x28")]
	public bool oppose;

	[Token(Token = "0x40000C4")]
	[FieldOffset(Offset = "0x30")]
	public CarManager manager;

	[Token(Token = "0x40000C5")]
	[FieldOffset(Offset = "0x38")]
	public CarBody carBody;

	[Token(Token = "0x40000C6")]
	[FieldOffset(Offset = "0x40")]
	public List<CarWeapon> weapons;

	[Token(Token = "0x40000C7")]
	[FieldOffset(Offset = "0x48")]
	public List<CarWheel> wheels;

	[Token(Token = "0x40000C8")]
	[FieldOffset(Offset = "0x50")]
	public bool startTrigger;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x30A030", Offset = "0x308C30", VA = "0x18030A030")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x309D90", Offset = "0x308990", VA = "0x180309D90")]
	public void AddObject(CarObject theObject, CarPos pos)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x30A830", Offset = "0x309430", VA = "0x18030A830")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x30A6C0", Offset = "0x3092C0", VA = "0x18030A6C0")]
	public void StartBattle()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x30A0B0", Offset = "0x308CB0", VA = "0x18030A0B0")]
	public void BattleOver()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x30A610", Offset = "0x309210", VA = "0x18030A610")]
	public void OnCollisionStay2D(Collision2D collision)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x30A4A0", Offset = "0x3090A0", VA = "0x18030A4A0")]
	private void MoveRight()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x30A330", Offset = "0x308F30", VA = "0x18030A330")]
	private void MoveLeft()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x30AA10", Offset = "0x309610", VA = "0x18030AA10")]
	public Car()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarBody
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200002A")]
public class CarBody : CarObject
{
	[Token(Token = "0x40000C9")]
	[FieldOffset(Offset = "0x50")]
	public CarBodyType theBodyType;

	[Token(Token = "0x40000CA")]
	[FieldOffset(Offset = "0x58")]
	public List<Transform> weaponPosition;

	[Token(Token = "0x40000CB")]
	[FieldOffset(Offset = "0x60")]
	public List<Transform> wheelPosition;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x307380", Offset = "0x305F80", VA = "0x180307380", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x3074E0", Offset = "0x3060E0", VA = "0x1803074E0")]
	public void InitRandomPosition()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x307800", Offset = "0x306400", VA = "0x180307800")]
	public void InitWheel(float x, float y)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x3075D0", Offset = "0x3061D0", VA = "0x1803075D0")]
	public void InitWeaponPos(float x, float y)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x3079D0", Offset = "0x3065D0", VA = "0x1803079D0")]
	public CarBody()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarBodyData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200003F")]
public struct CarBodyData
{
	[Token(Token = "0x4000125")]
	[FieldOffset(Offset = "0x0")]
	public CarBodyType type;

	[Token(Token = "0x4000126")]
	[FieldOffset(Offset = "0x4")]
	public int level;

	[Token(Token = "0x4000127")]
	[FieldOffset(Offset = "0x8")]
	public List<CarPositionData> positionData;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarBodyType
using Il2CppDummyDll;

[Token(Token = "0x200002C")]
public enum CarBodyType
{
	[Token(Token = "0x40000D6")]
	Nothing = -1,
	[Token(Token = "0x40000D7")]
	C1,
	[Token(Token = "0x40000D8")]
	C2,
	[Token(Token = "0x40000D9")]
	C3,
	[Token(Token = "0x40000DA")]
	C4
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarBullet
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200002B")]
public class CarBullet : MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[FieldOffset(Offset = "0x20")]
	public CarManager manager;

	[Token(Token = "0x40000CD")]
	[FieldOffset(Offset = "0x28")]
	public Car car;

	[Token(Token = "0x40000CE")]
	[FieldOffset(Offset = "0x30")]
	public CarBulletType theBulletType;

	[Token(Token = "0x40000CF")]
	[FieldOffset(Offset = "0x34")]
	public int theBulletDamage;

	[Token(Token = "0x40000D0")]
	[FieldOffset(Offset = "0x38")]
	public bool hit;

	[Token(Token = "0x40000D1")]
	[FieldOffset(Offset = "0x39")]
	public bool oppose;

	[Token(Token = "0x40000D2")]
	[FieldOffset(Offset = "0x40")]
	public GameObject particle;

	[Token(Token = "0x40000D3")]
	[FieldOffset(Offset = "0x48")]
	private readonly float moveSpeed;

	[Token(Token = "0x40000D4")]
	[FieldOffset(Offset = "0x4C")]
	private float existTime;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x307D80", Offset = "0x306980", VA = "0x180307D80")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x307CE0", Offset = "0x3068E0", VA = "0x180307CE0", Slot = "4")]
	protected virtual void PositionUpdate()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x307AF0", Offset = "0x3066F0", VA = "0x180307AF0", Slot = "5")]
	protected virtual void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x307A80", Offset = "0x306680", VA = "0x180307A80")]
	private void Die()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x307DE0", Offset = "0x3069E0", VA = "0x180307DE0")]
	public CarBullet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarBulletType
using Il2CppDummyDll;

[Token(Token = "0x2000030")]
public enum CarBulletType
{
	[Token(Token = "0x40000E8")]
	SuperCherryBomb
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Card
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000E9")]
public class Card : MonoBehaviour
{
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x462DE0", Offset = "0x4619E0", VA = "0x180462DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Card()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200003E")]
public class CarData
{
	[Token(Token = "0x4000121")]
	[FieldOffset(Offset = "0x10")]
	public List<CarBodyData> cars;

	[Token(Token = "0x4000122")]
	[FieldOffset(Offset = "0x18")]
	public List<CarWeaponData> weapons;

	[Token(Token = "0x4000123")]
	[FieldOffset(Offset = "0x20")]
	public List<CarWheelData> wheels;

	[Token(Token = "0x4000124")]
	[FieldOffset(Offset = "0x28")]
	public int money;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x42E880", Offset = "0x42D480", VA = "0x18042E880")]
	public CarData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CardObjectType
using Il2CppDummyDll;

[Token(Token = "0x200002F")]
public enum CardObjectType
{
	[Token(Token = "0x40000E4")]
	Body,
	[Token(Token = "0x40000E5")]
	Wheel,
	[Token(Token = "0x40000E6")]
	Weapon
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CardPage
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000EA")]
public class CardPage : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[FieldOffset(Offset = "0x0")]
	public static CardPage Instance;

	[Token(Token = "0x40003AD")]
	[FieldOffset(Offset = "0x20")]
	public int currentPage;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x460F30", Offset = "0x45FB30", VA = "0x180460F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x4612C0", Offset = "0x45FEC0", VA = "0x1804612C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x460FC0", Offset = "0x45FBC0", VA = "0x180460FC0")]
	public void NextPage()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x460F90", Offset = "0x45FB90", VA = "0x180460F90")]
	public void LastPage()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x461030", Offset = "0x45FC30", VA = "0x180461030")]
	private void OpenPage()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x4612D0", Offset = "0x45FED0", VA = "0x1804612D0")]
	public CardPage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CardUI
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x20000EB")]
public class CardUI : MonoBehaviour
{
	[Token(Token = "0x40003AE")]
	[FieldOffset(Offset = "0x20")]
	public int theSeedType;

	[Token(Token = "0x40003AF")]
	[FieldOffset(Offset = "0x24")]
	public int theSeedCost;

	[Token(Token = "0x40003B0")]
	[FieldOffset(Offset = "0x28")]
	public bool isSelected;

	[Token(Token = "0x40003B1")]
	[FieldOffset(Offset = "0x2C")]
	public int theNumberInCardSort;

	[Token(Token = "0x40003B2")]
	[FieldOffset(Offset = "0x30")]
	public int thePlantLevel;

	[Token(Token = "0x40003B3")]
	[FieldOffset(Offset = "0x38")]
	public InGameUI thisUI;

	[Token(Token = "0x40003B4")]
	[FieldOffset(Offset = "0x40")]
	public GameObject parent;

	[Token(Token = "0x40003B5")]
	[FieldOffset(Offset = "0x48")]
	public bool isAvailable;

	[Token(Token = "0x40003B6")]
	[FieldOffset(Offset = "0x4C")]
	public float CD;

	[Token(Token = "0x40003B7")]
	[FieldOffset(Offset = "0x50")]
	public float fullCD;

	[Token(Token = "0x40003B8")]
	[FieldOffset(Offset = "0x54")]
	public int usedTimes;

	[Token(Token = "0x40003B9")]
	[FieldOffset(Offset = "0x58")]
	public bool preSelected;

	[Token(Token = "0x40003BA")]
	[FieldOffset(Offset = "0x59")]
	public bool fromSystem;

	[Token(Token = "0x40003BB")]
	[FieldOffset(Offset = "0x5A")]
	public bool isPickUp;

	[Token(Token = "0x40003BC")]
	[FieldOffset(Offset = "0x5B")]
	public bool isExtra;

	[Token(Token = "0x40003BD")]
	[FieldOffset(Offset = "0x5C")]
	public bool disabled;

	[Token(Token = "0x40003BE")]
	[FieldOffset(Offset = "0x5D")]
	public bool isZombie;

	[Token(Token = "0x40003BF")]
	[FieldOffset(Offset = "0x5E")]
	public bool onCardBank;

	[Token(Token = "0x40003C0")]
	[FieldOffset(Offset = "0x60")]
	private Slider slider;

	[Token(Token = "0x40003C1")]
	[FieldOffset(Offset = "0x68")]
	protected TextMeshProUGUI text;

	[Token(Token = "0x40003C2")]
	[FieldOffset(Offset = "0x70")]
	protected TextMeshProUGUI textBg;

	[Token(Token = "0x40003C3")]
	[FieldOffset(Offset = "0x78")]
	public PlantType thePlantType;

	[Token(Token = "0x40003C4")]
	[FieldOffset(Offset = "0x7C")]
	public ZombieType theZombieType;

	[Token(Token = "0x40003C5")]
	[FieldOffset(Offset = "0x80")]
	public List<Sprite> sprites;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x4612E0", Offset = "0x45FEE0", VA = "0x1804612E0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x462850", Offset = "0x461450", VA = "0x180462850", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x461B80", Offset = "0x460780", VA = "0x180461B80")]
	private void LevelLim()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x462BB0", Offset = "0x4617B0", VA = "0x180462BB0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x461680", Offset = "0x460280", VA = "0x180461680", Slot = "7")]
	protected virtual void CDUpdate()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x462640", Offset = "0x461240", VA = "0x180462640")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x3122A0", Offset = "0x310EA0", VA = "0x1803122A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x462390", Offset = "0x460F90", VA = "0x180462390", Slot = "8")]
	protected virtual void OnMouseDown()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x4626D0", Offset = "0x4612D0", VA = "0x1804626D0", Slot = "9")]
	public virtual bool PickUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x462730", Offset = "0x461330", VA = "0x180462730")]
	public void PutDown()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x462790", Offset = "0x461390", VA = "0x180462790")]
	public void SetLevel(int index)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x461B20", Offset = "0x460720", VA = "0x180461B20")]
	public void Die()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x4618D0", Offset = "0x4604D0", VA = "0x1804618D0")]
	public void ChangeCardSprite()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x462D40", Offset = "0x461940", VA = "0x180462D40")]
	public CardUI()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarGameStatus
using Il2CppDummyDll;

[Token(Token = "0x2000032")]
public enum CarGameStatus
{
	[Token(Token = "0x40000ED")]
	Fighting,
	[Token(Token = "0x40000EE")]
	Waiting
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000033")]
public class CarManager : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[FieldOffset(Offset = "0x0")]
	public static CarManager Instance;

	[Token(Token = "0x40000F0")]
	[FieldOffset(Offset = "0x20")]
	public int currentBulletCount;

	[Token(Token = "0x40000F1")]
	[FieldOffset(Offset = "0x24")]
	public CarGameStatus theGameStatus;

	[Token(Token = "0x40000F2")]
	[FieldOffset(Offset = "0x28")]
	private readonly GameObject[] carBodyPrefab;

	[Token(Token = "0x40000F3")]
	[FieldOffset(Offset = "0x30")]
	private readonly GameObject[] carWheelPrefab;

	[Token(Token = "0x40000F4")]
	[FieldOffset(Offset = "0x38")]
	public CarObject objectFollowMouse;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x307DF0", Offset = "0x3069F0", VA = "0x180307DF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x3085D0", Offset = "0x3071D0", VA = "0x1803085D0")]
	public void LoadResources()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x3084D0", Offset = "0x3070D0", VA = "0x1803084D0")]
	private void LoadCardBody()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x308370", Offset = "0x306F70", VA = "0x180308370")]
	private void LoadCarWheel()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x308440", Offset = "0x307040", VA = "0x180308440")]
	private void LoadCardBody2(CarBodyType carBodyType, string path)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x3082E0", Offset = "0x306EE0", VA = "0x1803082E0")]
	private void LoadCarWheel2(CarWheelType theWheelType, string path)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x308ED0", Offset = "0x307AD0", VA = "0x180308ED0")]
	public CarBullet SetBullet(Vector2 position, GameObject prefab, int theBulletDamage, Car car)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x307FF0", Offset = "0x306BF0", VA = "0x180307FF0")]
	public CarBody CreateCarBody(CarBodyType type)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x3081E0", Offset = "0x306DE0", VA = "0x1803081E0")]
	public CarWheel CreateCarWheel(CarWheelType type)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x3080F0", Offset = "0x306CF0", VA = "0x1803080F0")]
	public CarWeapon CreateCarWeapon(CarWeaponType type)
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x309090", Offset = "0x307C90", VA = "0x180309090")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x308780", Offset = "0x307380", VA = "0x180308780")]
	private void MouseUpdate()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x3090D0", Offset = "0x307CD0", VA = "0x1803090D0")]
	public CarManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarObject
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000034")]
public class CarObject : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[FieldOffset(Offset = "0x20")]
	public Car car;

	[Token(Token = "0x40000F6")]
	[FieldOffset(Offset = "0x28")]
	public Transform pos;

	[Token(Token = "0x40000F7")]
	[FieldOffset(Offset = "0x30")]
	public Rigidbody2D rb;

	[Token(Token = "0x40000F8")]
	[FieldOffset(Offset = "0x38")]
	public int cost;

	[Token(Token = "0x40000F9")]
	[FieldOffset(Offset = "0x3C")]
	public int level;

	[Token(Token = "0x40000FA")]
	[FieldOffset(Offset = "0x40")]
	public int theHealth;

	[Token(Token = "0x40000FB")]
	[FieldOffset(Offset = "0x44")]
	public int theDamage;

	[Token(Token = "0x40000FC")]
	[FieldOffset(Offset = "0x48")]
	public CardObjectType theObjectType;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x309380", Offset = "0x307F80", VA = "0x180309380", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CarObject()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarObjectCard
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000035")]
public class CarObjectCard : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[FieldOffset(Offset = "0x20")]
	public CarWheelType wheelType;

	[Token(Token = "0x40000FE")]
	[FieldOffset(Offset = "0x24")]
	public CarWeaponType weaponType;

	[Token(Token = "0x40000FF")]
	[FieldOffset(Offset = "0x28")]
	public CarBodyType bodyType;

	[Token(Token = "0x4000100")]
	[FieldOffset(Offset = "0x2C")]
	public CardObjectType theObjectType;

	[Token(Token = "0x4000101")]
	[FieldOffset(Offset = "0x30")]
	public int cost;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x309210", Offset = "0x307E10", VA = "0x180309210")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x309150", Offset = "0x307D50", VA = "0x180309150")]
	public CarObject GetCarObject()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CarObjectCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarPos
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000036")]
public class CarPos : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[FieldOffset(Offset = "0x20")]
	public CarPosType thePosType;

	[Token(Token = "0x4000103")]
	[FieldOffset(Offset = "0x28")]
	public Car car;

	[Token(Token = "0x4000104")]
	[FieldOffset(Offset = "0x30")]
	public CarObject carObject;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CarPos()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarPositionData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000040")]
public struct CarPositionData
{
	[Token(Token = "0x4000128")]
	[FieldOffset(Offset = "0x0")]
	public CarPosType type;

	[Token(Token = "0x4000129")]
	[FieldOffset(Offset = "0x4")]
	public float x;

	[Token(Token = "0x400012A")]
	[FieldOffset(Offset = "0x8")]
	public float y;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarPosType
using Il2CppDummyDll;

[Token(Token = "0x2000031")]
public enum CarPosType
{
	[Token(Token = "0x40000EA")]
	WeaponPos,
	[Token(Token = "0x40000EB")]
	WheelPos
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarUI
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000037")]
public class CarUI : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[FieldOffset(Offset = "0x0")]
	public static CarUI Instance;

	[Token(Token = "0x4000106")]
	[FieldOffset(Offset = "0x20")]
	public List<GameObject> pages;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x3095C0", Offset = "0x3081C0", VA = "0x1803095C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x309620", Offset = "0x308220", VA = "0x180309620")]
	public CarUI()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarUIBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000038")]
public class CarUIBtn : UIBtn
{
	[Token(Token = "0x4000107")]
	[FieldOffset(Offset = "0x60")]
	public int theButtonType;

	[Token(Token = "0x4000108")]
	[FieldOffset(Offset = "0x68")]
	public GameObject pageToOpen;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x3093D0", Offset = "0x307FD0", VA = "0x1803093D0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public CarUIBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWall
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000039")]
public class CarWall : MonoBehaviour
{
	[Token(Token = "0x200003A")]
	public enum CarPosition
	{
		[Token(Token = "0x400010B")]
		left,
		[Token(Token = "0x400010C")]
		right
	}

	[Token(Token = "0x4000109")]
	[FieldOffset(Offset = "0x20")]
	public CarPosition position;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CarWall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWeapon
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200003B")]
public class CarWeapon : CarObject
{
	[Token(Token = "0x400010D")]
	[FieldOffset(Offset = "0x50")]
	public CarWeaponType theWeaponType;

	[Token(Token = "0x400010E")]
	[FieldOffset(Offset = "0x54")]
	public BulletType bulletType;

	[Token(Token = "0x400010F")]
	[FieldOffset(Offset = "0x58")]
	public GameObject bullet;

	[Token(Token = "0x4000110")]
	[FieldOffset(Offset = "0x60")]
	public GameObject particle;

	[Token(Token = "0x4000111")]
	[FieldOffset(Offset = "0x68")]
	public Transform shoot;

	[Token(Token = "0x4000112")]
	[FieldOffset(Offset = "0x70")]
	public float attackCountDown;

	[Token(Token = "0x4000113")]
	[FieldOffset(Offset = "0x74")]
	private readonly float attackInterval;

	[Token(Token = "0x4000114")]
	[FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x309920", Offset = "0x308520", VA = "0x180309920", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x309970", Offset = "0x308570", VA = "0x180309970")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x309970", Offset = "0x308570", VA = "0x180309970")]
	private void ShootUpdate()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x3096A0", Offset = "0x3082A0", VA = "0x1803096A0", Slot = "5")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x3099F0", Offset = "0x3085F0", VA = "0x1803099F0")]
	public CarWeapon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWeaponData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000041")]
public struct CarWeaponData
{
	[Token(Token = "0x400012B")]
	[FieldOffset(Offset = "0x0")]
	public CarWeaponType type;

	[Token(Token = "0x400012C")]
	[FieldOffset(Offset = "0x4")]
	public int level;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWeaponType
using Il2CppDummyDll;

[Token(Token = "0x200002D")]
public enum CarWeaponType
{
	[Token(Token = "0x40000DC")]
	Nothing = -1,
	[Token(Token = "0x40000DD")]
	SuperCherryShooter
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWheel
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200003C")]
public class CarWheel : CarObject
{
	[Token(Token = "0x4000115")]
	[FieldOffset(Offset = "0x50")]
	public CarWheelType theWheelType;

	[Token(Token = "0x4000116")]
	[FieldOffset(Offset = "0x54")]
	public int theSpeed;

	[Token(Token = "0x4000117")]
	[FieldOffset(Offset = "0x58")]
	public HingeJoint2D joint;

	[Token(Token = "0x4000118")]
	[FieldOffset(Offset = "0x60")]
	private Vector3 offset;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x309A00", Offset = "0x308600", VA = "0x180309A00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x309B50", Offset = "0x308750", VA = "0x180309B50")]
	private void OnCollisionStay2D(Collision2D collision)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x309C60", Offset = "0x308860", VA = "0x180309C60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CarWheel()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWheelData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000042")]
public struct CarWheelData
{
	[Token(Token = "0x400012D")]
	[FieldOffset(Offset = "0x0")]
	public CarWheelType type;

	[Token(Token = "0x400012E")]
	[FieldOffset(Offset = "0x4")]
	public int level;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CarWheelType
using Il2CppDummyDll;

[Token(Token = "0x200002E")]
public enum CarWheelType
{
	[Token(Token = "0x40000DF")]
	Nothing = -1,
	[Token(Token = "0x40000E0")]
	CabbageWheel,
	[Token(Token = "0x40000E1")]
	WoodWheel,
	[Token(Token = "0x40000E2")]
	MelonWheel
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CatapultZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C2")]
public class CatapultZombie : Zombie
{
	[Token(Token = "0x4000817")]
	[FieldOffset(Offset = "0x220")]
	protected bool shooting;

	[Token(Token = "0x4000818")]
	[FieldOffset(Offset = "0x228")]
	protected Plant _target;

	[Token(Token = "0x4000819")]
	[FieldOffset(Offset = "0x230")]
	[SerializeField]
	protected int basketballNum;

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x373600", Offset = "0x372200", VA = "0x180373600", Slot = "55")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x3739B0", Offset = "0x3725B0", VA = "0x1803739B0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x373E70", Offset = "0x372A70", VA = "0x180373E70", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x373C90", Offset = "0x372890", VA = "0x180373C90")]
	protected void DieAndExplde()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x35F2D0", Offset = "0x35DED0", VA = "0x18035F2D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x373CB0", Offset = "0x3728B0", VA = "0x180373CB0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x35F920", Offset = "0x35E520", VA = "0x18035F920", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x374630", Offset = "0x373230", VA = "0x180374630", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x373BB0", Offset = "0x3727B0", VA = "0x180373BB0", Slot = "56")]
	protected virtual void CataUpdate()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x3742B0", Offset = "0x372EB0", VA = "0x1803742B0")]
	protected void SearchPlantUpdate()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x374660", Offset = "0x373260", VA = "0x180374660")]
	public CatapultZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CattailGirl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000200")]
public class CattailGirl : Shooter
{
	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x4D4C80", Offset = "0x4D3880", VA = "0x1804D4C80", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x4D4F40", Offset = "0x4D3B40", VA = "0x1804D4F40", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x4D5060", Offset = "0x4D3C60", VA = "0x1804D5060", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x4D4D70", Offset = "0x4D3970", VA = "0x1804D4D70", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x4D4CD0", Offset = "0x4D38D0", VA = "0x1804D4CD0", Slot = "27")]
	protected override bool SearchUniqueZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x4D4A60", Offset = "0x4D3660", VA = "0x1804D4A60", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public CattailGirl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CattailLour
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000201")]
public class CattailLour : CattailPlant
{
	[Token(Token = "0x400070C")]
	[FieldOffset(Offset = "0x1C0")]
	public GameObject flyPrefab;

	[Token(Token = "0x400070D")]
	[FieldOffset(Offset = "0x1C8")]
	public Transform flyPos;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x4D5180", Offset = "0x4D3D80", VA = "0x1804D5180", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x4D5400", Offset = "0x4D4000", VA = "0x1804D5400")]
	public void Supply()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x4D51D0", Offset = "0x4D3DD0", VA = "0x1804D51D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public CattailLour()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CattailPlant
using Il2CppDummyDll;

[Token(Token = "0x2000202")]
public class CattailPlant : CattailGirl
{
	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x4D5650", Offset = "0x4D4250", VA = "0x1804D5650", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public CattailPlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CCC
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D8")]
[RequireComponent(typeof(Animator), typeof(Rigidbody2D))]
public class CCC : MonoBehaviour
{
	[Token(Token = "0x40010BB")]
	[FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x40010BC")]
	[FieldOffset(Offset = "0x28")]
	private Rigidbody2D rb;

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x431150", Offset = "0x42FD50", VA = "0x180431150")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x4311E0", Offset = "0x42FDE0", VA = "0x1804311E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x431120", Offset = "0x42FD20", VA = "0x180431120")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CCC()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ChallengeLevel
using Il2CppDummyDll;

[Token(Token = "0x20003AF")]
public enum ChallengeLevel
{
	[Token(Token = "0x4000F5D")]
	Travel1 = 1,
	[Token(Token = "0x4000F5E")]
	Travel2,
	[Token(Token = "0x4000F5F")]
	Travel3,
	[Token(Token = "0x4000F60")]
	Travel4,
	[Token(Token = "0x4000F61")]
	Travel5,
	[Token(Token = "0x4000F62")]
	Travel6,
	[Token(Token = "0x4000F63")]
	SuperCherryShooter,
	[Token(Token = "0x4000F64")]
	SuperCherryShooter2,
	[Token(Token = "0x4000F65")]
	SuperCherryShooter3,
	[Token(Token = "0x4000F66")]
	SuperChomper,
	[Token(Token = "0x4000F67")]
	SuperChomper2,
	[Token(Token = "0x4000F68")]
	SuperChomper3,
	[Token(Token = "0x4000F69")]
	FlagDay,
	[Token(Token = "0x4000F6A")]
	FlagPlantZombie,
	[Token(Token = "0x4000F6B")]
	FlagRandomPlant,
	[Token(Token = "0x4000F6C")]
	FlagRandomZombie,
	[Token(Token = "0x4000F6D")]
	FlagRandomAll,
	[Token(Token = "0x4000F6E")]
	FlagNight,
	[Token(Token = "0x4000F6F")]
	SuperHypno,
	[Token(Token = "0x4000F70")]
	SuperHypno2,
	[Token(Token = "0x4000F71")]
	SuperHypno3,
	[Token(Token = "0x4000F72")]
	SuperFume,
	[Token(Token = "0x4000F73")]
	SuperFume2,
	[Token(Token = "0x4000F74")]
	SuperFume3,
	[Token(Token = "0x4000F75")]
	ScaredDream,
	[Token(Token = "0x4000F76")]
	FlagDream,
	[Token(Token = "0x4000F77")]
	FlagElite,
	[Token(Token = "0x4000F78")]
	PolDance,
	[Token(Token = "0x4000F79")]
	PuffTime,
	[Token(Token = "0x4000F7A")]
	PaperBattle,
	[Token(Token = "0x4000F7B")]
	SuperTorch,
	[Token(Token = "0x4000F7C")]
	SuperKelp,
	[Token(Token = "0x4000F7D")]
	FlagPool,
	[Token(Token = "0x4000F7E")]
	DriverBattle,
	[Token(Token = "0x4000F7F")]
	TowerDefense,
	[Token(Token = "0x4000F80")]
	TowerDefense2,
	[Token(Token = "0x4000F81")]
	Doll,
	[Token(Token = "0x4000F82")]
	Column,
	[Token(Token = "0x4000F83")]
	SuperPresent,
	[Token(Token = "0x4000F84")]
	Shooting,
	[Token(Token = "0x4000F85")]
	FlagShooting,
	[Token(Token = "0x4000F86")]
	SeedRain,
	[Token(Token = "0x4000F87")]
	Indestructible,
	[Token(Token = "0x4000F88")]
	AirBattle,
	[Token(Token = "0x4000F89")]
	Travel7,
	[Token(Token = "0x4000F8A")]
	Travel8,
	[Token(Token = "0x4000F8B")]
	BigMapDay,
	[Token(Token = "0x4000F8C")]
	UltimatePresent,
	[Token(Token = "0x4000F8D")]
	BigMapPool,
	[Token(Token = "0x4000F8E")]
	TowerDefense3,
	[Token(Token = "0x4000F8F")]
	Travel9,
	[Token(Token = "0x4000F90")]
	CustomMapEditor,
	[Token(Token = "0x4000F91")]
	CustomMap,
	[Token(Token = "0x4000F92")]
	SuperStar,
	[Token(Token = "0x4000F93")]
	SuperPumpkin,
	[Token(Token = "0x4000F94")]
	RandomTower,
	[Token(Token = "0x4000F95")]
	FlagFog,
	[Token(Token = "0x4000F96")]
	Explosion,
	[Token(Token = "0x4000F97")]
	PogoParty,
	[Token(Token = "0x4000F98")]
	Travel10,
	[Token(Token = "0x4000F99")]
	Garden1,
	[Token(Token = "0x4000F9A")]
	Gargantuar,
	[Token(Token = "0x4000F9B")]
	ZumaGame,
	[Token(Token = "0x4000F9C")]
	WheatProtection,
	[Token(Token = "0x4000F9D")]
	Squalour,
	[Token(Token = "0x4000F9E")]
	Mirror,
	[Token(Token = "0x4000F9F")]
	HypnoNut,
	[Token(Token = "0x4000FA0")]
	FlagExchange,
	[Token(Token = "0x4000FA1")]
	FlagExchange2,
	[Token(Token = "0x4000FA2")]
	Travel11,
	[Token(Token = "0x4000FA3")]
	Travel12,
	[Token(Token = "0x4000FA4")]
	Shooting2,
	[Token(Token = "0x4000FA5")]
	FlagShooting2,
	[Token(Token = "0x4000FA6")]
	SuperMelon,
	[Token(Token = "0x4000FA7")]
	SuperUmbrella,
	[Token(Token = "0x4000FA8")]
	Loon,
	[Token(Token = "0x4000FA9")]
	Boss,
	[Token(Token = "0x4000FAA")]
	GoldMagnet,
	[Token(Token = "0x4000FAB")]
	Travel13,
	[Token(Token = "0x4000FAC")]
	FlagConvey,
	[Token(Token = "0x4000FAD")]
	TowerDefense4,
	[Token(Token = "0x4000FAE")]
	PuffTime2,
	[Token(Token = "0x4000FAF")]
	TowerDefense5,
	[Token(Token = "0x4000FB0")]
	Shooting3,
	[Token(Token = "0x4000FB1")]
	FlagShooting3,
	[Token(Token = "0x4000FB2")]
	ObsidianImp,
	[Token(Token = "0x4000FB3")]
	FlagRoof,
	[Token(Token = "0x4000FB4")]
	ShootingAll,
	[Token(Token = "0x4000FB5")]
	Garden2,
	[Token(Token = "0x4000FB6")]
	Garden3,
	[Token(Token = "0x4000FB7")]
	Garden4,
	[Token(Token = "0x4000FB8")]
	Garden5,
	[Token(Token = "0x4000FB9")]
	ImitaterRandom,
	[Token(Token = "0x4000FBA")]
	Travel14,
	[Token(Token = "0x4000FBB")]
	ImitaterRandom2,
	[Token(Token = "0x4000FBC")]
	DisMix,
	[Token(Token = "0x4000FBD")]
	TowerDefense6,
	[Token(Token = "0x4000FBE")]
	Single,
	[Token(Token = "0x4000FBF")]
	BungiBattle,
	[Token(Token = "0x4000FC0")]
	Bejeweled,
	[Token(Token = "0x4000FC1")]
	Travel15,
	[Token(Token = "0x4000FC2")]
	ScaryPot,
	[Token(Token = "0x4000FC3")]
	ScaryPot2,
	[Token(Token = "0x4000FC4")]
	NewGarden,
	[Token(Token = "0x4000FC5")]
	TravelAll,
	[Token(Token = "0x4000FC6")]
	UltimateBattle,
	[Token(Token = "0x4000FC7")]
	LookStar,
	[Token(Token = "0x4000FC8")]
	Travel16,
	[Token(Token = "0x4000FC9")]
	RandomMix,
	[Token(Token = "0x4000FCA")]
	RandomMix2,
	[Token(Token = "0x4000FCB")]
	GloveZombie,
	[Token(Token = "0x4000FCC")]
	UltimateRandom,
	[Token(Token = "0x4000FCD")]
	Shooting4,
	[Token(Token = "0x4000FCE")]
	HappyRandom,
	[Token(Token = "0x4000FCF")]
	ScaryPot3,
	[Token(Token = "0x4000FD0")]
	BilliardBall,
	[Token(Token = "0x4000FD1")]
	BilliardBall2,
	[Token(Token = "0x4000FD2")]
	BilliardBall3,
	[Token(Token = "0x4000FD3")]
	OppositeRandom,
	[Token(Token = "0x4000FD4")]
	UltimateRandom2,
	[Token(Token = "0x4000FD5")]
	Shooting5,
	[Token(Token = "0x4000FD6")]
	PVPScaryPot,
	[Token(Token = "0x4000FD7")]
	HammerZombie,
	[Token(Token = "0x4000FD8")]
	HammerZombie2,
	[Token(Token = "0x4000FD9")]
	FastZombie,
	[Token(Token = "0x4000FDA")]
	HugeGravity
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Charred
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002AE")]
public class Charred : MonoBehaviour
{
	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x374680", Offset = "0x373280", VA = "0x180374680")]
	public void Die()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Charred()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CheckAdv
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F0")]
public class CheckAdv : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[FieldOffset(Offset = "0x20")]
	private int theLevel;

	[Token(Token = "0x40003D4")]
	[FieldOffset(Offset = "0x24")]
	public bool travel;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x464690", Offset = "0x463290", VA = "0x180464690")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CheckAdv()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryBomb
using Il2CppDummyDll;

[Token(Token = "0x200013E")]
public class CherryBomb : Plant
{
	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x48CE20", Offset = "0x48BA20", VA = "0x18048CE20", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x48CB10", Offset = "0x48B710", VA = "0x18048CB10")]
	public void Bomb()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x48CDC0", Offset = "0x48B9C0", VA = "0x18048CDC0")]
	public void PlaySoundStart()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public CherryBomb()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryCatapultZombie
using Il2CppDummyDll;

[Token(Token = "0x20002C3")]
public class CherryCatapultZombie : CatapultZombie
{
	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x3746E0", Offset = "0x3732E0", VA = "0x1803746E0", Slot = "55")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x374660", Offset = "0x373260", VA = "0x180374660")]
	public CherryCatapultZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryChomper
using Il2CppDummyDll;

[Token(Token = "0x2000151")]
public class CherryChomper : Chomper
{
	[Token(Token = "0x600065E")]
	[Address(RVA = "0x4AE3E0", Offset = "0x4ACFE0", VA = "0x1804AE3E0", Slot = "43")]
	protected override void Chomp(Zombie zombie)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public CherryChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryGatling
using Il2CppDummyDll;

[Token(Token = "0x2000203")]
public class CherryGatling : Shooter
{
	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x4D57B0", Offset = "0x4D43B0", VA = "0x1804D57B0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public CherryGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryJalapeno
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200013F")]
public class CherryJalapeno : Plant
{
	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x339B90", Offset = "0x338790", VA = "0x180339B90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x48D160", Offset = "0x48BD60", VA = "0x18048D160", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x48CEC0", Offset = "0x48BAC0", VA = "0x18048CEC0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x48D210", Offset = "0x48BE10", VA = "0x18048D210", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x48CEF0", Offset = "0x48BAF0", VA = "0x18048CEF0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "16")]
	public override void Crashed(int level = 0, int soundID = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public CherryJalapeno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryLittleFly
using Il2CppDummyDll;

[Token(Token = "0x200016D")]
public class CherryLittleFly : UltimateLittleFly
{
	[Token(Token = "0x400064D")]
	[FieldOffset(Offset = "0x80")]
	public int dmg;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x4AE810", Offset = "0x4AD410", VA = "0x1804AE810", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x4AE6D0", Offset = "0x4AD2D0", VA = "0x1804AE6D0", Slot = "8")]
	public override void Die()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x4AEFD0", Offset = "0x4ADBD0", VA = "0x1804AEFD0")]
	public CherryLittleFly()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryMagnet
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200016E")]
public class CherryMagnet : Magnetshroom
{
	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <MoveObject>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000655")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000656")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveObject>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x4BE110", Offset = "0x4BCD10", VA = "0x1804BE110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x4BE120", Offset = "0x4BCD20", VA = "0x1804BE120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064E")]
	[FieldOffset(Offset = "0x1D8")]
	public Transform attrackCenter;

	[Token(Token = "0x400064F")]
	[FieldOffset(Offset = "0x1E0")]
	public float gravitationalForce;

	[Token(Token = "0x4000650")]
	[FieldOffset(Offset = "0x1E4")]
	private readonly float minDistance;

	[Token(Token = "0x4000651")]
	[FieldOffset(Offset = "0x1E8")]
	private float timer;

	[Token(Token = "0x4000652")]
	[FieldOffset(Offset = "0x1EC")]
	private Vector2 attackPosition;

	[Token(Token = "0x4000653")]
	[FieldOffset(Offset = "0x1F4")]
	private int targetRow;

	[Token(Token = "0x4000654")]
	[FieldOffset(Offset = "0x1F8")]
	private int attackCount;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x4AF9B0", Offset = "0x4AE5B0", VA = "0x1804AF9B0", Slot = "43")]
	protected override void SetItemUseable(GameObject obj)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x4AF100", Offset = "0x4ADD00", VA = "0x1804AF100", Slot = "40")]
	protected override void AttrackItem(GameObject item, int theRow)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x4AF300", Offset = "0x4ADF00", VA = "0x1804AF300")]
	private Vector2 GetCounterClockwiseVector(Vector2 originalVector, float angleDegrees)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x4AF1A0", Offset = "0x4ADDA0", VA = "0x1804AF1A0", Slot = "41")]
	protected override void ChangeLayer()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x4B02F0", Offset = "0x4AEEF0", VA = "0x1804B02F0", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x4AF660", Offset = "0x4AE260", VA = "0x1804AF660")]
	private Rigidbody2D SetAndGetRigidbody2D(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x4AFA70", Offset = "0x4AE670", VA = "0x1804AFA70")]
	private void TargetItemUpdate()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x4B0160", Offset = "0x4AED60", VA = "0x1804B0160", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x4AF270", Offset = "0x4ADE70", VA = "0x1804AF270", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x4AEFE0", Offset = "0x4ADBE0", VA = "0x1804AEFE0")]
	private void AttackUpdate()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x4AF3A0", Offset = "0x4ADFA0", VA = "0x1804AF3A0", Slot = "44")]
	[IteratorStateMachine(typeof(<MoveObject>d__17))]
	protected override IEnumerator MoveObject(GameObject obj, Vector2 targetPosition, float duration)
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x4AF3F0", Offset = "0x4ADFF0", VA = "0x1804AF3F0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x4AF8E0", Offset = "0x4AE4E0", VA = "0x1804AF8E0")]
	private void SetBucketColor(Transform gameObject)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x4B0640", Offset = "0x4AF240", VA = "0x1804B0640")]
	public CherryMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryMine
using Il2CppDummyDll;

[Token(Token = "0x2000170")]
public class CherryMine : Plant
{
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x4B06C0", Offset = "0x4AF2C0", VA = "0x1804B06C0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public CherryMine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryNut
using Il2CppDummyDll;

[Token(Token = "0x2000152")]
public class CherryNut : WallNut
{
	[Token(Token = "0x6000660")]
	[Address(RVA = "0x4B0B30", Offset = "0x4AF730", VA = "0x1804B0B30", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CherryNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryNutPlus
using Il2CppDummyDll;

[Token(Token = "0x2000153")]
public class CherryNutPlus : CherryNut
{
	[Token(Token = "0x6000662")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CherryNutPlus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryNutZ
using Il2CppDummyDll;

[Token(Token = "0x2000290")]
public class CherryNutZ : WallNutZ
{
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x35C790", Offset = "0x35B390", VA = "0x18035C790", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public CherryNutZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryPeaShooter
using Il2CppDummyDll;

[Token(Token = "0x2000204")]
public class CherryPeaShooter : Shooter
{
	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x4D5910", Offset = "0x4D4510", VA = "0x1804D5910", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public CherryPeaShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryShooterZ
using Il2CppDummyDll;

[Token(Token = "0x20002C4")]
public class CherryShooterZ : PeaShooterZ
{
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x374F70", Offset = "0x373B70", VA = "0x180374F70", Slot = "55")]
	public override Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x375160", Offset = "0x373D60", VA = "0x180375160")]
	public CherryShooterZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherrySplit
using Il2CppDummyDll;

[Token(Token = "0x2000205")]
public class CherrySplit : SplitPea
{
	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x4D5A70", Offset = "0x4D4670", VA = "0x1804D5A70", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x4D5C90", Offset = "0x4D4890", VA = "0x1804D5C90", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public CherrySplit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000171")]
public class CherryTorch : SquashTorch
{
	[Token(Token = "0x4000657")]
	[FieldOffset(Offset = "0x1C0")]
	public GameObject cherryFlyPrefab;

	[Token(Token = "0x4000658")]
	[FieldOffset(Offset = "0x1C8")]
	private readonly CherryLittleFly[] cherryLittleFlies;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x4B0D30", Offset = "0x4AF930", VA = "0x1804B0D30", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x4B0E80", Offset = "0x4AFA80", VA = "0x1804B0E80", Slot = "40")]
	protected override bool SummonPlant(int dmg = 300)
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x4B0CA0", Offset = "0x4AF8A0", VA = "0x1804B0CA0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x4B1110", Offset = "0x4AFD10", VA = "0x1804B1110")]
	public CherryTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryUltimatePumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000172")]
public class CherryUltimatePumpkin : UltimatePumpkin
{
	[Token(Token = "0x6000703")]
	[Address(RVA = "0x4B1170", Offset = "0x4AFD70", VA = "0x1804B1170", Slot = "41")]
	protected override GameObject GetFly()
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x4B11C0", Offset = "0x4AFDC0", VA = "0x1804B11C0")]
	public CherryUltimatePumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CherryUmbrella
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000173")]
public class CherryUmbrella : CornUmbrella
{
	[Token(Token = "0x4000659")]
	[FieldOffset(Offset = "0x1C8")]
	private TextMeshPro energyText;

	[Token(Token = "0x400065A")]
	[FieldOffset(Offset = "0x1D0")]
	private TextMeshPro energyTextShadow;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x4B12E0", Offset = "0x4AFEE0", VA = "0x1804B12E0", Slot = "39")]
	public override void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x4B11D0", Offset = "0x4AFDD0", VA = "0x1804B11D0", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x4B1390", Offset = "0x4AFF90", VA = "0x1804B1390", Slot = "10")]
	public override GameObject InitText()
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x4B1580", Offset = "0x4B0180", VA = "0x1804B1580", Slot = "11")]
	public override void UpdateText()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CherryUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Chomper
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000174")]
public class Chomper : Attacker
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected GameObject chomperTarget;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected Vector2 pos;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	protected float swallowMaxCountDown;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	protected bool canToChew;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected Vector2 range;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected Vector2 centerOffset;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x4B1690", Offset = "0x4B0290", VA = "0x1804B1690", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x4B22F0", Offset = "0x4B0EF0", VA = "0x1804B22F0", Slot = "38")]
	protected override void UpgradeEvent(int theCurrentLevel)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x4B2140", Offset = "0x4B0D40", VA = "0x1804B2140", Slot = "39")]
	protected virtual void SetAttackRange()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x4B22C0", Offset = "0x4B0EC0", VA = "0x1804B22C0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x4B1670", Offset = "0x4B0270", VA = "0x1804B1670", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x4B21C0", Offset = "0x4B0DC0", VA = "0x1804B21C0", Slot = "40")]
	protected virtual void Swallow()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x4B19A0", Offset = "0x4B05A0", VA = "0x1804B19A0", Slot = "41")]
	public virtual void ChomperSearchZombie([Optional] Collider2D collision)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x4B1EE0", Offset = "0x4B0AE0", VA = "0x1804B1EE0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x4B16C0", Offset = "0x4B02C0", VA = "0x1804B16C0", Slot = "42")]
	public virtual void BiteEvent()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x4B18E0", Offset = "0x4B04E0", VA = "0x1804B18E0", Slot = "43")]
	protected virtual void Chomp(Zombie zombie)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x4B1840", Offset = "0x4B0440", VA = "0x1804B1840")]
	protected void ChompBack()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x4B2130", Offset = "0x4B0D30", VA = "0x1804B2130")]
	protected void ResetCount()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x4B2260", Offset = "0x4B0E60", VA = "0x1804B2260")]
	public void ToChew()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x4B1F40", Offset = "0x4B0B40", VA = "0x1804B1F40")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public Chomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ChomperAttackRange
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200013D")]
public class ChomperAttackRange : MonoBehaviour
{
	[Token(Token = "0x4000607")]
	[FieldOffset(Offset = "0x20")]
	public Chomper chomper;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x48D320", Offset = "0x48BF20", VA = "0x18048D320")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ChomperAttackRange()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ClgLevelMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200037E")]
public class ClgLevelMgr : MonoBehaviour
{
	[Token(Token = "0x4000C31")]
	[FieldOffset(Offset = "0x20")]
	public int currentPage;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x3E97A0", Offset = "0x3E83A0", VA = "0x1803E97A0")]
	public void ChangePage(int page)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ClgLevelMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Close
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000074")]
public class Close : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x400025A")]
	[FieldOffset(Offset = "0x28")]
	private Sprite originSprite;

	[Token(Token = "0x400025B")]
	[FieldOffset(Offset = "0x30")]
	private Vector3 originPosition;

	[Token(Token = "0x400025C")]
	[FieldOffset(Offset = "0x40")]
	private SpriteRenderer r;

	[Token(Token = "0x400025D")]
	[FieldOffset(Offset = "0x48")]
	public bool CloseGroup;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x42EE10", Offset = "0x42DA10", VA = "0x18042EE10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x425840", Offset = "0x424440", VA = "0x180425840")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x425870", Offset = "0x424470", VA = "0x180425870")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x42E990", Offset = "0x42D590", VA = "0x18042E990")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x42EA40", Offset = "0x42D640", VA = "0x18042EA40")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Close()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CobCannon
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000175")]
public class CobCannon : Plant
{
	[Token(Token = "0x4000661")]
	[FieldOffset(Offset = "0x1B8")]
	public Vector3 target;

	[Token(Token = "0x4000662")]
	[FieldOffset(Offset = "0x1C4")]
	public bool avaliable;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x4B2550", Offset = "0x4B1150", VA = "0x1804B2550", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x4B25A0", Offset = "0x4B11A0", VA = "0x1804B25A0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x4B2720", Offset = "0x4B1320", VA = "0x1804B2720", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x4B26C0", Offset = "0x4B12C0", VA = "0x1804B26C0", Slot = "39")]
	public virtual void StartShoot()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x4B2500", Offset = "0x4B1100", VA = "0x1804B2500", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x4B2340", Offset = "0x4B0F40", VA = "0x1804B2340", Slot = "40")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x4B2660", Offset = "0x4B1260", VA = "0x1804B2660")]
	private void ShootSound()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x4B25F0", Offset = "0x4B11F0", VA = "0x1804B25F0")]
	private void Shoop()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public CobCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CoinMoney
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000127")]
public class CoinMoney : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[FieldOffset(Offset = "0x20")]
	public int theCoinType;

	[Token(Token = "0x40004CB")]
	[FieldOffset(Offset = "0x24")]
	public int theMoveType;

	[Token(Token = "0x40004CC")]
	[FieldOffset(Offset = "0x28")]
	public int moneyPrice;

	[Token(Token = "0x40004CD")]
	[FieldOffset(Offset = "0x30")]
	private Transform target;

	[Token(Token = "0x40004CE")]
	[FieldOffset(Offset = "0x38")]
	private float moveSpeed;

	[Token(Token = "0x40004CF")]
	[FieldOffset(Offset = "0x3C")]
	private bool isLand;

	[Token(Token = "0x40004D0")]
	[FieldOffset(Offset = "0x40")]
	public float horizontalSpeed;

	[Token(Token = "0x40004D1")]
	[FieldOffset(Offset = "0x44")]
	public float verticalSpeed;

	[Token(Token = "0x40004D2")]
	[FieldOffset(Offset = "0x48")]
	public float gravity;

	[Token(Token = "0x40004D3")]
	[FieldOffset(Offset = "0x4C")]
	private Vector2 velocity;

	[Token(Token = "0x40004D4")]
	[FieldOffset(Offset = "0x54")]
	private Vector2 startPosition;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x47C3A0", Offset = "0x47AFA0", VA = "0x18047C3A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x47C600", Offset = "0x47B200", VA = "0x18047C600")]
	private void Update()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x47BE70", Offset = "0x47AA70", VA = "0x18047BE70")]
	private void MoveToPosition()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x47BE10", Offset = "0x47AA10", VA = "0x18047BE10")]
	public void Die()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x47C770", Offset = "0x47B370", VA = "0x18047C770")]
	public CoinMoney()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CoinSun
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F1")]
public class CoinSun : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[FieldOffset(Offset = "0x20")]
	public int theCoinType;

	[Token(Token = "0x40003D6")]
	[FieldOffset(Offset = "0x24")]
	public float dieCountDown;

	[Token(Token = "0x40003D7")]
	[FieldOffset(Offset = "0x28")]
	public int theMoveType;

	[Token(Token = "0x40003D8")]
	[FieldOffset(Offset = "0x2C")]
	public int sunPrice;

	[Token(Token = "0x40003D9")]
	[FieldOffset(Offset = "0x30")]
	public bool save;

	[Token(Token = "0x40003DA")]
	[FieldOffset(Offset = "0x34")]
	private Vector3 target;

	[Token(Token = "0x40003DB")]
	[FieldOffset(Offset = "0x40")]
	private float moveSpeed;

	[Token(Token = "0x40003DC")]
	[FieldOffset(Offset = "0x44")]
	private bool isLand;

	[Token(Token = "0x40003DD")]
	[FieldOffset(Offset = "0x48")]
	public float horizontalSpeed;

	[Token(Token = "0x40003DE")]
	[FieldOffset(Offset = "0x4C")]
	public float verticalSpeed;

	[Token(Token = "0x40003DF")]
	[FieldOffset(Offset = "0x50")]
	public float gravity;

	[Token(Token = "0x40003E0")]
	[FieldOffset(Offset = "0x54")]
	private Vector2 velocity;

	[Token(Token = "0x40003E1")]
	[FieldOffset(Offset = "0x5C")]
	private Vector2 startPosition;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x464C80", Offset = "0x463880", VA = "0x180464C80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x464F40", Offset = "0x463B40", VA = "0x180464F40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x464860", Offset = "0x463460", VA = "0x180464860")]
	private void MoveToPosition()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x464800", Offset = "0x463400", VA = "0x180464800")]
	public void Die()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x4650B0", Offset = "0x463CB0", VA = "0x1804650B0")]
	public CoinSun()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ConeZombie
using Il2CppDummyDll;

[Token(Token = "0x2000291")]
public class ConeZombie : ArmorZombie
{
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x35CA20", Offset = "0x35B620", VA = "0x18035CA20", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x35CBA0", Offset = "0x35B7A0", VA = "0x18035CBA0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ConeZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ConeZombieDuck
using Il2CppDummyDll;

[Token(Token = "0x2000292")]
public class ConeZombieDuck : ConeZombie
{
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x35C930", Offset = "0x35B530", VA = "0x18035C930", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ConeZombieDuck()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ConfrimBtn
using Il2CppDummyDll;

[Token(Token = "0x200032A")]
public class ConfrimBtn : UIBtn
{
	[Token(Token = "0x4000A45")]
	[FieldOffset(Offset = "0x60")]
	public GardenPlant plant;

	[Token(Token = "0x4000A46")]
	[FieldOffset(Offset = "0x68")]
	public GardenTool gardenTool;

	[Token(Token = "0x4000A47")]
	[FieldOffset(Offset = "0x70")]
	public bool yes;

	[Token(Token = "0x4000A48")]
	[FieldOffset(Offset = "0x71")]
	public bool buy;

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x3BF850", Offset = "0x3BE450", VA = "0x1803BF850", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public ConfrimBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ConveyBeltMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200000A")]
public class ConveyBeltMgr : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[FieldOffset(Offset = "0x20")]
	public List<RectTransform> belts;

	[Token(Token = "0x4000012")]
	[FieldOffset(Offset = "0x0")]
	public static ConveyBeltMgr Instance;

	[Token(Token = "0x4000013")]
	[FieldOffset(Offset = "0x28")]
	public List<DroppedCard> droppedCards;

	[Token(Token = "0x4000014")]
	[FieldOffset(Offset = "0x30")]
	public RectTransform cardParents;

	[Token(Token = "0x4000015")]
	[FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x4000016")]
	[FieldOffset(Offset = "0x3C")]
	private readonly float speed;

	[Token(Token = "0x4000017")]
	[FieldOffset(Offset = "0x40")]
	private float interval;

	[Token(Token = "0x4000018")]
	[FieldOffset(Offset = "0x44")]
	public int cardCount;

	[Token(Token = "0x4000019")]
	[FieldOffset(Offset = "0x48")]
	private List<PlantType> plants;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x30AAD0", Offset = "0x3096D0", VA = "0x18030AAD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x30C9E0", Offset = "0x30B5E0", VA = "0x18030C9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x30B150", Offset = "0x309D50", VA = "0x18030B150")]
	private int GetCardCount(PlantType theSeedType)
	{
		return default(int);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x30AB40", Offset = "0x309740", VA = "0x18030AB40")]
	private void BeltUpdate()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x30AE10", Offset = "0x309A10", VA = "0x18030AE10")]
	private void CardUpdate()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x30C7D0", Offset = "0x30B3D0", VA = "0x18030C7D0")]
	private void NewCardUpdate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x30C360", Offset = "0x30AF60", VA = "0x18030C360")]
	private PlantType GetCardType()
	{
		return default(PlantType);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x30B2B0", Offset = "0x309EB0", VA = "0x18030B2B0")]
	private List<PlantType> GetCardPool()
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x30B090", Offset = "0x309C90", VA = "0x18030B090")]
	private bool FlagConveyPlant(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x30CA60", Offset = "0x30B660", VA = "0x18030CA60")]
	public ConveyBeltMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CornCabbage
using Il2CppDummyDll;

[Token(Token = "0x2000206")]
public class CornCabbage : Cornpult
{
	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x4D5DE0", Offset = "0x4D49E0", VA = "0x1804D5DE0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x4D5E50", Offset = "0x4D4A50", VA = "0x1804D5E50", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x4D5EC0", Offset = "0x4D4AC0", VA = "0x1804D5EC0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x4D5E40", Offset = "0x4D4A40", VA = "0x1804D5E40", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x4D5E30", Offset = "0x4D4A30", VA = "0x1804D5E30", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public CornCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Corner
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200027D")]
public class Corner : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[FieldOffset(Offset = "0x20")]
	public int row;

	[Token(Token = "0x4000785")]
	[FieldOffset(Offset = "0x24")]
	public int targetRow;

	[Token(Token = "0x4000786")]
	[FieldOffset(Offset = "0x28")]
	public int targetRow2;

	[Token(Token = "0x4000787")]
	[FieldOffset(Offset = "0x2C")]
	public Towards towards;

	[Token(Token = "0x4000788")]
	[FieldOffset(Offset = "0x30")]
	public bool mid;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x348270", Offset = "0x346E70", VA = "0x180348270")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x3487F0", Offset = "0x3473F0", VA = "0x1803487F0")]
	public Corner()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CornMelon
using Il2CppDummyDll;

[Token(Token = "0x2000207")]
public class CornMelon : Cornpult
{
	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x4D5F40", Offset = "0x4D4B40", VA = "0x1804D5F40", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x4D5F30", Offset = "0x4D4B30", VA = "0x1804D5F30", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x4D5F50", Offset = "0x4D4B50", VA = "0x1804D5F50", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x4D5FB0", Offset = "0x4D4BB0", VA = "0x1804D5FB0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public CornMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CornPuff
using Il2CppDummyDll;

[Token(Token = "0x2000208")]
public class CornPuff : Cornpult
{
	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x4D6010", Offset = "0x4D4C10", VA = "0x1804D6010", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x4D6000", Offset = "0x4D4C00", VA = "0x1804D6000", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x4D6020", Offset = "0x4D4C20", VA = "0x1804D6020", Slot = "44")]
	protected override Zombie ThrowerSearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public CornPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Cornpult
using Il2CppDummyDll;

[Token(Token = "0x2000209")]
public class Cornpult : Thrower
{
	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x4D6430", Offset = "0x4D5030", VA = "0x1804D6430", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x4D6460", Offset = "0x4D5060", VA = "0x1804D6460", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x4D6420", Offset = "0x4D5020", VA = "0x1804D6420", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x4D6410", Offset = "0x4D5010", VA = "0x1804D6410", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x4D6490", Offset = "0x4D5090", VA = "0x1804D6490", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public Cornpult()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CornUmbrella
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000176")]
public class CornUmbrella : Umbrellaleaf
{
	[Token(Token = "0x6000723")]
	[Address(RVA = "0x4B2B00", Offset = "0x4B1700", VA = "0x1804B2B00")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x4B2770", Offset = "0x4B1370", VA = "0x1804B2770", Slot = "40")]
	protected virtual void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x4B2880", Offset = "0x4B1480", VA = "0x1804B2880", Slot = "41")]
	protected virtual void BlockZombies()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public CornUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreateBullet
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F3")]
public class CreateBullet : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[FieldOffset(Offset = "0x0")]
	public static CreateBullet Instance;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x465370", Offset = "0x463F70", VA = "0x180465370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x4653D0", Offset = "0x463FD0", VA = "0x1804653D0")]
	public Bullet SetBullet(float x, float y, int theRow, BulletType theBulletType, int theMovingWay, bool isZombieBullet = false)
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x465110", Offset = "0x463D10", VA = "0x180465110")]
	private void AddToList(Bullet bullet)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x4655C0", Offset = "0x4641C0", VA = "0x1804655C0")]
	public void SetLayer(Bullet bullet, int theRow)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreateBullet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreateItem
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F5")]
public class CreateItem : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CreateItem Instance;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x465780", Offset = "0x464380", VA = "0x180465780")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x465F60", Offset = "0x464B60", VA = "0x180465F60")]
	public static void SetMoney(Vector2 position, ItemType theItemType, Transform transform)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x4657F0", Offset = "0x4643F0", VA = "0x1804657F0")]
	public GameObject SetCoin(int theColumn, int theRow, int theItemType, int theMoveType, [Optional] Vector3 pos, bool freeSet = false)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x4657E0", Offset = "0x4643E0", VA = "0x1804657E0")]
	private bool LimSet(int theCoinType)
	{
		return default(bool);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x465C90", Offset = "0x464890", VA = "0x180465C90")]
	private void SetLayer(GameObject coin)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreateItem()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreateMower
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F6")]
public class CreateMower : MonoBehaviour
{
	[Token(Token = "0x6000421")]
	[Address(RVA = "0x466560", Offset = "0x465160", VA = "0x180466560")]
	public void SetMower(int[] roadtype)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x466240", Offset = "0x464E40", VA = "0x180466240")]
	private void SetMowerOnRoad(int rowtype, int row)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x466160", Offset = "0x464D60", VA = "0x180466160")]
	private void SetLayer(GameObject mower, int theRow)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x4668C0", Offset = "0x4654C0", VA = "0x1804668C0")]
	private void SetTransform(Mower theMower, int theRow)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreateMower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreateParticle
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F7")]
public class CreateParticle : MonoBehaviour
{
	[Token(Token = "0x6000426")]
	[Address(RVA = "0x466E70", Offset = "0x465A70", VA = "0x180466E70")]
	public static GameObject SetParticle(int theParticleType, Vector3 position, int row, bool setLayer = true)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x466B00", Offset = "0x465700", VA = "0x180466B00")]
	private static void SetLayer(GameObject obj, int row)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreateParticle()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreatePlant
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F8")]
public class CreatePlant : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Board board;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CreatePlant Instance;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LayerMask bulletLayer;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x4672D0", Offset = "0x465ED0", VA = "0x1804672D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x46F2D0", Offset = "0x46DED0", VA = "0x18046F2D0")]
	public static GameObject SetPlantInGarden(int column, int row, PlantType theSeedType, Transform parent, bool preview = false, bool inGarden = true)
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x46A6B0", Offset = "0x4692B0", VA = "0x18046A6B0")]
	private static void DestoryParticle(GameObject obj)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x469D90", Offset = "0x468990", VA = "0x180469D90")]
	public static GameObject CreatePlantPreview(PlantType theSeedType, Color color, Transform parent, Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x46EFE0", Offset = "0x46DBE0", VA = "0x18046EFE0")]
	public static GameObject SetPlantInAlmamac(Vector3 position, int theSeedType)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x46E550", Offset = "0x46D150", VA = "0x18046E550")]
	public void SetGhostPlant(int theColumn, int theRow, PlantType thePlantType)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x46FEA0", Offset = "0x46EAA0", VA = "0x18046FEA0")]
	public GameObject SetPlant(int newColumn, int newRow, PlantType theSeedType, [Optional] Plant movingPlant, [Optional] Vector2 puffV, bool isFreeSet = false, bool withEffect = true)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x469CF0", Offset = "0x4688F0", VA = "0x180469CF0")]
	private void CreatePlantParticle(int column, int row, Vector3 position)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x4671A0", Offset = "0x465DA0", VA = "0x1804671A0")]
	public void AdjustLightLevel(int boxX, int boxY, int level, int range = 2)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x467010", Offset = "0x465C10", VA = "0x180467010")]
	private void AddToList(Plant plant)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x467350", Offset = "0x465F50", VA = "0x180467350")]
	public bool CheckBox(int theBoxColumn, int theBoxRow, PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x46A7B0", Offset = "0x4693B0", VA = "0x18046A7B0")]
	private bool DoubleBoxCheck(int theColumn, int theRow, PlantType theCurrentPlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x46A8B0", Offset = "0x4694B0", VA = "0x18046A8B0")]
	private Plant[] FindNeedPlants(int theColumn, int theRow, PlantType needTheSeedType, PlantType theCurrentPlantType)
	{
		return null;
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x46DA40", Offset = "0x46C640", VA = "0x18046DA40")]
	private bool PotCheck(int theColumn, int theRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x468340", Offset = "0x466F40", VA = "0x180468340")]
	private bool CheckFlying(int theBoxColumn, int theBoxRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x46DA10", Offset = "0x46C610", VA = "0x18046DA10")]
	public bool OnHardLand(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x4699E0", Offset = "0x4685E0", VA = "0x1804699E0")]
	private bool CheckPuff(int theColumn, int theRow)
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x4684D0", Offset = "0x4670D0", VA = "0x1804684D0")]
	private GameObject CheckMix(int theColumn, int theRow, PlantType theUsedType)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x46D0C0", Offset = "0x46BCC0", VA = "0x18046D0C0")]
	private bool MixFail(int theBoxColumn, int theBoxRow, PlantType newPlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x472000", Offset = "0x470C00", VA = "0x180472000")]
	private GameObject SpreadPuff(int theColumn, int theRow, PlantType theUsedType)
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x46DFB0", Offset = "0x46CBB0", VA = "0x18046DFB0")]
	private GameObject PuffToScaredy(int column, int row, int puffNum)
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x46DD50", Offset = "0x46C950", VA = "0x18046DD50")]
	private GameObject PuffToFume(int column, int row, int puffNum)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x46E1C0", Offset = "0x46CDC0", VA = "0x18046E1C0")]
	private bool PumpkinCheck(int theBoxColumn, int theBoxRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x46DB20", Offset = "0x46C720", VA = "0x18046DB20")]
	private bool PresentCheck(int theBoxColumn, int theBoxRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x46CC90", Offset = "0x46B890", VA = "0x18046CC90")]
	private bool MixBombCheck(int theBoxColumn, int theBoxRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x46EB20", Offset = "0x46D720", VA = "0x18046EB20")]
	public void SetLayer(Plant plant, int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x46EF20", Offset = "0x46DB20", VA = "0x18046EF20")]
	private void SetPlantAttributes(Plant plant)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x471C00", Offset = "0x470800", VA = "0x180471C00")]
	private void SetTransform(GameObject plant, Vector3 position)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x4717C0", Offset = "0x4703C0", VA = "0x1804717C0")]
	public void SetPuffTransform(GameObject plant)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x471380", Offset = "0x46FF80", VA = "0x180471380")]
	public void SetPuffLayer(GameObject plant, bool isLower, int theRow)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x46C5F0", Offset = "0x46B1F0", VA = "0x18046C5F0")]
	private bool Lim(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x46B8F0", Offset = "0x46A4F0", VA = "0x18046B8F0")]
	private bool LimTravel(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x46CE80", Offset = "0x46BA80", VA = "0x18046CE80")]
	private void MixEvent(PlantType theSeedType, GameObject plant, int theRow)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x4723E0", Offset = "0x470FE0", VA = "0x1804723E0")]
	private void UniqueEvent(PlantType theSeedType, Plant plant, int theRow)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x46B8E0", Offset = "0x46A4E0", VA = "0x18046B8E0")]
	public bool IsPuff(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x46B8A0", Offset = "0x46A4A0", VA = "0x18046B8A0")]
	public bool InTheSameBox(Plant p1, Plant p2)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreatePlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CreateZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000FB")]
public class CreateZombie : MonoBehaviour
{
	[Token(Token = "0x40003F4")]
	[FieldOffset(Offset = "0x0")]
	public static CreateZombie Instance;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x4729D0", Offset = "0x4715D0", VA = "0x1804729D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x473B10", Offset = "0x472710", VA = "0x180473B10")]
	public static GameObject SetZombieInAlmanac(Vector3 position, ZombieType theZombieType)
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x472A30", Offset = "0x471630", VA = "0x180472A30")]
	public static GameObject CreateZombiePreview(ZombieType theZombieType, Color color, Transform parent, Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x474970", Offset = "0x473570", VA = "0x180474970")]
	public GameObject SetZombie(int theRow, ZombieType theZombieType, float theX = 9.9f, bool isIdle = false)
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x474360", Offset = "0x472F60", VA = "0x180474360")]
	public GameObject SetZombieWithMindControl(int theRow, ZombieType theZombieType, float theX = 9.9f, bool withEffect = false)
	{
		return null;
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x4735F0", Offset = "0x4721F0", VA = "0x1804735F0")]
	public void SetLayer(int theRow, Zombie zombie)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x473790", Offset = "0x472390", VA = "0x180473790")]
	private void SetTransform(GameObject zombie, Vector3 position)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x4727D0", Offset = "0x4713D0", VA = "0x1804727D0")]
	private void AddToList(Zombie zombie)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x473310", Offset = "0x471F10", VA = "0x180473310")]
	private void GetZombieData(Zombie zombie, ZombieType theZombieType)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CreateZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CtrlPlayer
using Il2CppDummyDll;

[Token(Token = "0x20003D9")]
public class CtrlPlayer : BasePlayer
{
	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x431220", Offset = "0x42FE20", VA = "0x180431220")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x4310C0", Offset = "0x42FCC0", VA = "0x1804310C0")]
	public CtrlPlayer()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CursorChange
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200030B")]
public class CursorChange : MonoBehaviour
{
	[Token(Token = "0x4000963")]
	[FieldOffset(Offset = "0x0")]
	private static Texture2D curDefault;

	[Token(Token = "0x4000964")]
	[FieldOffset(Offset = "0x8")]
	private static Texture2D curClick;

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x3A9520", Offset = "0x3A8120", VA = "0x1803A9520")]
	public static void SetDefaultCursor()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x3A9470", Offset = "0x3A8070", VA = "0x1803A9470")]
	public static void SetClickCursor()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CursorChange()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomBlock
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000310")]
public class CustomBlock : MonoBehaviour
{
	[Token(Token = "0x400096E")]
	[FieldOffset(Offset = "0x20")]
	public GridType[] gridTypes;

	[Token(Token = "0x400096F")]
	[FieldOffset(Offset = "0x28")]
	public Vector2[] blockPostion;

	[Token(Token = "0x4000970")]
	[FieldOffset(Offset = "0x30")]
	private SpriteRenderer r;

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x3ABBF0", Offset = "0x3AA7F0", VA = "0x1803ABBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x3ABC40", Offset = "0x3AA840", VA = "0x1803ABC40")]
	public void UpdateGridTypes()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x3AB5E0", Offset = "0x3AA1E0", VA = "0x1803AB5E0")]
	private void AdjustSprite()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x3ABD10", Offset = "0x3AA910", VA = "0x1803ABD10")]
	public CustomBlock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomBlockBlack
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000311")]
public class CustomBlockBlack : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[FieldOffset(Offset = "0x20")]
	public int theColumn;

	[Token(Token = "0x4000972")]
	[FieldOffset(Offset = "0x24")]
	public int theRow;

	[Token(Token = "0x4000973")]
	[FieldOffset(Offset = "0x28")]
	private SpriteRenderer r;

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x3A9600", Offset = "0x3A8200", VA = "0x1803A9600")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x3A9650", Offset = "0x3A8250", VA = "0x1803A9650")]
	public void UpdateTransparent()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public CustomBlockBlack()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomBlockData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000313")]
public class CustomBlockData
{
	[Token(Token = "0x4000984")]
	[FieldOffset(Offset = "0x10")]
	public bool isSaved;

	[Token(Token = "0x4000985")]
	[FieldOffset(Offset = "0x18")]
	public int[] blockType;

	[Token(Token = "0x4000986")]
	[FieldOffset(Offset = "0x20")]
	public PlantType[] disabledPlantType;

	[Token(Token = "0x4000987")]
	[FieldOffset(Offset = "0x28")]
	public ZombieType[] appearedZombieType;

	[Token(Token = "0x4000988")]
	[FieldOffset(Offset = "0x30")]
	public int theMaxWave;

	[Token(Token = "0x4000989")]
	[FieldOffset(Offset = "0x34")]
	public int startSun;

	[Token(Token = "0x400098A")]
	[FieldOffset(Offset = "0x38")]
	public bool isScaredyDream;

	[Token(Token = "0x400098B")]
	[FieldOffset(Offset = "0x39")]
	public bool isSeedRain;

	[Token(Token = "0x400098C")]
	[FieldOffset(Offset = "0x3A")]
	public bool isIndestructible;

	[Token(Token = "0x400098D")]
	[FieldOffset(Offset = "0x3B")]
	public bool isColumn;

	[Token(Token = "0x400098E")]
	[FieldOffset(Offset = "0x3C")]
	public bool enableTravelPlant;

	[Token(Token = "0x400098F")]
	[FieldOffset(Offset = "0x3D")]
	public bool enableTravelBuff;

	[Token(Token = "0x4000990")]
	[FieldOffset(Offset = "0x3E")]
	public bool isSuperRandom;

	[Token(Token = "0x4000991")]
	[FieldOffset(Offset = "0x40")]
	public int zombieHealth;

	[Token(Token = "0x4000992")]
	[FieldOffset(Offset = "0x44")]
	public SceneType sceneType;

	[Token(Token = "0x4000993")]
	[FieldOffset(Offset = "0x48")]
	public bool isConvey;

	[Token(Token = "0x4000994")]
	[FieldOffset(Offset = "0x50")]
	public List<int> advBuffs;

	[Token(Token = "0x4000995")]
	[FieldOffset(Offset = "0x58")]
	public List<int> ultiBuffs;

	[Token(Token = "0x4000996")]
	[FieldOffset(Offset = "0x60")]
	public List<int> debuffs;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public CustomBlockData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomBlockMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000312")]
public class CustomBlockMgr : MonoBehaviour
{
	[Token(Token = "0x4000974")]
	[FieldOffset(Offset = "0x0")]
	public static CustomBlockMgr Instance;

	[Token(Token = "0x4000975")]
	[FieldOffset(Offset = "0x20")]
	private GameObject block;

	[Token(Token = "0x4000976")]
	[FieldOffset(Offset = "0x28")]
	private GameObject darkBlock;

	[Token(Token = "0x4000977")]
	[FieldOffset(Offset = "0x30")]
	public Material cornerLeftInner;

	[Token(Token = "0x4000978")]
	[FieldOffset(Offset = "0x38")]
	public Material cornerRightInnner;

	[Token(Token = "0x4000979")]
	[FieldOffset(Offset = "0x40")]
	public Material cornerLeftOutter;

	[Token(Token = "0x400097A")]
	[FieldOffset(Offset = "0x48")]
	public Material cornerRightOutter;

	[Token(Token = "0x400097B")]
	[FieldOffset(Offset = "0x50")]
	public Material cornersLeft;

	[Token(Token = "0x400097C")]
	[FieldOffset(Offset = "0x58")]
	public Material cornersRight;

	[Token(Token = "0x400097D")]
	[FieldOffset(Offset = "0x60")]
	public Material full;

	[Token(Token = "0x400097E")]
	[FieldOffset(Offset = "0x68")]
	public Material half_x;

	[Token(Token = "0x400097F")]
	[FieldOffset(Offset = "0x70")]
	public Material half_y;

	[Token(Token = "0x4000980")]
	[FieldOffset(Offset = "0x78")]
	public Material nothing;

	[Token(Token = "0x4000981")]
	[FieldOffset(Offset = "0x80")]
	[SerializeField]
	private List<CustomBlock> blocks;

	[Token(Token = "0x4000982")]
	[FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<CustomBlockBlack> shadows;

	[Token(Token = "0x4000983")]
	[FieldOffset(Offset = "0x8")]
	private static string path;

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x3A9700", Offset = "0x3A8300", VA = "0x1803A9700")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x3AB1E0", Offset = "0x3A9DE0", VA = "0x1803AB1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x3AAA40", Offset = "0x3A9640", VA = "0x1803AAA40")]
	private void OnBoxTypeChange(int theGridX, int theGridY, int theGridType)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x3A9840", Offset = "0x3A8440", VA = "0x1803A9840")]
	private List<CustomBlock> GetBlockContainBox(int theGridX, int theGridY)
	{
		return null;
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x3AA510", Offset = "0x3A9110", VA = "0x1803AA510")]
	public void LoadBlockData()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x3A9A30", Offset = "0x3A8630", VA = "0x1803A9A30")]
	public static CustomBlockData GetBlockData()
	{
		return null;
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x3AA7D0", Offset = "0x3A93D0", VA = "0x1803AA7D0")]
	private void LoadResources()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x3A9C80", Offset = "0x3A8880", VA = "0x1803A9C80")]
	private void InitBlocks()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x3A9B60", Offset = "0x3A8760", VA = "0x1803A9B60")]
	public GridType GetBoxType(int x, int y)
	{
		return default(GridType);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x3AAC70", Offset = "0x3A9870", VA = "0x1803AAC70")]
	public void SaveBlockData()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x3AB510", Offset = "0x3AA110", VA = "0x1803AB510")]
	public CustomBlockMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomData
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000315")]
public class CustomData : MonoBehaviour
{
	[Token(Token = "0x400099B")]
	[FieldOffset(Offset = "0x0")]
	public static CustomData Instance;

	[Token(Token = "0x400099C")]
	[FieldOffset(Offset = "0x20")]
	public PlantType[] disabledPlantType;

	[Token(Token = "0x400099D")]
	[FieldOffset(Offset = "0x28")]
	public ZombieType[] appearedZombieType;

	[Token(Token = "0x400099E")]
	[FieldOffset(Offset = "0x30")]
	public int theMaxWave;

	[Token(Token = "0x400099F")]
	[FieldOffset(Offset = "0x34")]
	public int startSun;

	[Token(Token = "0x40009A0")]
	[FieldOffset(Offset = "0x38")]
	public bool isScaredyDream;

	[Token(Token = "0x40009A1")]
	[FieldOffset(Offset = "0x39")]
	public bool isSeedRain;

	[Token(Token = "0x40009A2")]
	[FieldOffset(Offset = "0x3A")]
	public bool isIndestructible;

	[Token(Token = "0x40009A3")]
	[FieldOffset(Offset = "0x3B")]
	public bool isColumn;

	[Token(Token = "0x40009A4")]
	[FieldOffset(Offset = "0x3C")]
	public bool enableTravelPlant;

	[Token(Token = "0x40009A5")]
	[FieldOffset(Offset = "0x3D")]
	public bool enableTravelBuff;

	[Token(Token = "0x40009A6")]
	[FieldOffset(Offset = "0x3E")]
	public bool isSuperRandom;

	[Token(Token = "0x40009A7")]
	[FieldOffset(Offset = "0x3F")]
	public bool isConvey;

	[Token(Token = "0x40009A8")]
	[FieldOffset(Offset = "0x40")]
	public int zombieHealth;

	[Token(Token = "0x40009A9")]
	[FieldOffset(Offset = "0x44")]
	public SceneType sceneType;

	[Token(Token = "0x40009AA")]
	[FieldOffset(Offset = "0x48")]
	public List<int> advBuffs;

	[Token(Token = "0x40009AB")]
	[FieldOffset(Offset = "0x50")]
	public List<int> ultiBuffs;

	[Token(Token = "0x40009AC")]
	[FieldOffset(Offset = "0x58")]
	public List<int> debuffs;

	[Token(Token = "0x40009AD")]
	[FieldOffset(Offset = "0x60")]
	public readonly HashSet<PlantType> disabledPlant;

	[Token(Token = "0x40009AE")]
	[FieldOffset(Offset = "0x68")]
	public HashSet<ZombieType> appearedZombie;

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x3ABEC0", Offset = "0x3AAAC0", VA = "0x1803ABEC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x3ABF20", Offset = "0x3AAB20", VA = "0x1803ABF20")]
	private void GetLastData()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x3ABE30", Offset = "0x3AAA30", VA = "0x1803ABE30")]
	public void AddDiabledPlant(PlantType theSeedType)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x3ABDA0", Offset = "0x3AA9A0", VA = "0x1803ABDA0")]
	public void AddAppearZombie(ZombieType theZombieType)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x3AC100", Offset = "0x3AAD00", VA = "0x1803AC100")]
	public void RemoveAppearZombie(ZombieType theZombieType)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x3AC190", Offset = "0x3AAD90", VA = "0x1803AC190")]
	private void SetAppearZombie()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x3AC1E0", Offset = "0x3AADE0", VA = "0x1803AC1E0")]
	private void SetDiabledPlant()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x3AC230", Offset = "0x3AAE30", VA = "0x1803AC230")]
	public CustomData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomIZManager
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x200030C")]
public class CustomIZManager
{
	[Token(Token = "0x4000965")]
	[FieldOffset(Offset = "0x10")]
	public readonly Dictionary<string, IZData> customIZDatas;

	[Token(Token = "0x4000966")]
	[FieldOffset(Offset = "0x18")]
	public List<string> levelNames;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x3AC620", Offset = "0x3AB220", VA = "0x1803AC620")]
	public CustomIZManager(string path)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x3AC3B0", Offset = "0x3AAFB0", VA = "0x1803AC3B0")]
	private void LoadLevelData(string path)
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomLevelEnter
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200030D")]
public class CustomLevelEnter : UIBtn
{
	[Token(Token = "0x4000967")]
	[FieldOffset(Offset = "0x60")]
	public string levelName;

	[Token(Token = "0x4000968")]
	[FieldOffset(Offset = "0x68")]
	public Transform menu;

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x3AC790", Offset = "0x3AB390", VA = "0x1803AC790")]
	private void Start()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x3AC700", Offset = "0x3AB300", VA = "0x1803AC700", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public CustomLevelEnter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomLevelShower
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200030E")]
public class CustomLevelShower : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[FieldOffset(Offset = "0x20")]
	public GameObject levelWindowPrefab;

	[Token(Token = "0x400096A")]
	[FieldOffset(Offset = "0x28")]
	public GameObject gridPrefab;

	[Token(Token = "0x400096B")]
	[FieldOffset(Offset = "0x30")]
	private readonly List<Transform> pages;

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x3AC860", Offset = "0x3AB460", VA = "0x1803AC860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x3AC870", Offset = "0x3AB470", VA = "0x1803AC870")]
	private void Show()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x3ACCC0", Offset = "0x3AB8C0", VA = "0x1803ACCC0")]
	public CustomLevelShower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomPeaShooter
using Il2CppDummyDll;

[Token(Token = "0x200020A")]
public class CustomPeaShooter : PeaShooter
{
	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public CustomPeaShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomPlant
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200031F")]
public class CustomPlant
{
	[Token(Token = "0x40009CE")]
	[FieldOffset(Offset = "0x10")]
	public PlantType thePlantType;

	[Token(Token = "0x40009CF")]
	[FieldOffset(Offset = "0x14")]
	public int theAttackDamage;

	[Token(Token = "0x40009D0")]
	[FieldOffset(Offset = "0x18")]
	public float theAttackInterval;

	[Token(Token = "0x40009D1")]
	[FieldOffset(Offset = "0x1C")]
	public int theSun;

	[Token(Token = "0x40009D2")]
	[FieldOffset(Offset = "0x20")]
	public float theCD;

	[Token(Token = "0x40009D3")]
	[FieldOffset(Offset = "0x24")]
	public int theHealth;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public CustomPlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomPlantManager
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x200031D")]
public class CustomPlantManager : MonoBehaviour
{
	[Token(Token = "0x40009C3")]
	[FieldOffset(Offset = "0x0")]
	public static List<CustomPlant> plants;

	[Token(Token = "0x40009C4")]
	[FieldOffset(Offset = "0x8")]
	public static CustomPlantManager Instance;

	[Token(Token = "0x40009C5")]
	[FieldOffset(Offset = "0x20")]
	public PlantType thePlantType;

	[Token(Token = "0x40009C6")]
	[FieldOffset(Offset = "0x24")]
	public readonly int maxAbility;

	[Token(Token = "0x40009C7")]
	[FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI abilityText;

	[Token(Token = "0x40009C8")]
	[FieldOffset(Offset = "0x30")]
	public TMP_InputField attackDamage;

	[Token(Token = "0x40009C9")]
	[FieldOffset(Offset = "0x38")]
	public TMP_InputField attackInterval;

	[Token(Token = "0x40009CA")]
	[FieldOffset(Offset = "0x40")]
	public TMP_InputField theHealthText;

	[Token(Token = "0x40009CB")]
	[FieldOffset(Offset = "0x48")]
	public TMP_InputField theCD;

	[Token(Token = "0x40009CC")]
	[FieldOffset(Offset = "0x50")]
	public TMP_InputField theSun;

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x3ACD40", Offset = "0x3AB940", VA = "0x1803ACD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x3ADA10", Offset = "0x3AC610", VA = "0x1803ADA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x3ACDA0", Offset = "0x3AB9A0", VA = "0x1803ACDA0")]
	private int CalculateAbility()
	{
		return default(int);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x3ACFD0", Offset = "0x3ABBD0", VA = "0x1803ACFD0")]
	public bool CheckSave()
	{
		return default(bool);
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x3AD310", Offset = "0x3ABF10", VA = "0x1803AD310")]
	public static void SaveData(CustomPlant plant)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x3ACFF0", Offset = "0x3ABBF0", VA = "0x1803ACFF0")]
	public static SavedCustomPlantData GetData()
	{
		return null;
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x3AD230", Offset = "0x3ABE30", VA = "0x1803AD230")]
	public static void InitPlants()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x3AD880", Offset = "0x3AC480", VA = "0x1803AD880")]
	public static bool SetCustomPlant(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x3AD0E0", Offset = "0x3ABCE0", VA = "0x1803AD0E0")]
	public static CustomPlant GetPlantData(PlantType thePlantType)
	{
		return null;
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x3AD700", Offset = "0x3AC300", VA = "0x1803AD700")]
	public static bool SetCustomCard(CardUI card)
	{
		return default(bool);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x3AD050", Offset = "0x3ABC50", VA = "0x1803AD050")]
	private static string GetPath()
	{
		return null;
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x3ADAB0", Offset = "0x3AC6B0", VA = "0x1803ADAB0")]
	public CustomPlantManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomSettings
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000316")]
public class CustomSettings : UIBtn
{
	[Token(Token = "0x2000317")]
	public enum SettingsType
	{
		[Token(Token = "0x40009B3")]
		isColumn,
		[Token(Token = "0x40009B4")]
		isIndestructible,
		[Token(Token = "0x40009B5")]
		isSeedRain,
		[Token(Token = "0x40009B6")]
		isScaredyDream,
		[Token(Token = "0x40009B7")]
		enableTravelPlant,
		[Token(Token = "0x40009B8")]
		enableTravelBuff,
		[Token(Token = "0x40009B9")]
		isSuperRandom,
		[Token(Token = "0x40009BA")]
		isConvey
	}

	[Token(Token = "0x40009AF")]
	[FieldOffset(Offset = "0x60")]
	public SettingsType settingsType;

	[Token(Token = "0x40009B0")]
	[FieldOffset(Offset = "0x68")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x40009B1")]
	[FieldOffset(Offset = "0x70")]
	private bool isActive;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x3ADAC0", Offset = "0x3AC6C0", VA = "0x1803ADAC0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x3ADF20", Offset = "0x3ACB20", VA = "0x1803ADF20", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x3ADB50", Offset = "0x3AC750", VA = "0x1803ADB50")]
	private void ChangeText()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public CustomSettings()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// CustomSun
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000318")]
public class CustomSun : MonoBehaviour
{
	[Token(Token = "0x40009BB")]
	[FieldOffset(Offset = "0x20")]
	public TMP_InputField inputField;

	[Token(Token = "0x40009BC")]
	[FieldOffset(Offset = "0x28")]
	public TMP_InputField setFlags;

	[Token(Token = "0x40009BD")]
	[FieldOffset(Offset = "0x30")]
	public TMP_InputField setHealth;

	[Token(Token = "0x40009BE")]
	[FieldOffset(Offset = "0x38")]
	public GameObject lookZombie;

	[Token(Token = "0x40009BF")]
	[FieldOffset(Offset = "0x40")]
	public List<GameObject> settings;

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x3AE0F0", Offset = "0x3ACCF0", VA = "0x1803AE0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x3AE3C0", Offset = "0x3ACFC0", VA = "0x1803AE3C0")]
	public void SetSun()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x3AE4E0", Offset = "0x3AD0E0", VA = "0x1803AE4E0")]
	public void SetWave()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x3AE2C0", Offset = "0x3ACEC0", VA = "0x1803AE2C0")]
	public void SetHealth()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x3AE5F0", Offset = "0x3AD1F0", VA = "0x1803AE5F0")]
	public CustomSun()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DamageEffect
using Il2CppDummyDll;

[Token(Token = "0x20003B2")]
public enum DamageEffect
{
	[Token(Token = "0x4000FF0")]
	Default,
	[Token(Token = "0x4000FF1")]
	SetCold,
	[Token(Token = "0x4000FF2")]
	SetFreeze,
	[Token(Token = "0x4000FF3")]
	SetJalaed,
	[Token(Token = "0x4000FF4")]
	SetButtered,
	[Token(Token = "0x4000FF5")]
	Warm,
	[Token(Token = "0x4000FF6")]
	AddPoisonLevel,
	[Token(Token = "0x4000FF7")]
	AddFreezeLevel,
	[Token(Token = "0x4000FF8")]
	SetPoison
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DamageMode
using Il2CppDummyDll;

[Token(Token = "0x20003B3")]
public enum DamageMode
{
	[Token(Token = "0x4000FFA")]
	Normal,
	[Token(Token = "0x4000FFB")]
	Shieldless,
	[Token(Token = "0x4000FFC")]
	All,
	[Token(Token = "0x4000FFD")]
	Squash
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DamageType
using Il2CppDummyDll;

[Token(Token = "0x20003B1")]
public enum DamageType
{
	[Token(Token = "0x4000FE6")]
	Normal,
	[Token(Token = "0x4000FE7")]
	Ice,
	[Token(Token = "0x4000FE8")]
	Fire,
	[Token(Token = "0x4000FE9")]
	Jala,
	[Token(Token = "0x4000FEA")]
	Butter,
	[Token(Token = "0x4000FEB")]
	Poison,
	[Token(Token = "0x4000FEC")]
	Explode,
	[Token(Token = "0x4000FED")]
	Ashy,
	[Token(Token = "0x4000FEE")]
	Squash
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DancePolevaulterZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C5")]
public class DancePolevaulterZombie : PolevaulterZombie
{
	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x3752F0", Offset = "0x373EF0", VA = "0x1803752F0", Slot = "56")]
	public override void JumpOver()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x375170", Offset = "0x373D70", VA = "0x180375170")]
	private void CreateParticle(Vector3 position)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x3756F0", Offset = "0x3742F0", VA = "0x1803756F0")]
	public DancePolevaulterZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DarkManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000009")]
public class DarkManager : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[FieldOffset(Offset = "0x20")]
	public bool isEnter;

	[Token(Token = "0x400000E")]
	[FieldOffset(Offset = "0x28")]
	private SpriteRenderer r;

	[Token(Token = "0x400000F")]
	[FieldOffset(Offset = "0x30")]
	private Color color;

	[Token(Token = "0x4000010")]
	[FieldOffset(Offset = "0x40")]
	private float existTime;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x30CB80", Offset = "0x30B780", VA = "0x18030CB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x30CBF0", Offset = "0x30B7F0", VA = "0x18030CBF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x30CCD0", Offset = "0x30B8D0", VA = "0x18030CCD0")]
	public DarkManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DefaultStatus
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000055")]
public class DefaultStatus : StateMachineBehaviour
{
	[Token(Token = "0x6000156")]
	[Address(RVA = "0x42EEB0", Offset = "0x42DAB0", VA = "0x18042EEB0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public DefaultStatus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DelayAction
using System;
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003A2")]
public class DelayAction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003A3")]
	private class ActionClip
	{
		[Token(Token = "0x4000CC5")]
		[FieldOffset(Offset = "0x10")]
		private float timer;

		[Token(Token = "0x4000CC6")]
		[FieldOffset(Offset = "0x18")]
		private readonly Action action;

		[Token(Token = "0x4000CC7")]
		[FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x3F8AF0", Offset = "0x3F76F0", VA = "0x1803F8AF0")]
		public ActionClip(Action action, float timer)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x3F8A90", Offset = "0x3F7690", VA = "0x1803F8A90")]
		public void Update()
		{
		}
	}

	[Token(Token = "0x4000CC4")]
	[FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ActionClip> actions;

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x3F9300", Offset = "0x3F7F00", VA = "0x1803F9300")]
	public void SetAction(Action action, float timer)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x3F9400", Offset = "0x3F8000", VA = "0x1803F9400")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x3F9540", Offset = "0x3F8140", VA = "0x1803F9540")]
	public DelayAction()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DiamondRandomZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000293")]
public class DiamondRandomZombie : RandomZombie
{
	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x35CFC0", Offset = "0x35BBC0", VA = "0x18035CFC0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x35D310", Offset = "0x35BF10", VA = "0x18035D310", Slot = "55")]
	protected override GameObject SetRandomZombie(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x35D240", Offset = "0x35BE40", VA = "0x18035D240", Slot = "56")]
	protected override void RandomEvent(Zombie zombie)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public DiamondRandomZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DifficultyMgr
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000324")]
public class DifficultyMgr : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x40009E3")]
	[FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI t;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x3AE670", Offset = "0x3AD270", VA = "0x1803AE670")]
	private void Start()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x3AE770", Offset = "0x3AD370", VA = "0x1803AE770")]
	private void Update()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public DifficultyMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DisablePlant
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000129")]
public class DisablePlant : MonoBehaviour
{
	[Token(Token = "0x40004E6")]
	[FieldOffset(Offset = "0x20")]
	private Collider2D col;

	[Token(Token = "0x40004E7")]
	[FieldOffset(Offset = "0x28")]
	public Zombie Zombie;

	[Token(Token = "0x40004E8")]
	[FieldOffset(Offset = "0x30")]
	public int nearRow;

	[Token(Token = "0x40004E9")]
	[FieldOffset(Offset = "0x38")]
	private readonly HashSet<Plant> disabledPlants;

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x47CAC0", Offset = "0x47B6C0", VA = "0x18047CAC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x47CB10", Offset = "0x47B710", VA = "0x18047CB10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x47C7A0", Offset = "0x47B3A0", VA = "0x18047C7A0")]
	private bool CheckRow(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x47C8F0", Offset = "0x47B4F0", VA = "0x18047C8F0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x47C820", Offset = "0x47B420", VA = "0x18047C820")]
	private void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x47CBB0", Offset = "0x47B7B0", VA = "0x18047CBB0")]
	public DisablePlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DmgType
using Il2CppDummyDll;

[Token(Token = "0x20003B4")]
public enum DmgType
{
	[Token(Token = "0x4000FFF")]
	Normal = 0,
	[Token(Token = "0x4001000")]
	NormalAll = 1,
	[Token(Token = "0x4001001")]
	Ice = 2,
	[Token(Token = "0x4001002")]
	IceAll = 3,
	[Token(Token = "0x4001003")]
	Shieldless = 4,
	[Token(Token = "0x4001004")]
	IceShieldless = 5,
	[Token(Token = "0x4001005")]
	RealDamage = 6,
	[Token(Token = "0x4001006")]
	Explode = 10,
	[Token(Token = "0x4001007")]
	Squash = 11,
	[Token(Token = "0x4001008")]
	Carred = 12,
	[Token(Token = "0x4001009")]
	Hammer = 13
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DollZombie
using Il2CppDummyDll;

[Token(Token = "0x2000294")]
public class DollZombie : ConeZombie
{
	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x35DBB0", Offset = "0x35C7B0", VA = "0x18035DBB0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x35DF10", Offset = "0x35CB10", VA = "0x18035DF10")]
	private void SummonZombie()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x35D700", Offset = "0x35C300", VA = "0x18035D700", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x35D570", Offset = "0x35C170", VA = "0x18035D570")]
	private void DiamondSpirte()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x35DBF0", Offset = "0x35C7F0", VA = "0x18035DBF0")]
	private void GoldSpirte()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x35DD80", Offset = "0x35C980", VA = "0x18035DD80")]
	private void SilverSpirte()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public DollZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DolphinGatlingZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C6")]
public class DolphinGatlingZombie : PeaDolphinriderZombie
{
	[Token(Token = "0x400081A")]
	[FieldOffset(Offset = "0x240")]
	public GameObject head1;

	[Token(Token = "0x400081B")]
	[FieldOffset(Offset = "0x248")]
	public GameObject head2;

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x375800", Offset = "0x374400", VA = "0x180375800", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x3757E0", Offset = "0x3743E0", VA = "0x1803757E0", Slot = "58")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x3757F0", Offset = "0x3743F0", VA = "0x1803757F0", Slot = "57")]
	protected override int GetDamage()
	{
		return default(int);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x375700", Offset = "0x374300", VA = "0x180375700", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x3759D0", Offset = "0x3745D0", VA = "0x1803759D0")]
	public DolphinGatlingZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DolphinriderZ
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C7")]
public class DolphinriderZ : Zombie
{
	[Token(Token = "0x400081C")]
	[FieldOffset(Offset = "0x220")]
	private Vector2 jumpPos2;

	[Token(Token = "0x400081D")]
	[FieldOffset(Offset = "0x228")]
	private Vector2 range;

	[Token(Token = "0x400081E")]
	[FieldOffset(Offset = "0x230")]
	private bool willJumpFail;

	[Token(Token = "0x400081F")]
	[FieldOffset(Offset = "0x234")]
	private Vector3 failPos;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x376900", Offset = "0x375500", VA = "0x180376900", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x376010", Offset = "0x374C10", VA = "0x180376010", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x3762F0", Offset = "0x374EF0", VA = "0x1803762F0", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x3768F0", Offset = "0x3754F0", VA = "0x1803768F0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x3768E0", Offset = "0x3754E0", VA = "0x1803768E0", Slot = "55")]
	public virtual void JumpOver()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x375A80", Offset = "0x374680", VA = "0x180375A80")]
	private void CreateWaterSplash()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x3759E0", Offset = "0x3745E0", VA = "0x1803759E0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x376640", Offset = "0x375240", VA = "0x180376640", Slot = "56")]
	protected virtual void JumpFail()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x376160", Offset = "0x374D60", VA = "0x180376160")]
	private bool FindTallNut(int theColumn, int theRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x376A00", Offset = "0x375600", VA = "0x180376A00")]
	public DolphinriderZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Doom
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000100")]
public class Doom : MonoBehaviour
{
	[Token(Token = "0x6000473")]
	[Address(RVA = "0x47CC30", Offset = "0x47B830", VA = "0x18047CC30")]
	private void Die()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Doom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomCactus
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x200020B")]
public class DoomCactus : UltimateCactus
{
	[Token(Token = "0x400070E")]
	[FieldOffset(Offset = "0x1C8")]
	private readonly List<bool> bools;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x4D6630", Offset = "0x4D5230", VA = "0x1804D6630", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x4D6650", Offset = "0x4D5250", VA = "0x1804D6650", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x4D6660", Offset = "0x4D5260", VA = "0x1804D6660")]
	private void InitBool()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x4D6790", Offset = "0x4D5390", VA = "0x1804D6790", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x4D69D0", Offset = "0x4D55D0", VA = "0x1804D69D0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x4D6C10", Offset = "0x4D5810", VA = "0x1804D6C10")]
	public DoomCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomChomper
using Il2CppDummyDll;

[Token(Token = "0x2000177")]
public class DoomChomper : Chomper
{
	[Token(Token = "0x6000727")]
	[Address(RVA = "0x4B2CC0", Offset = "0x4B18C0", VA = "0x1804B2CC0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x4B2D00", Offset = "0x4B1900", VA = "0x1804B2D00", Slot = "43")]
	protected override void Chomp(Zombie zombie)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public DoomChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomFume
using Il2CppDummyDll;

[Token(Token = "0x200020C")]
public class DoomFume : Plant
{
	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x4D70F0", Offset = "0x4D5CF0", VA = "0x1804D70F0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x4D7140", Offset = "0x4D5D40", VA = "0x1804D7140")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x4D6C90", Offset = "0x4D5890", VA = "0x1804D6C90")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x4D6EF0", Offset = "0x4D5AF0", VA = "0x1804D6EF0")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public DoomFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomGatling
using Il2CppDummyDll;

[Token(Token = "0x200020D")]
public class DoomGatling : Shooter
{
	[Token(Token = "0x400070F")]
	[FieldOffset(Offset = "0x1C0")]
	private int doomTimes;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x333100", Offset = "0x331D00", VA = "0x180333100", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public DoomGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomPeashooter
using Il2CppDummyDll;

[Token(Token = "0x200020E")]
public class DoomPeashooter : PeaShooter
{
	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x333350", Offset = "0x331F50", VA = "0x180333350", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public DoomPeashooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomPuff
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000140")]
public class DoomPuff : Plant
{
	[Token(Token = "0x4000608")]
	[FieldOffset(Offset = "0x1B8")]
	private bool exploded;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x48D4C0", Offset = "0x48C0C0", VA = "0x18048D4C0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x48D350", Offset = "0x48BF50", VA = "0x18048D350")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x48D4A0", Offset = "0x48C0A0", VA = "0x18048D4A0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public DoomPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomShroom
using Il2CppDummyDll;

[Token(Token = "0x2000141")]
public class DoomShroom : Plant
{
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x48D7B0", Offset = "0x48C3B0", VA = "0x18048D7B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x48D740", Offset = "0x48C340", VA = "0x18048D740", Slot = "39")]
	public virtual void AnimExplode()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public DoomShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoomTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000178")]
public class DoomTorch : TorchWood
{
	[Token(Token = "0x600072A")]
	[Address(RVA = "0x4B3210", Offset = "0x4B1E10", VA = "0x1804B3210", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x4B2F80", Offset = "0x4B1B80", VA = "0x1804B2F80", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x4B2E10", Offset = "0x4B1A10", VA = "0x1804B2E10", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x4B2E70", Offset = "0x4B1A70", VA = "0x1804B2E70")]
	public void Charge(float timer)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public DoomTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DoorZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000295")]
public class DoorZombie : ArmorZombie
{
	[Token(Token = "0x40007C5")]
	[FieldOffset(Offset = "0x220")]
	private GameObject hand1;

	[Token(Token = "0x40007C6")]
	[FieldOffset(Offset = "0x228")]
	private GameObject hand2;

	[Token(Token = "0x40007C7")]
	[FieldOffset(Offset = "0x230")]
	private GameObject hand3;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x35E0F0", Offset = "0x35CCF0", VA = "0x18035E0F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x35E1A0", Offset = "0x35CDA0", VA = "0x18035E1A0", Slot = "55")]
	protected virtual void GetHand()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x35E2D0", Offset = "0x35CED0", VA = "0x18035E2D0", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x35E460", Offset = "0x35D060", VA = "0x18035E460", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x35E120", Offset = "0x35CD20", VA = "0x18035E120")]
	public void DestoryHand()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public DoorZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DriverZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000296")]
public class DriverZombie : Zombie
{
	[Token(Token = "0x40007C8")]
	[FieldOffset(Offset = "0x220")]
	protected float startSpeed;

	[Token(Token = "0x40007C9")]
	[FieldOffset(Offset = "0x224")]
	protected float currentSpeed;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x35FBF0", Offset = "0x35E7F0", VA = "0x18035FBF0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x35F940", Offset = "0x35E540", VA = "0x18035F940", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x35F2D0", Offset = "0x35DED0", VA = "0x18035F2D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x35EFF0", Offset = "0x35DBF0", VA = "0x18035EFF0")]
	private void CreateIceRoad()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x35E900", Offset = "0x35D500", VA = "0x18035E900", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x35F0F0", Offset = "0x35DCF0", VA = "0x18035F0F0")]
	protected void DieAndExplode()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x35F110", Offset = "0x35DD10", VA = "0x18035F110", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x35F920", Offset = "0x35E520", VA = "0x18035F920", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x35F2F0", Offset = "0x35DEF0", VA = "0x18035F2F0", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x35FC90", Offset = "0x35E890", VA = "0x18035FC90")]
	public DriverZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DroppedCard
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x20000EC")]
public class DroppedCard : CardUI
{
	[Token(Token = "0x40003C6")]
	private const float gravity = 9.8f;

	[Token(Token = "0x40003C7")]
	[FieldOffset(Offset = "0x88")]
	private Vector2 velocity;

	[Token(Token = "0x40003C8")]
	[FieldOffset(Offset = "0x90")]
	private Vector2 startPosition;

	[Token(Token = "0x40003C9")]
	[FieldOffset(Offset = "0x98")]
	private float minY;

	[Token(Token = "0x40003CA")]
	[FieldOffset(Offset = "0x9C")]
	private bool isLand;

	[Token(Token = "0x40003CB")]
	[FieldOffset(Offset = "0xA0")]
	public int movingWay;

	[Token(Token = "0x40003CC")]
	[FieldOffset(Offset = "0xA4")]
	private float existTime;

	[Token(Token = "0x40003CD")]
	[FieldOffset(Offset = "0xA8")]
	private float flashTime;

	[Token(Token = "0x40003CE")]
	[FieldOffset(Offset = "0xAC")]
	private bool flashing;

	[Token(Token = "0x40003CF")]
	[FieldOffset(Offset = "0xB0")]
	private Image image1;

	[Token(Token = "0x40003D0")]
	[FieldOffset(Offset = "0xB8")]
	private Image image2;

	[Token(Token = "0x40003D1")]
	[FieldOffset(Offset = "0xC0")]
	public bool fallByBoss;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x4753D0", Offset = "0x473FD0", VA = "0x1804753D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x476080", Offset = "0x474C80", VA = "0x180476080", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x475560", Offset = "0x474160", VA = "0x180475560")]
	public void Fall()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x4760E0", Offset = "0x474CE0", VA = "0x1804760E0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x475DA0", Offset = "0x4749A0", VA = "0x180475DA0")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x475CB0", Offset = "0x4748B0", VA = "0x180475CB0")]
	private void PositionUpdate2()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x4755E0", Offset = "0x4741E0", VA = "0x1804755E0", Slot = "8")]
	protected override void OnMouseDown()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x4757F0", Offset = "0x4743F0", VA = "0x1804757F0", Slot = "9")]
	public override bool PickUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x476680", Offset = "0x475280", VA = "0x180476680")]
	public DroppedCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DrownCatapultZombie
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C8")]
public class DrownCatapultZombie : CatapultZombie
{
	[Token(Token = "0x4000820")]
	[FieldOffset(Offset = "0x238")]
	public List<GameObject> weapons;

	[Token(Token = "0x4000821")]
	[FieldOffset(Offset = "0x240")]
	public List<GameObject> weapons2;

	[Token(Token = "0x4000822")]
	[FieldOffset(Offset = "0x248")]
	public List<GameObject> damaged;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x376FB0", Offset = "0x375BB0", VA = "0x180376FB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x377240", Offset = "0x375E40", VA = "0x180377240", Slot = "56")]
	protected override void CataUpdate()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x376BA0", Offset = "0x3757A0", VA = "0x180376BA0", Slot = "55")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x377850", Offset = "0x376450", VA = "0x180377850")]
	private void SetWeapon(Vector2 position)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x377340", Offset = "0x375F40", VA = "0x180377340")]
	private void DestoryWeapon2()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x376A20", Offset = "0x375620", VA = "0x180376A20")]
	private void AnimRelodeOver()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x376FD0", Offset = "0x375BD0", VA = "0x180376FD0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x3774C0", Offset = "0x3760C0", VA = "0x1803774C0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x3605A0", Offset = "0x35F1A0", VA = "0x1803605A0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x377700", Offset = "0x376300", VA = "0x180377700", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x3777D0", Offset = "0x3763D0", VA = "0x1803777D0", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x377810", Offset = "0x376410", VA = "0x180377810", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x3771F0", Offset = "0x375DF0", VA = "0x1803771F0", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x377A60", Offset = "0x376660", VA = "0x180377A60")]
	public DrownCatapultZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DrownWeapon
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002FC")]
public class DrownWeapon : ZombieObstacle
{
	[Token(Token = "0x4000893")]
	[FieldOffset(Offset = "0x40")]
	public GameObject target;

	[Token(Token = "0x4000894")]
	[FieldOffset(Offset = "0x48")]
	public float g;

	[Token(Token = "0x4000895")]
	[FieldOffset(Offset = "0x4C")]
	public float vx;

	[Token(Token = "0x4000896")]
	[FieldOffset(Offset = "0x50")]
	public float vy;

	[Token(Token = "0x4000897")]
	[FieldOffset(Offset = "0x54")]
	public float distanceX;

	[Token(Token = "0x4000898")]
	[FieldOffset(Offset = "0x58")]
	public float distanceY;

	[Token(Token = "0x4000899")]
	[FieldOffset(Offset = "0x5C")]
	public int theRow;

	[Token(Token = "0x400089A")]
	[FieldOffset(Offset = "0x60")]
	private float duringTime;

	[Token(Token = "0x400089B")]
	[FieldOffset(Offset = "0x68")]
	private Plant targetPlant;

	[Token(Token = "0x400089C")]
	[FieldOffset(Offset = "0x70")]
	private Vector3 velocity;

	[Token(Token = "0x400089D")]
	[FieldOffset(Offset = "0x80")]
	private Rigidbody2D rb;

	[Token(Token = "0x400089E")]
	[FieldOffset(Offset = "0x88")]
	private float existTime;

	[Token(Token = "0x400089F")]
	[FieldOffset(Offset = "0x8C")]
	private bool hit;

	[Token(Token = "0x40008A0")]
	[FieldOffset(Offset = "0x8D")]
	public bool horizontal;

	[Token(Token = "0x40008A1")]
	[FieldOffset(Offset = "0x8E")]
	public bool land;

	[Token(Token = "0x40008A2")]
	[FieldOffset(Offset = "0x8F")]
	public bool big;

	[Token(Token = "0x40008A3")]
	[FieldOffset(Offset = "0x90")]
	public bool cold;

	[Token(Token = "0x40008A4")]
	[FieldOffset(Offset = "0x94")]
	public int hitTimes;

	[Token(Token = "0x40008A5")]
	[FieldOffset(Offset = "0x98")]
	private float flashCountDown;

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x397280", Offset = "0x395E80", VA = "0x180397280", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
	protected override void AddToList()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x397410", Offset = "0x396010", VA = "0x180397410")]
	private void Flash()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x397350", Offset = "0x395F50", VA = "0x180397350")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x3979D0", Offset = "0x3965D0", VA = "0x1803979D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x397CE0", Offset = "0x3968E0", VA = "0x180397CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x397860", Offset = "0x396460", VA = "0x180397860")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x3974C0", Offset = "0x3960C0", VA = "0x1803974C0", Slot = "7")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x3972F0", Offset = "0x395EF0", VA = "0x1803972F0", Slot = "6")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x398000", Offset = "0x396C00", VA = "0x180398000")]
	public DrownWeapon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DrownZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002C9")]
public class DrownZombie : Zombie
{
	[Token(Token = "0x4000823")]
	[FieldOffset(Offset = "0x220")]
	protected float throwTime;

	[Token(Token = "0x4000824")]
	[FieldOffset(Offset = "0x224")]
	private bool isThrow;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x378470", Offset = "0x377070", VA = "0x180378470", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x3784B0", Offset = "0x3770B0", VA = "0x1803784B0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x378420", Offset = "0x377020", VA = "0x180378420")]
	private void StartThrow()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x378150", Offset = "0x376D50", VA = "0x180378150", Slot = "55")]
	protected virtual DrownWeapon GetDrownWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x377B50", Offset = "0x376750", VA = "0x180377B50")]
	private void AnimThrow()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x378110", Offset = "0x376D10", VA = "0x180378110")]
	public static bool CheckPlant(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x378320", Offset = "0x376F20", VA = "0x180378320", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x378020", Offset = "0x376C20", VA = "0x180378020", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public DrownZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// DY
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x20003A4")]
public class DY : MonoBehaviour
{
	[Token(Token = "0x4000CC8")]
	[FieldOffset(Offset = "0x20")]
	public TextMeshPro TextMeshPro;

	[Token(Token = "0x4000CC9")]
	[FieldOffset(Offset = "0x28")]
	private bool a;

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x3F9270", Offset = "0x3F7E70", VA = "0x1803F9270")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public DY()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ElitePaperZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000297")]
public class ElitePaperZombie : PaperZombie
{
	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x35FCE0", Offset = "0x35E8E0", VA = "0x18035FCE0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x35FF70", Offset = "0x35EB70", VA = "0x18035FF70", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x35FCB0", Offset = "0x35E8B0", VA = "0x18035FCB0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x35FD90", Offset = "0x35E990", VA = "0x18035FD90", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x35FDD0", Offset = "0x35E9D0", VA = "0x18035FDD0", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x35FCC0", Offset = "0x35E8C0", VA = "0x18035FCC0", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x35FF60", Offset = "0x35EB60", VA = "0x18035FF60", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ElitePaperZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EmeraldUmbrella
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000179")]
public class EmeraldUmbrella : SuperUmbrella
{
	[Token(Token = "0x600072F")]
	[Address(RVA = "0x4B3B00", Offset = "0x4B2700", VA = "0x1804B3B00", Slot = "43")]
	protected virtual void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x4B3820", Offset = "0x4B2420", VA = "0x1804B3820", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x4B3650", Offset = "0x4B2250", VA = "0x1804B3650")]
	private void ConvertUpdate()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x4B3800", Offset = "0x4B2400", VA = "0x1804B3800", Slot = "42")]
	protected override void ConvertZombie(Zombie zombie, float goldRatio, float silverRatio)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x4B3240", Offset = "0x4B1E40", VA = "0x1804B3240")]
	private void AdjustBulletSpeed(Bullet bullet)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x4B38C0", Offset = "0x4B24C0", VA = "0x1804B38C0")]
	private Plant GetEmeraldUmbrella()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x4B3C70", Offset = "0x4B2870", VA = "0x1804B3C70")]
	private void ReinforceBullet(Bullet bullet, int theRow)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x4B3890", Offset = "0x4B2490", VA = "0x1804B3890", Slot = "13")]
	protected override int GetDamage(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x4B3E30", Offset = "0x4B2A30", VA = "0x1804B3E30")]
	protected Zombie UmbrellaSearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x4B11C0", Offset = "0x4AFDC0", VA = "0x1804B11C0")]
	public EmeraldUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EndlessMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000381")]
public class EndlessMgr : MonoBehaviour
{
	[Token(Token = "0x4000C37")]
	[FieldOffset(Offset = "0x20")]
	public int theLevel;

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x3E9A10", Offset = "0x3E8610", VA = "0x1803E9A10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public EndlessMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EndlessShooting
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000FD")]
public class EndlessShooting : MonoBehaviour
{
	[Token(Token = "0x40003F7")]
	[FieldOffset(Offset = "0x0")]
	public static EndlessShooting Instance;

	[Token(Token = "0x40003F8")]
	[FieldOffset(Offset = "0x20")]
	public List<PlantType> cardOnBank;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x476690", Offset = "0x475290", VA = "0x180476690")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x476AB0", Offset = "0x4756B0", VA = "0x180476AB0")]
	public void SetCard(int level)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x4767F0", Offset = "0x4753F0", VA = "0x1804767F0")]
	public void GetCards()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x476B90", Offset = "0x475790", VA = "0x180476B90")]
	public EndlessShooting()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EndoFlame
using Il2CppDummyDll;

[Token(Token = "0x200017A")]
public class EndoFlame : Plant
{
	[Token(Token = "0x6000739")]
	[Address(RVA = "0x4B4D30", Offset = "0x4B3930", VA = "0x1804B4D30", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x4B4A70", Offset = "0x4B3670", VA = "0x1804B4A70")]
	private void FireBullets()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x4B48E0", Offset = "0x4B34E0", VA = "0x1804B48E0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public EndoFlame()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EndoFlameGirl
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200017B")]
public class EndoFlameGirl : Shooter
{
	[Token(Token = "0x4000663")]
	[FieldOffset(Offset = "0x1C0")]
	public List<Transform> shoots;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x4B43A0", Offset = "0x4B2FA0", VA = "0x1804B43A0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x4B4100", Offset = "0x4B2D00", VA = "0x1804B4100", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x4B4200", Offset = "0x4B2E00", VA = "0x1804B4200", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x4B4860", Offset = "0x4B3460", VA = "0x1804B4860")]
	public EndoFlameGirl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Entity
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000FE")]
public class Entity : MonoBehaviour
{
	[Token(Token = "0x40003F9")]
	[FieldOffset(Offset = "0x20")]
	public Team team;

	[Token(Token = "0x40003FA")]
	[FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x40003FB")]
	[FieldOffset(Offset = "0x30")]
	public Board board;

	[Token(Token = "0x40003FC")]
	[FieldOffset(Offset = "0x38")]
	public Transform axis;

	[Token(Token = "0x40003FD")]
	[FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected List<SpriteRenderer> spriteRenderers;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x476C10", Offset = "0x475810", VA = "0x180476C10", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x476F20", Offset = "0x475B20", VA = "0x180476F20")]
	public void SetPosition(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x476D50", Offset = "0x475950", VA = "0x180476D50")]
	private void GetSpriteRenderers()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x477020", Offset = "0x475C20", VA = "0x180477020")]
	public Entity()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EntityType
using Il2CppDummyDll;

[Token(Token = "0x200034B")]
public enum EntityType
{
	[Token(Token = "0x4000B03")]
	Plant,
	[Token(Token = "0x4000B04")]
	Zombie,
	[Token(Token = "0x4000B05")]
	Bullet,
	[Token(Token = "0x4000B06")]
	Mower,
	[Token(Token = "0x4000B07")]
	GridItem
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EveBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000016")]
public class EveBtn : MonoBehaviour
{
	[Token(Token = "0x4000078")]
	[FieldOffset(Offset = "0x20")]
	public int buttonNumber;

	[Token(Token = "0x4000079")]
	[FieldOffset(Offset = "0x24")]
	private Vector3 originPosition;

	[Token(Token = "0x400007A")]
	[FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x400007B")]
	[FieldOffset(Offset = "0x38")]
	public GameObject cards;

	[Token(Token = "0x400007C")]
	[FieldOffset(Offset = "0x40")]
	public GameObject zombieCards;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x30EB90", Offset = "0x30D790", VA = "0x18030EB90")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x30D2C0", Offset = "0x30BEC0", VA = "0x18030D2C0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x30D220", Offset = "0x30BE20", VA = "0x18030D220")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x30D300", Offset = "0x30BF00", VA = "0x18030D300")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x30E8E0", Offset = "0x30D4E0", VA = "0x18030E8E0")]
	private void SelectCard(GameObject obj)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x30E160", Offset = "0x30CD60", VA = "0x18030E160")]
	private void SaveCustomIZ()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x30CCF0", Offset = "0x30B8F0", VA = "0x18030CCF0")]
	public static void AutoGame()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x30DAA0", Offset = "0x30C6A0", VA = "0x18030DAA0")]
	public void OpenEveGame()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x30EB30", Offset = "0x30D730", VA = "0x18030EB30")]
	private void StartEveGame()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x30E690", Offset = "0x30D290", VA = "0x18030E690")]
	public static void SaveThePlant()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x30CD60", Offset = "0x30B960", VA = "0x18030CD60")]
	public static void LoadPlants()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x30EA20", Offset = "0x30D620", VA = "0x18030EA20")]
	public static void SetPlant()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public EveBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// EveManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003BE")]
public class EveManager : MonoBehaviour
{
	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x3F95C0", Offset = "0x3F81C0", VA = "0x1803F95C0")]
	public static PlantType GetPlantType(int theColumn)
	{
		return default(PlantType);
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public EveManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ExploreLevel
using Il2CppDummyDll;

[Token(Token = "0x20003B9")]
public enum ExploreLevel
{
	[Token(Token = "0x4001022")]
	BigGatling = 1,
	[Token(Token = "0x4001023")]
	MorePotatoMine,
	[Token(Token = "0x4001024")]
	BigPumpkin,
	[Token(Token = "0x4001025")]
	PotatoPuff,
	[Token(Token = "0x4001026")]
	ScaredyPotato,
	[Token(Token = "0x4001027")]
	BigChomper,
	[Token(Token = "0x4001028")]
	GarlicFume,
	[Token(Token = "0x4001029")]
	HypnoBlover,
	[Token(Token = "0x400102A")]
	CherryTorch,
	[Token(Token = "0x400102B")]
	CherryJalapeno,
	[Token(Token = "0x400102C")]
	CaltropNut,
	[Token(Token = "0x400102D")]
	BigSeashroom
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Fertilize
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000339")]
public class Fertilize : Bucket
{
	[Token(Token = "0x4000AB1")]
	[FieldOffset(Offset = "0x58")]
	private Plant theTargetPlant;

	[Token(Token = "0x4000AB2")]
	[FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x4000AB3")]
	[FieldOffset(Offset = "0x68")]
	private bool isUsing;

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x3C0180", Offset = "0x3BED80", VA = "0x1803C0180", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x3C01E0", Offset = "0x3BEDE0", VA = "0x1803C01E0", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x3C0120", Offset = "0x3BED20", VA = "0x1803C0120", Slot = "6")]
	public override void Pick()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x3C0DD0", Offset = "0x3BF9D0", VA = "0x1803C0DD0", Slot = "7")]
	public override void Use()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x3C02F0", Offset = "0x3BEEF0", VA = "0x1803C02F0")]
	private void Upgrade()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x3C10F0", Offset = "0x3BFCF0", VA = "0x1803C10F0")]
	public Fertilize()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireCannon
using Il2CppDummyDll;

[Token(Token = "0x200017D")]
public class FireCannon : CobCannon
{
	[Token(Token = "0x6000743")]
	[Address(RVA = "0x4B4D50", Offset = "0x4B3950", VA = "0x1804B4D50", Slot = "40")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public FireCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireCattail
using Il2CppDummyDll;

[Token(Token = "0x200020F")]
public class FireCattail : CattailPlant
{
	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x3335D0", Offset = "0x3321D0", VA = "0x1803335D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public FireCattail()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireFume
using Il2CppDummyDll;

[Token(Token = "0x2000210")]
public class FireFume : FumeShroom
{
	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x333980", Offset = "0x332580", VA = "0x180333980", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x333940", Offset = "0x332540", VA = "0x180333940", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x333730", Offset = "0x332330", VA = "0x180333730", Slot = "42")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public FireFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireGloom
using Il2CppDummyDll;

[Token(Token = "0x2000211")]
public class FireGloom : GloomShroom
{
	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x333AF0", Offset = "0x3326F0", VA = "0x180333AF0", Slot = "42")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x333E90", Offset = "0x332A90", VA = "0x180333E90", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x333F20", Offset = "0x332B20", VA = "0x180333F20")]
	public FireGloom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireLine
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000004")]
public class FireLine : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	private sealed class <Enumerator>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000008")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000009")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000A")]
		[FieldOffset(Offset = "0x20")]
		public FireLine <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000E")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000010")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Enumerator>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x31D300", Offset = "0x31BF00", VA = "0x18031D300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x31D510", Offset = "0x31C110", VA = "0x18031D510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000003")]
	[FieldOffset(Offset = "0x20")]
	private float fadeTime;

	[Token(Token = "0x4000004")]
	[FieldOffset(Offset = "0x28")]
	private readonly List<GameObject> fireArray;

	[Token(Token = "0x4000005")]
	[FieldOffset(Offset = "0x30")]
	private readonly List<float> fireY;

	[Token(Token = "0x4000006")]
	[FieldOffset(Offset = "0x38")]
	private readonly float speed;

	[Token(Token = "0x4000007")]
	[FieldOffset(Offset = "0x3C")]
	public int theFireRow;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x30EF10", Offset = "0x30DB10", VA = "0x18030EF10")]
	public void InitFireLine()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x30EEA0", Offset = "0x30DAA0", VA = "0x18030EEA0")]
	[IteratorStateMachine(typeof(<Enumerator>d__6))]
	private IEnumerator Enumerator()
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x30F140", Offset = "0x30DD40", VA = "0x18030F140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x30F410", Offset = "0x30E010", VA = "0x18030F410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x30EE70", Offset = "0x30DA70", VA = "0x18030EE70")]
	private void Die()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x30F550", Offset = "0x30E150", VA = "0x18030F550")]
	public FireLine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireMelon
using Il2CppDummyDll;

[Token(Token = "0x2000212")]
public class FireMelon : Melonpult
{
	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x333F40", Offset = "0x332B40", VA = "0x180333F40", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public FireMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000002")]
public class FireMgr : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x30F620", Offset = "0x30E220", VA = "0x18030F620")]
	private void Die()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public FireMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireOcean
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200012A")]
public class FireOcean : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[FieldOffset(Offset = "0x20")]
	public int theRow;

	[Token(Token = "0x40004EB")]
	[FieldOffset(Offset = "0x24")]
	public int theDamage;

	[Token(Token = "0x40004EC")]
	[FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x40004ED")]
	[FieldOffset(Offset = "0x2C")]
	private float timer2;

	[Token(Token = "0x40004EE")]
	[FieldOffset(Offset = "0x30")]
	private ParticleSystem particle;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x47CC90", Offset = "0x47B890", VA = "0x18047CC90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x47CE60", Offset = "0x47BA60", VA = "0x18047CE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x47CD20", Offset = "0x47B920", VA = "0x18047CD20")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x47CFC0", Offset = "0x47BBC0", VA = "0x18047CFC0")]
	public FireOcean()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireSniper
using Il2CppDummyDll;

[Token(Token = "0x2000213")]
public class FireSniper : SniperPea
{
	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x333F60", Offset = "0x332B60", VA = "0x180333F60", Slot = "42")]
	protected override void AttackZombie(Zombie zombie, int damage)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public FireSniper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FireSpikeRock
using Il2CppDummyDll;

[Token(Token = "0x200017E")]
public class FireSpikeRock : SpikeRock
{
	[Token(Token = "0x6000745")]
	[Address(RVA = "0x4B4F10", Offset = "0x4B3B10", VA = "0x1804B4F10", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x4B5160", Offset = "0x4B3D60", VA = "0x1804B5160")]
	public FireSpikeRock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FirstBtns
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200037F")]
public class FirstBtns : UIBtn
{
	[Token(Token = "0x4000C32")]
	[FieldOffset(Offset = "0x60")]
	public GameObject pageToOpen;

	[Token(Token = "0x4000C33")]
	[FieldOffset(Offset = "0x68")]
	public GameObject firstBtns;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x3E9B70", Offset = "0x3E8770", VA = "0x1803E9B70", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public FirstBtns()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FlagMgr
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200000C")]
public class FlagMgr : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[FieldOffset(Offset = "0x20")]
	private int flag;

	[Token(Token = "0x400001C")]
	[FieldOffset(Offset = "0x24")]
	private bool once;

	[Token(Token = "0x400001D")]
	[FieldOffset(Offset = "0x28")]
	private GridLayoutGroup grid;

	[Token(Token = "0x400001E")]
	[FieldOffset(Offset = "0x30")]
	public RectTransform flag1;

	[Token(Token = "0x400001F")]
	[FieldOffset(Offset = "0x38")]
	public RectTransform flag2;

	[Token(Token = "0x4000020")]
	[FieldOffset(Offset = "0x40")]
	public RectTransform flag3;

	[Token(Token = "0x4000021")]
	[FieldOffset(Offset = "0x48")]
	public RectTransform flag4;

	[Token(Token = "0x4000022")]
	[FieldOffset(Offset = "0x50")]
	public RectTransform flag5;

	[Token(Token = "0x4000023")]
	[FieldOffset(Offset = "0x58")]
	public RectTransform flag6;

	[Token(Token = "0x4000024")]
	[FieldOffset(Offset = "0x60")]
	public RectTransform flag7;

	[Token(Token = "0x4000025")]
	[FieldOffset(Offset = "0x68")]
	public RectTransform flag8;

	[Token(Token = "0x4000026")]
	[FieldOffset(Offset = "0x70")]
	public RectTransform flag9;

	[Token(Token = "0x4000027")]
	[FieldOffset(Offset = "0x78")]
	public RectTransform flag10;

	[Token(Token = "0x4000028")]
	[FieldOffset(Offset = "0x80")]
	private int wave;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x30F790", Offset = "0x30E390", VA = "0x18030F790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x30F7E0", Offset = "0x30E3E0", VA = "0x18030F7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x30F680", Offset = "0x30E280", VA = "0x18030F680")]
	private void FlagUpdate()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public FlagMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FloatPlants
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000106")]
public class FloatPlants : MonoBehaviour
{
	[Token(Token = "0x600048A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public FloatPlants()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FloorMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000107")]
public class FloorMgr : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[FieldOffset(Offset = "0x20")]
	public int theFloorRow;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x47CFE0", Offset = "0x47BBE0", VA = "0x18047CFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public FloorMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FogBlock
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000108")]
public class FogBlock : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[FieldOffset(Offset = "0x20")]
	public int fogColumn;

	[Token(Token = "0x400041E")]
	[FieldOffset(Offset = "0x24")]
	public int fogRow;

	[Token(Token = "0x400041F")]
	[FieldOffset(Offset = "0x28")]
	public bool isOver;

	[Token(Token = "0x4000420")]
	[FieldOffset(Offset = "0x29")]
	public bool fading;

	[Token(Token = "0x4000421")]
	[FieldOffset(Offset = "0x30")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000422")]
	[FieldOffset(Offset = "0x38")]
	public Color color1;

	[Token(Token = "0x4000423")]
	[FieldOffset(Offset = "0x48")]
	public Color color2;

	[Token(Token = "0x4000424")]
	[FieldOffset(Offset = "0x58")]
	private float lerpT;

	[Token(Token = "0x4000425")]
	[FieldOffset(Offset = "0x5C")]
	private float currentA;

	[Token(Token = "0x4000426")]
	[FieldOffset(Offset = "0x60")]
	private float lerpTime;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x47D0C0", Offset = "0x47BCC0", VA = "0x18047D0C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x47D170", Offset = "0x47BD70", VA = "0x18047D170")]
	private void SetLayer()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x47D170", Offset = "0x47BD70", VA = "0x18047D170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x47D1E0", Offset = "0x47BDE0", VA = "0x18047D1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x47D520", Offset = "0x47C120", VA = "0x18047D520")]
	public FogBlock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FogMgr
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000109")]
public class FogMgr : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	[CompilerGenerated]
	private sealed class <MoveObject>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000430")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000431")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000432")]
		[FieldOffset(Offset = "0x20")]
		public FogMgr <>4__this;

		[Token(Token = "0x4000433")]
		[FieldOffset(Offset = "0x28")]
		public Vector3 endPos;

		[Token(Token = "0x4000434")]
		[FieldOffset(Offset = "0x34")]
		public float speed;

		[Token(Token = "0x4000435")]
		[FieldOffset(Offset = "0x38")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000436")]
		[FieldOffset(Offset = "0x44")]
		private float <moveTime>5__3;

		[Token(Token = "0x4000437")]
		[FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveObject>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x48C6D0", Offset = "0x48B2D0", VA = "0x18048C6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x48C9D0", Offset = "0x48B5D0", VA = "0x18048C9D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000427")]
	[FieldOffset(Offset = "0x0")]
	public static FogMgr Instance;

	[Token(Token = "0x4000428")]
	private const float appearSpeed = 1f;

	[Token(Token = "0x4000429")]
	private const float moveSpeed = 10f;

	[Token(Token = "0x400042A")]
	private const float fadeSpeed = 20f;

	[Token(Token = "0x400042B")]
	[FieldOffset(Offset = "0x20")]
	private readonly List<FogBlock> fogList;

	[Token(Token = "0x400042C")]
	[FieldOffset(Offset = "0x28")]
	public float appearTime;

	[Token(Token = "0x400042D")]
	[FieldOffset(Offset = "0x30")]
	private Coroutine coroutine1;

	[Token(Token = "0x400042E")]
	[FieldOffset(Offset = "0x38")]
	private Coroutine coroutine2;

	[Token(Token = "0x400042F")]
	[FieldOffset(Offset = "0x40")]
	private Coroutine coroutine3;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x47D5F0", Offset = "0x47C1F0", VA = "0x18047D5F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x47D8E0", Offset = "0x47C4E0", VA = "0x18047D8E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x47E310", Offset = "0x47CF10", VA = "0x18047E310")]
	private void Update()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x47DE60", Offset = "0x47CA60", VA = "0x18047DE60")]
	private void Light()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x47DD80", Offset = "0x47C980", VA = "0x18047DD80")]
	private bool InTorchRange(Plant p, FogBlock fog)
	{
		return default(bool);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x47DBF0", Offset = "0x47C7F0", VA = "0x18047DBF0")]
	private bool InLanternRange(Plant p, FogBlock fog)
	{
		return default(bool);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x47D8F0", Offset = "0x47C4F0", VA = "0x18047D8F0")]
	private void GetFog(GameObject obj)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x47D540", Offset = "0x47C140", VA = "0x18047D540")]
	public void AppearFog(Vector3 pos)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x47E1C0", Offset = "0x47CDC0", VA = "0x18047E1C0")]
	public void MoveFog(Vector3 pos)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x47D660", Offset = "0x47C260", VA = "0x18047D660")]
	public void Blown()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x47D800", Offset = "0x47C400", VA = "0x18047D800")]
	public void FadeFog(Vector3 pos)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x47E270", Offset = "0x47CE70", VA = "0x18047E270")]
	[IteratorStateMachine(typeof(<MoveObject>d__20))]
	private IEnumerator MoveObject(Vector3 endPos, float speed)
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x47D780", Offset = "0x47C380", VA = "0x18047D780")]
	private float EaseInOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x47E4A0", Offset = "0x47D0A0", VA = "0x18047E4A0")]
	public FogMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FootballDrown
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002CB")]
public class FootballDrown : TallNutFootballZ
{
	[Token(Token = "0x4000827")]
	[FieldOffset(Offset = "0x220")]
	protected float throwTime;

	[Token(Token = "0x4000828")]
	[FieldOffset(Offset = "0x224")]
	private bool isThrow;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x379040", Offset = "0x377C40", VA = "0x180379040", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x3790A0", Offset = "0x377CA0", VA = "0x1803790A0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x378FF0", Offset = "0x377BF0", VA = "0x180378FF0")]
	private void StartThrow()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x378530", Offset = "0x377130", VA = "0x180378530")]
	private void AnimThrow()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x378E20", Offset = "0x377A20", VA = "0x180378E20", Slot = "55")]
	protected virtual DrownWeapon SetWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x378A60", Offset = "0x377660", VA = "0x180378A60", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x378CF0", Offset = "0x3778F0", VA = "0x180378CF0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x378B50", Offset = "0x377750", VA = "0x180378B50", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public FootballDrown()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FootballDrownShoot
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000056")]
public class FootballDrownShoot : StateMachineBehaviour
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x42EF60", Offset = "0x42DB60", VA = "0x18042EF60", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public FootballDrownShoot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// FumeShroom
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000214")]
public class FumeShroom : Shooter
{
	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x334400", Offset = "0x333000", VA = "0x180334400", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x333FC0", Offset = "0x332BC0", VA = "0x180333FC0", Slot = "42")]
	protected virtual void AttackZombie()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x3343C0", Offset = "0x332FC0", VA = "0x1803343C0", Slot = "43")]
	protected virtual void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x3346B0", Offset = "0x3332B0", VA = "0x1803346B0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public FumeShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GameAPP
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000325")]
public class GameAPP : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	public struct EVEPlant
	{
		[Token(Token = "0x4000A3E")]
		[FieldOffset(Offset = "0x0")]
		public int row;

		[Token(Token = "0x4000A3F")]
		[FieldOffset(Offset = "0x4")]
		public int column;

		[Token(Token = "0x4000A40")]
		[FieldOffset(Offset = "0x8")]
		public PlantType type;
	}

	[Token(Token = "0x2000327")]
	public struct LastCards
	{
		[Token(Token = "0x4000A41")]
		[FieldOffset(Offset = "0x0")]
		public PlantType theSeedType;

		[Token(Token = "0x4000A42")]
		[FieldOffset(Offset = "0x4")]
		public bool isExtra;
	}

	[Token(Token = "0x40009E4")]
	[FieldOffset(Offset = "0x0")]
	public static GameObject gameAPP;

	[Token(Token = "0x40009E5")]
	[FieldOffset(Offset = "0x8")]
	public static GameAPP Instance;

	[Token(Token = "0x40009E6")]
	[FieldOffset(Offset = "0x10")]
	public static Transform canvas;

	[Token(Token = "0x40009E7")]
	[FieldOffset(Offset = "0x18")]
	public static Transform canvasUp;

	[Token(Token = "0x40009E8")]
	[FieldOffset(Offset = "0x20")]
	public static GameObject miniCanvas;

	[Token(Token = "0x40009E9")]
	[FieldOffset(Offset = "0x28")]
	public static GameObject mainMenuCanvas;

	[Token(Token = "0x40009EA")]
	[FieldOffset(Offset = "0x30")]
	public static GameObject board;

	[Token(Token = "0x40009EB")]
	[FieldOffset(Offset = "0x38")]
	public static Transform boardTransform;

	[Token(Token = "0x40009EC")]
	[FieldOffset(Offset = "0x40")]
	public static Camera miniCamera;

	[Token(Token = "0x40009ED")]
	[FieldOffset(Offset = "0x48")]
	public static AudioClip[] audioPrefab;

	[Token(Token = "0x40009EE")]
	[FieldOffset(Offset = "0x50")]
	public static GameObject[] zombiePrefab;

	[Token(Token = "0x40009EF")]
	[FieldOffset(Offset = "0x58")]
	public static GameObject[] particlePrefab;

	[Token(Token = "0x40009F0")]
	[FieldOffset(Offset = "0x60")]
	public static GameObject[] itemPrefab;

	[Token(Token = "0x40009F1")]
	[FieldOffset(Offset = "0x68")]
	public static GameObject[] gridItemPrefab;

	[Token(Token = "0x40009F2")]
	[FieldOffset(Offset = "0x70")]
	public static Sprite[] spritePrefab;

	[Token(Token = "0x40009F3")]
	[FieldOffset(Offset = "0x78")]
	public static List<LastCards> lastCards;

	[Token(Token = "0x40009F4")]
	[FieldOffset(Offset = "0x80")]
	public static List<Material> materials;

	[Token(Token = "0x40009F5")]
	[FieldOffset(Offset = "0x88")]
	public static Material flashMaterial;

	[Token(Token = "0x40009F6")]
	[FieldOffset(Offset = "0x20")]
	public Material defaultMaterial;

	[Token(Token = "0x40009F7")]
	[FieldOffset(Offset = "0x28")]
	public Material grayMaterial;

	[Token(Token = "0x40009F8")]
	[FieldOffset(Offset = "0x30")]
	public Material wheatMaterial;

	[Token(Token = "0x40009F9")]
	[FieldOffset(Offset = "0x90")]
	public static float gameMusicVolume;

	[Token(Token = "0x40009FA")]
	[FieldOffset(Offset = "0x94")]
	public static float currentMusicVolume;

	[Token(Token = "0x40009FB")]
	[FieldOffset(Offset = "0x98")]
	public static float currentDrumVolume;

	[Token(Token = "0x40009FC")]
	[FieldOffset(Offset = "0x9C")]
	public static float gameSoundVolume;

	[Token(Token = "0x40009FD")]
	[FieldOffset(Offset = "0xA0")]
	public static int difficulty;

	[Token(Token = "0x40009FE")]
	[FieldOffset(Offset = "0xA8")]
	public static long theMoneyCount;

	[Token(Token = "0x40009FF")]
	[FieldOffset(Offset = "0xB0")]
	public static bool[] advLevelCompleted;

	[Token(Token = "0x4000A00")]
	[FieldOffset(Offset = "0xB8")]
	public static bool[] clgLevelCompleted;

	[Token(Token = "0x4000A01")]
	[FieldOffset(Offset = "0xC0")]
	public static bool[] gameLevelCompleted;

	[Token(Token = "0x4000A02")]
	[FieldOffset(Offset = "0xC8")]
	public static bool[] survivalLevelCompleted;

	[Token(Token = "0x4000A03")]
	[FieldOffset(Offset = "0xD0")]
	public static HashSet<int> exploreLevelCompleted;

	[Token(Token = "0x4000A04")]
	[FieldOffset(Offset = "0xD8")]
	public static HashSet<int> travelLevelCompleted;

	[Token(Token = "0x4000A05")]
	[FieldOffset(Offset = "0xE0")]
	public static HashSet<int> skinLevelCompleted;

	[Token(Token = "0x4000A06")]
	[FieldOffset(Offset = "0xE8")]
	public static int abyssArrivedLevel;

	[Token(Token = "0x4000A07")]
	[FieldOffset(Offset = "0xF0")]
	public static HashSet<string> nameLevelCompleted;

	[Token(Token = "0x4000A08")]
	[FieldOffset(Offset = "0xF8")]
	public static float gameSpeed;

	[Token(Token = "0x4000A09")]
	[FieldOffset(Offset = "0xFC")]
	public static float cameraSize;

	[Token(Token = "0x4000A0A")]
	[FieldOffset(Offset = "0x100")]
	public static float canvasMatch;

	[Token(Token = "0x4000A0B")]
	[FieldOffset(Offset = "0x104")]
	public static float snapassqutch;

	[Token(Token = "0x4000A0C")]
	[FieldOffset(Offset = "0x108")]
	public static bool shootingWithoutGlove;

	[Token(Token = "0x4000A0D")]
	[FieldOffset(Offset = "0x109")]
	public static bool disablelevelTutor;

	[Token(Token = "0x4000A0E")]
	[FieldOffset(Offset = "0x10A")]
	public static bool wheatColor;

	[Token(Token = "0x4000A0F")]
	[FieldOffset(Offset = "0x10B")]
	public static bool disablePreSelectInAdv;

	[Token(Token = "0x4000A10")]
	[FieldOffset(Offset = "0x10C")]
	public static bool distablexplodeFlash;

	[Token(Token = "0x4000A11")]
	[FieldOffset(Offset = "0x10D")]
	public static bool disableSolarStarEffect;

	[Token(Token = "0x4000A12")]
	[FieldOffset(Offset = "0x110")]
	public static int theBoardLevel;

	[Token(Token = "0x4000A13")]
	[FieldOffset(Offset = "0x114")]
	public static LevelType theBoardType;

	[Token(Token = "0x4000A14")]
	[FieldOffset(Offset = "0x118")]
	public static string theIZLevelName;

	[Token(Token = "0x4000A15")]
	[FieldOffset(Offset = "0x120")]
	public static int theGameStatus;

	[Token(Token = "0x4000A16")]
	[FieldOffset(Offset = "0x124")]
	public static bool autoCollect;

	[Token(Token = "0x4000A17")]
	[FieldOffset(Offset = "0x125")]
	public static bool developerMode;

	[Token(Token = "0x4000A18")]
	[FieldOffset(Offset = "0x128")]
	public static List<SoundCtrl> sound;

	[Token(Token = "0x4000A19")]
	[FieldOffset(Offset = "0x130")]
	public static List<EVEPlant> plantEVE;

	[Token(Token = "0x4000A1A")]
	[FieldOffset(Offset = "0x138")]
	public static bool ra2Sound;

	[Token(Token = "0x4000A1B")]
	[FieldOffset(Offset = "0x139")]
	public static bool mouseFlip;

	[Token(Token = "0x4000A1C")]
	[FieldOffset(Offset = "0x13A")]
	public static bool isFullScreen;

	[Token(Token = "0x4000A1D")]
	[FieldOffset(Offset = "0x140")]
	public static string playerName;

	[Token(Token = "0x4000A1E")]
	[FieldOffset(Offset = "0x148")]
	public static string version;

	[Token(Token = "0x4000A1F")]
	[FieldOffset(Offset = "0x150")]
	public static int advantureLevel;

	[Token(Token = "0x4000A20")]
	[FieldOffset(Offset = "0x154")]
	public static int advantureZhouMu;

	[Token(Token = "0x4000A21")]
	[FieldOffset(Offset = "0x158")]
	public static List<PlantType> randomPlantInZhouMu;

	[Token(Token = "0x4000A22")]
	[FieldOffset(Offset = "0x160")]
	public static List<PlantType> bannedInPVPScaryPot;

	[Token(Token = "0x4000A23")]
	[FieldOffset(Offset = "0x168")]
	public static bool TravelMenu;

	[Token(Token = "0x4000A24")]
	[FieldOffset(Offset = "0x170")]
	public static ResourcesManager resourcesManager;

	[Token(Token = "0x4000A25")]
	[FieldOffset(Offset = "0x178")]
	public static CustomIZManager customIZManager;

	[Token(Token = "0x4000A26")]
	[FieldOffset(Offset = "0x180")]
	public static SoundManager soundManager;

	[Token(Token = "0x4000A27")]
	[FieldOffset(Offset = "0x188")]
	public static ItemManager itemManager;

	[Token(Token = "0x4000A28")]
	[FieldOffset(Offset = "0x190")]
	public static UIResourcesLoader UIManager;

	[Token(Token = "0x4000A29")]
	public const int 最大伤害 = 1000000;

	[Token(Token = "0x4000A2A")]
	public const float 屋顶X坐标 = 1.5f;

	[Token(Token = "0x4000A2B")]
	public const float 屋顶斜率 = 0.22f;

	[Token(Token = "0x4000A2C")]
	public const int 基础卡数量 = 33;

	[Token(Token = "0x4000A2D")]
	public const int 字符串长度 = 64;

	[Token(Token = "0x4000A2E")]
	public const float 屋顶偏移 = 0.1f;

	[Token(Token = "0x4000A2F")]
	public const int ultimatePlantStartID = 900;

	[Token(Token = "0x4000A30")]
	[FieldOffset(Offset = "0x198")]
	public static AudioSource music;

	[Token(Token = "0x4000A31")]
	[FieldOffset(Offset = "0x1A0")]
	public static AudioSource musicDrum;

	[Token(Token = "0x4000A32")]
	[FieldOffset(Offset = "0x1A8")]
	public static PreludeMusic prelude;

	[Token(Token = "0x4000A33")]
	[FieldOffset(Offset = "0x1B0")]
	public static DelayAction delayAction;

	[Token(Token = "0x4000A34")]
	[FieldOffset(Offset = "0x1B8")]
	public static TMP_FontAsset font;

	[Token(Token = "0x4000A35")]
	[FieldOffset(Offset = "0x1C0")]
	public static int fertizeCount;

	[Token(Token = "0x4000A36")]
	[FieldOffset(Offset = "0x1C4")]
	public static int bugSprayCount;

	[Token(Token = "0x4000A37")]
	[FieldOffset(Offset = "0x1C8")]
	public static int silverCoinCount;

	[Token(Token = "0x4000A38")]
	[FieldOffset(Offset = "0x1CC")]
	public static int goldCoinCount;

	[Token(Token = "0x4000A39")]
	[FieldOffset(Offset = "0x1D0")]
	public static int diamondCount;

	[Token(Token = "0x4000A3A")]
	[FieldOffset(Offset = "0x1D4")]
	public static Vector3 CameraLastPoint;

	[Token(Token = "0x4000A3B")]
	[FieldOffset(Offset = "0x1E0")]
	public static int gameAppLastStatus;

	[Token(Token = "0x4000A3C")]
	[FieldOffset(Offset = "0x38")]
	private bool isDrumPlaying;

	[Token(Token = "0x4000A3D")]
	[FieldOffset(Offset = "0x1E4")]
	public static bool hardZombie;

	[Token(Token = "0x17000071")]
	public static float Error_Value
	{
		[Token(Token = "0x600107F")]
		[Address(RVA = "0x3BA950", Offset = "0x3B9550", VA = "0x1803BA950")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x3AEAF0", Offset = "0x3AD6F0", VA = "0x1803AEAF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x3AF6E0", Offset = "0x3AE2E0", VA = "0x1803AF6E0")]
	public static long GetTime()
	{
		return default(long);
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x3B9BB0", Offset = "0x3B87B0", VA = "0x1803B9BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x3B9210", Offset = "0x3B7E10", VA = "0x1803B9210")]
	public static void PlaySoundNotPause(int theSoundID, float theVolume = 0.5f)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x3B9360", Offset = "0x3B7F60", VA = "0x1803B9360")]
	public static void PlaySound(int theSoundID, float theVolume = 0.5f, float pitch = 1f)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x3B8DA0", Offset = "0x3B79A0", VA = "0x1803B8DA0")]
	public void PlayMusic(MusicType id)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x3B34A0", Offset = "0x3B20A0", VA = "0x1803B34A0")]
	private void LoadResources()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x3B8080", Offset = "0x3B6C80", VA = "0x1803B8080")]
	public static void LoadTheResources()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x3B3A20", Offset = "0x3B2620", VA = "0x1803B3A20")]
	private static void LoadSound()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x3B83A0", Offset = "0x3B6FA0", VA = "0x1803B83A0")]
	private static void LoadZombie()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x3B0B00", Offset = "0x3AF700", VA = "0x1803B0B00")]
	private static void LoadParticle()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x3B68F0", Offset = "0x3B54F0", VA = "0x1803B68F0")]
	private static void LoadSprite()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x3AFA30", Offset = "0x3AE630", VA = "0x1803AFA30")]
	private static void LoadItem()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x3AF7A0", Offset = "0x3AE3A0", VA = "0x1803AF7A0")]
	private static void LoadGridItem()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x3B9CC0", Offset = "0x3B88C0", VA = "0x1803B9CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x3B8860", Offset = "0x3B7460", VA = "0x1803B8860")]
	private void MusicUpdate()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x3AF2B0", Offset = "0x3ADEB0", VA = "0x1803AF2B0")]
	private void DayMusicUpdate()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x3B8A30", Offset = "0x3B7630", VA = "0x1803B8A30")]
	private void NightMusicUpdate()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x3B98B0", Offset = "0x3B84B0", VA = "0x1803B98B0")]
	private void SearchEnumBug()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GameAPP()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GameLose
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200010B")]
public class GameLose : MonoBehaviour
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x47E520", Offset = "0x47D120", VA = "0x18047E520")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GameLose()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GameSpeedMgr
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000328")]
public class GameSpeedMgr : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x3C1100", Offset = "0x3BFD00", VA = "0x1803C1100")]
	private void Start()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x3C11B0", Offset = "0x3BFDB0", VA = "0x1803C11B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GameSpeedMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GameStatus
using Il2CppDummyDll;

[Token(Token = "0x20003B0")]
public enum GameStatus
{
	[Token(Token = "0x4000FDC")]
	OpenOptions = -2,
	[Token(Token = "0x4000FDD")]
	OutGame,
	[Token(Token = "0x4000FDE")]
	InGame,
	[Token(Token = "0x4000FDF")]
	Pause,
	[Token(Token = "0x4000FE0")]
	InInterlude,
	[Token(Token = "0x4000FE1")]
	Selecting,
	[Token(Token = "0x4000FE2")]
	Almanac,
	[Token(Token = "0x4000FE3")]
	Car,
	[Token(Token = "0x4000FE4")]
	Wating
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GameStrategy
using Il2CppDummyDll;

[Token(Token = "0x20003BF")]
public class GameStrategy
{
	[Token(Token = "0x400104D")]
	public const int OnePeaDamage = 20;

	[Token(Token = "0x400104E")]
	public const int ThreeTorchYellowFireDamage = 30;

	[Token(Token = "0x400104F")]
	public const int FirePeaDamage = 40;

	[Token(Token = "0x4001050")]
	public const int ThreeTorchOrangeFireDamage = 45;

	[Token(Token = "0x4001051")]
	public const int OrangeFirePeaDamage = 60;

	[Token(Token = "0x4001052")]
	public const int ThreeTorchRedFireDamage = 60;

	[Token(Token = "0x4001053")]
	public const int RedFirePeaDamage = 80;

	[Token(Token = "0x4001054")]
	public const int FireCherryDamage = 120;

	[Token(Token = "0x4001055")]
	public const int ZombieSuperCherryDamage = 1000;

	[Token(Token = "0x4001056")]
	public const int SuperCherryDamage = 300;

	[Token(Token = "0x4001057")]
	public const int RedIronPeaDamage = 320;

	[Token(Token = "0x4001058")]
	public const int BigSunDamage = 400;

	[Token(Token = "0x4001059")]
	public const int ThreeSpikeBulletDamage = 5;

	[Token(Token = "0x400105A")]
	public const int AshDamage = 1800;

	[Token(Token = "0x400105B")]
	public const int BasketBallDamage = 60;

	[Token(Token = "0x400105C")]
	public const string t = "融合版唯一官方：\r\n哔哩哔哩up主-蓝飘飘fly";

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public GameStrategy()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Garage
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200003D")]
public class Garage : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[FieldOffset(Offset = "0x0")]
	public static Garage Instance;

	[Token(Token = "0x400011A")]
	[FieldOffset(Offset = "0x20")]
	public List<CarObject> carObjects;

	[Token(Token = "0x400011B")]
	[FieldOffset(Offset = "0x28")]
	public List<CarBody> cars;

	[Token(Token = "0x400011C")]
	[FieldOffset(Offset = "0x30")]
	public List<CarWeapon> weapons;

	[Token(Token = "0x400011D")]
	[FieldOffset(Offset = "0x38")]
	public List<CarWheel> wheels;

	[Token(Token = "0x400011E")]
	[FieldOffset(Offset = "0x40")]
	public List<Transform> transforms;

	[Token(Token = "0x400011F")]
	[FieldOffset(Offset = "0x48")]
	public int sun;

	[Token(Token = "0x4000120")]
	[FieldOffset(Offset = "0x50")]
	public CarObjectCard card;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x3106C0", Offset = "0x30F2C0", VA = "0x1803106C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x311DF0", Offset = "0x3109F0", VA = "0x180311DF0")]
	public void SellObject(CarObject carObject)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x3109B0", Offset = "0x30F5B0", VA = "0x1803109B0")]
	public void GetGarageData()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x310720", Offset = "0x30F320", VA = "0x180310720")]
	private void GetBodys(CarData data)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x3112D0", Offset = "0x30FED0", VA = "0x1803112D0")]
	public void SaveGarageData()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x311240", Offset = "0x30FE40", VA = "0x180311240")]
	public string GetPath()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x311E80", Offset = "0x310A80", VA = "0x180311E80")]
	public Garage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Garden
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200032B")]
public class Garden : MonoBehaviour
{
	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Garden()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenAllData
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x20003C2")]
public class GardenAllData
{
	[Token(Token = "0x4001066")]
	[FieldOffset(Offset = "0x10")]
	public List<GardenPlantData> plantData;

	[Token(Token = "0x4001067")]
	[FieldOffset(Offset = "0x18")]
	public List<GardenPlantData> plantData2;

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public GardenAllData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenBattleManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200032C")]
public class GardenBattleManager : MonoBehaviour
{
	[Token(Token = "0x4000A49")]
	[FieldOffset(Offset = "0x20")]
	private Board board;

	[Token(Token = "0x4000A4A")]
	[FieldOffset(Offset = "0x28")]
	private int progress;

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x3C1250", Offset = "0x3BFE50", VA = "0x1803C1250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x3C1920", Offset = "0x3C0520", VA = "0x1803C1920")]
	private Queue<GardenPlantData> GetAvaliablePlants()
	{
		return null;
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x3C1E80", Offset = "0x3C0A80", VA = "0x1803C1E80")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x3C1400", Offset = "0x3C0000", VA = "0x1803C1400")]
	private void BattleUpdate()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x3C1B50", Offset = "0x3C0750", VA = "0x1803C1B50")]
	private void Supply()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenBattleManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenBox
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200032D")]
public class GardenBox : MonoBehaviour
{
	[Token(Token = "0x4000A4B")]
	[FieldOffset(Offset = "0x20")]
	public int column;

	[Token(Token = "0x4000A4C")]
	[FieldOffset(Offset = "0x24")]
	public int row;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenBox()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenBtn
using Il2CppDummyDll;

[Token(Token = "0x200032E")]
public class GardenBtn : UIBtn
{
	[Token(Token = "0x200032F")]
	public enum GartenBtnType
	{
		[Token(Token = "0x4000A50")]
		NextGarden,
		[Token(Token = "0x4000A51")]
		Help,
		[Token(Token = "0x4000A52")]
		LastGarden,
		[Token(Token = "0x4000A53")]
		Store,
		[Token(Token = "0x4000A54")]
		ExitStore
	}

	[Token(Token = "0x4000A4D")]
	[FieldOffset(Offset = "0x60")]
	public GartenBtnType type;

	[Token(Token = "0x4000A4E")]
	[FieldOffset(Offset = "0x64")]
	private bool active;

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x3C1E90", Offset = "0x3C0A90", VA = "0x1803C1E90", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public GardenBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenData
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003C0")]
public class GardenData : MonoBehaviour
{
	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x3FA680", Offset = "0x3F9280", VA = "0x1803FA680")]
	public static string GetPath(int page)
	{
		return null;
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x3FA610", Offset = "0x3F9210", VA = "0x1803FA610")]
	public static GardenAllData GetGardenData(int page)
	{
		return null;
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x3FA7E0", Offset = "0x3F93E0", VA = "0x1803FA7E0")]
	public static void LoadGardenData(Transform parent, ref List<GardenPlant> plants, int page)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x3FA080", Offset = "0x3F8C80", VA = "0x1803FA080")]
	public static bool AddNewPlantOutOfGarden()
	{
		return default(bool);
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x3FA7A0", Offset = "0x3F93A0", VA = "0x1803FA7A0")]
	private static PlantType GetPlantType()
	{
		return default(PlantType);
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x3FAA20", Offset = "0x3F9620", VA = "0x1803FAA20")]
	public static void SaveGardenData(GardenUI gardenUI)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenMoney
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000330")]
public class GardenMoney : MonoBehaviour
{
	[Token(Token = "0x4000A55")]
	[FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x4000A56")]
	[FieldOffset(Offset = "0x0")]
	public static GardenMoney Instance;

	[Token(Token = "0x4000A57")]
	[FieldOffset(Offset = "0x28")]
	public Transform pos;

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x3C1FE0", Offset = "0x3C0BE0", VA = "0x1803C1FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x3C2040", Offset = "0x3C0C40", VA = "0x1803C2040")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenMoney()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenPlant
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000331")]
public class GardenPlant : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	[CompilerGenerated]
	private sealed class <Grow>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A73")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A74")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A75")]
		[FieldOffset(Offset = "0x20")]
		public GardenPlant <>4__this;

		[Token(Token = "0x4000A76")]
		[FieldOffset(Offset = "0x28")]
		private Vector3 <originalScale>5__2;

		[Token(Token = "0x4000A77")]
		[FieldOffset(Offset = "0x34")]
		private Vector3 <targetScale>5__3;

		[Token(Token = "0x4000A78")]
		[FieldOffset(Offset = "0x40")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x4000A79")]
		[FieldOffset(Offset = "0x44")]
		private float <duration>5__5;

		[Token(Token = "0x4000A7A")]
		[FieldOffset(Offset = "0x48")]
		private Vector3 <startPosition>5__6;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Grow>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x3E04D0", Offset = "0x3DF0D0", VA = "0x1803E04D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x3E0920", Offset = "0x3DF520", VA = "0x1803E0920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A58")]
	[FieldOffset(Offset = "0x20")]
	public PlantType thePlantType;

	[Token(Token = "0x4000A59")]
	[FieldOffset(Offset = "0x24")]
	public int thePlantColumn;

	[Token(Token = "0x4000A5A")]
	[FieldOffset(Offset = "0x28")]
	public int thePlantRow;

	[Token(Token = "0x4000A5B")]
	[FieldOffset(Offset = "0x2C")]
	public int growStage;

	[Token(Token = "0x4000A5C")]
	[FieldOffset(Offset = "0x30")]
	public int waterLevel;

	[Token(Token = "0x4000A5D")]
	[FieldOffset(Offset = "0x34")]
	public int love;

	[Token(Token = "0x4000A5E")]
	[FieldOffset(Offset = "0x38")]
	public long nextTime;

	[Token(Token = "0x4000A5F")]
	[FieldOffset(Offset = "0x40")]
	public long currentTime;

	[Token(Token = "0x4000A60")]
	[FieldOffset(Offset = "0x48")]
	public bool ready;

	[Token(Token = "0x4000A61")]
	[FieldOffset(Offset = "0x49")]
	public bool preview;

	[Token(Token = "0x4000A62")]
	[FieldOffset(Offset = "0x4A")]
	public bool onWheelBarrow;

	[Token(Token = "0x4000A63")]
	[FieldOffset(Offset = "0x4C")]
	public int page;

	[Token(Token = "0x4000A64")]
	[FieldOffset(Offset = "0x50")]
	public float battleTimer;

	[Token(Token = "0x4000A65")]
	[FieldOffset(Offset = "0x54")]
	public Vector2 plantScale;

	[Token(Token = "0x4000A66")]
	[FieldOffset(Offset = "0x60")]
	public GameObject plantObject;

	[Token(Token = "0x4000A67")]
	[FieldOffset(Offset = "0x68")]
	public Transform plantPos;

	[Token(Token = "0x4000A68")]
	[FieldOffset(Offset = "0x70")]
	public Transform axis;

	[Token(Token = "0x4000A69")]
	[FieldOffset(Offset = "0x78")]
	public Animator anim;

	[Token(Token = "0x4000A6A")]
	[FieldOffset(Offset = "0x80")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x4000A6B")]
	[FieldOffset(Offset = "0x88")]
	private GameObject info;

	[Token(Token = "0x4000A6C")]
	[FieldOffset(Offset = "0x90")]
	private TextMeshPro infoText;

	[Token(Token = "0x4000A6D")]
	[FieldOffset(Offset = "0x98")]
	public GardenToolType needTool;

	[Token(Token = "0x4000A6E")]
	[FieldOffset(Offset = "0x9C")]
	private float timeUpdater;

	[Token(Token = "0x4000A6F")]
	[FieldOffset(Offset = "0xA0")]
	private float brightness;

	[Token(Token = "0x4000A70")]
	[FieldOffset(Offset = "0xA4")]
	private float infoShowTime;

	[Token(Token = "0x4000A71")]
	[FieldOffset(Offset = "0xA8")]
	private GameObject Bubble;

	[Token(Token = "0x4000A72")]
	[FieldOffset(Offset = "0xB0")]
	private readonly List<SpriteRenderer> spriteRenderers;

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x3C2C30", Offset = "0x3C1830", VA = "0x1803C2C30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x3C20D0", Offset = "0x3C0CD0", VA = "0x1803C20D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x3C3380", Offset = "0x3C1F80", VA = "0x1803C3380")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x3C2880", Offset = "0x3C1480", VA = "0x1803C2880")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x3C3A20", Offset = "0x3C2620", VA = "0x1803C3A20")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x3C2680", Offset = "0x3C1280", VA = "0x1803C2680")]
	public void EnableInfo()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x3C3740", Offset = "0x3C2340", VA = "0x1803C3740")]
	private void UpdateInfo()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x3C2650", Offset = "0x3C1250", VA = "0x1803C2650")]
	private void DisableInfo()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x3C24F0", Offset = "0x3C10F0", VA = "0x1803C24F0")]
	public void Die()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x3C2FC0", Offset = "0x3C1BC0", VA = "0x1803C2FC0")]
	public void SetBrightness(float b)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x3C31C0", Offset = "0x3C1DC0", VA = "0x1803C31C0")]
	public void SetColor(float r, float g, float b, float a)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x3C29A0", Offset = "0x3C15A0", VA = "0x1803C29A0")]
	private void GetSpriteRenderers(GameObject obj)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x3C3650", Offset = "0x3C2250", VA = "0x1803C3650")]
	private void TimeUpdate()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x3C2D90", Offset = "0x3C1990", VA = "0x1803C2D90")]
	private void Ready()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x3C3CB0", Offset = "0x3C28B0", VA = "0x1803C3CB0")]
	public void Watered(GardenToolType tool)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x3C26C0", Offset = "0x3C12C0", VA = "0x1803C26C0")]
	public void Fertized(GardenToolType tool)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x3C22C0", Offset = "0x3C0EC0", VA = "0x1803C22C0")]
	public void Develop(GardenToolType tool)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x3C2CA0", Offset = "0x3C18A0", VA = "0x1803C2CA0")]
	private void Prize()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x3C2B00", Offset = "0x3C1700", VA = "0x1803C2B00")]
	private long GetTime()
	{
		return default(long);
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x3C2BC0", Offset = "0x3C17C0", VA = "0x1803C2BC0")]
	[IteratorStateMachine(typeof(<Grow>d__46))]
	private IEnumerator Grow()
	{
		return null;
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x3C3E70", Offset = "0x3C2A70", VA = "0x1803C3E70")]
	public GardenPlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenPlantData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x20003C1")]
public class GardenPlantData
{
	[Token(Token = "0x400105D")]
	[FieldOffset(Offset = "0x10")]
	public int thePlantRow;

	[Token(Token = "0x400105E")]
	[FieldOffset(Offset = "0x14")]
	public int thePlantColumn;

	[Token(Token = "0x400105F")]
	[FieldOffset(Offset = "0x18")]
	public PlantType thePlantType;

	[Token(Token = "0x4001060")]
	[FieldOffset(Offset = "0x1C")]
	public int growStage;

	[Token(Token = "0x4001061")]
	[FieldOffset(Offset = "0x20")]
	public int waterLevel;

	[Token(Token = "0x4001062")]
	[FieldOffset(Offset = "0x24")]
	public int love;

	[Token(Token = "0x4001063")]
	[FieldOffset(Offset = "0x28")]
	public long nextTime;

	[Token(Token = "0x4001064")]
	[FieldOffset(Offset = "0x30")]
	public GardenToolType needTool;

	[Token(Token = "0x4001065")]
	[FieldOffset(Offset = "0x34")]
	public int page;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public GardenPlantData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenPrize
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200033A")]
public class GardenPrize : MonoBehaviour
{
	[Token(Token = "0x4000AB4")]
	[FieldOffset(Offset = "0x20")]
	private float existTime;

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x3C4190", Offset = "0x3C2D90", VA = "0x1803C4190")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x3C41F0", Offset = "0x3C2DF0", VA = "0x1803C41F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x3C3F00", Offset = "0x3C2B00", VA = "0x1803C3F00")]
	public void Active()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenPrize()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenTool
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000333")]
public class GardenTool : MonoBehaviour
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GardenToolType type;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parent;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider2D _collider2D;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GardenUI gardenManager;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GardenPlant plantOnWheel;

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x3C4270", Offset = "0x3C2E70", VA = "0x1803C4270")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x3C4A50", Offset = "0x3C3650", VA = "0x1803C4A50")]
	private void Start()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x3C4520", Offset = "0x3C3120", VA = "0x1803C4520")]
	private void InputUpdate()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x3C4730", Offset = "0x3C3330", VA = "0x1803C4730")]
	public void PickUp()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x3C4940", Offset = "0x3C3540", VA = "0x1803C4940")]
	public void PutDown()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x3C4C30", Offset = "0x3C3830", VA = "0x1803C4C30")]
	public void Use(GardenPlant plant, [Optional] Vector2 position)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x3C4AA0", Offset = "0x3C36A0", VA = "0x1803C4AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x3C4330", Offset = "0x3C2F30", VA = "0x1803C4330")]
	private void CreatePreview(GardenPlant plant, int type = 0)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x3C4830", Offset = "0x3C3430", VA = "0x1803C4830")]
	private void PreviewSettings(GameObject obj)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x3C46A0", Offset = "0x3C32A0", VA = "0x1803C46A0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x3122A0", Offset = "0x310EA0", VA = "0x1803122A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GardenTool()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenToolType
using Il2CppDummyDll;

[Token(Token = "0x2000336")]
public enum GardenToolType
{
	[Token(Token = "0x4000A96")]
	Default,
	[Token(Token = "0x4000A97")]
	Water,
	[Token(Token = "0x4000A98")]
	Fertilze,
	[Token(Token = "0x4000A99")]
	BugSpray,
	[Token(Token = "0x4000A9A")]
	Phonograph,
	[Token(Token = "0x4000A9B")]
	Glove,
	[Token(Token = "0x4000A9C")]
	MoneySign,
	[Token(Token = "0x4000A9D")]
	WheelBarrow,
	[Token(Token = "0x4000A9E")]
	Magnifier
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenType
using Il2CppDummyDll;

[Token(Token = "0x2000335")]
public enum GardenType
{
	[Token(Token = "0x4000A92")]
	House,
	[Token(Token = "0x4000A93")]
	Mushroom,
	[Token(Token = "0x4000A94")]
	Water
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GardenUI
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000334")]
public class GardenUI : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[FieldOffset(Offset = "0x0")]
	public static GardenUI Instance;

	[Token(Token = "0x4000A83")]
	[FieldOffset(Offset = "0x20")]
	public int currentPage;

	[Token(Token = "0x4000A84")]
	[FieldOffset(Offset = "0x24")]
	public bool inStore;

	[Token(Token = "0x4000A85")]
	[FieldOffset(Offset = "0x28")]
	public GameObject gardenObject;

	[Token(Token = "0x4000A86")]
	[FieldOffset(Offset = "0x30")]
	public GardenTool toolOnMouse;

	[Token(Token = "0x4000A87")]
	[FieldOffset(Offset = "0x38")]
	public GardenPlant plantOnGlove;

	[Token(Token = "0x4000A88")]
	[FieldOffset(Offset = "0x40")]
	public GardenPlant plantOnWheel;

	[Token(Token = "0x4000A89")]
	[FieldOffset(Offset = "0x48")]
	public GameObject plantFollowMouse;

	[Token(Token = "0x4000A8A")]
	[FieldOffset(Offset = "0x50")]
	public GameObject plantPreview;

	[Token(Token = "0x4000A8B")]
	[FieldOffset(Offset = "0x58")]
	public List<GardenPlant> gardenPlants;

	[Token(Token = "0x4000A8C")]
	[FieldOffset(Offset = "0x60")]
	public List<GardenBox> gardenBoxes;

	[Token(Token = "0x4000A8D")]
	[FieldOffset(Offset = "0x68")]
	public GardenBox currentBox;

	[Token(Token = "0x4000A8E")]
	[FieldOffset(Offset = "0x70")]
	private GameObject QuitStore;

	[Token(Token = "0x4000A8F")]
	[FieldOffset(Offset = "0x78")]
	private TextMeshProUGUI currentPageText;

	[Token(Token = "0x4000A90")]
	[FieldOffset(Offset = "0x80")]
	private TextMeshProUGUI currentPageText2;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x3C8B90", Offset = "0x3C7790", VA = "0x1803C8B90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x3C56D0", Offset = "0x3C42D0", VA = "0x1803C56D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x3C8D10", Offset = "0x3C7910", VA = "0x1803C8D10")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x3C6230", Offset = "0x3C4E30", VA = "0x1803C6230")]
	private void GetBoxes(GameObject obj)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x3C9160", Offset = "0x3C7D60", VA = "0x1803C9160")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x3C5EE0", Offset = "0x3C4AE0", VA = "0x1803C5EE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x3C7B10", Offset = "0x3C6710", VA = "0x1803C7B10")]
	private void LightPlant()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x3C77F0", Offset = "0x3C63F0", VA = "0x1803C77F0")]
	private void LeftClickWithSomething()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x3C6550", Offset = "0x3C5150", VA = "0x1803C6550")]
	private void GetCurrentBox()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x3C7DE0", Offset = "0x3C69E0", VA = "0x1803C7DE0")]
	private void MouseToolUpdate()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x3C8200", Offset = "0x3C6E00", VA = "0x1803C8200")]
	private void MouseUpdate()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x3C8680", Offset = "0x3C7280", VA = "0x1803C8680")]
	private void MovePlant(GardenPlant plant, bool glove)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x3C8F30", Offset = "0x3C7B30", VA = "0x1803C8F30")]
	private void TryMixPlant(GardenPlant plant1, GardenPlant plant2, int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x3C75C0", Offset = "0x3C61C0", VA = "0x1803C75C0")]
	private void LeftClickWithNothing()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x3C8BE0", Offset = "0x3C77E0", VA = "0x1803C8BE0")]
	private void RightClick()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x3C5A90", Offset = "0x3C4690", VA = "0x1803C5A90")]
	public void EnterStore()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x3C6750", Offset = "0x3C5350", VA = "0x1803C6750")]
	private PlantType GetStorePlant()
	{
		return default(PlantType);
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x3C5D20", Offset = "0x3C4920", VA = "0x1803C5D20")]
	public void ExitStore()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x3C58E0", Offset = "0x3C44E0", VA = "0x1803C58E0")]
	public void EnterNextPage()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x3C5730", Offset = "0x3C4330", VA = "0x1803C5730")]
	public void EnterLastPage()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x3C9180", Offset = "0x3C7D80", VA = "0x1803C9180")]
	public GardenUI()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Gargantuar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002CD")]
public class Gargantuar : Zombie
{
	[Token(Token = "0x400082B")]
	[FieldOffset(Offset = "0x220")]
	private LayerMask LayerMask;

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x37A1C0", Offset = "0x378DC0", VA = "0x18037A1C0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x37AB10", Offset = "0x379710", VA = "0x18037AB10", Slot = "55")]
	protected virtual void SetWeapon()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x37AC90", Offset = "0x379890", VA = "0x18037AC90", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x37A9B0", Offset = "0x3795B0", VA = "0x18037A9B0", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x37A2F0", Offset = "0x378EF0", VA = "0x18037A2F0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x379E60", Offset = "0x378A60", VA = "0x180379E60")]
	private void AttackUpdate()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x379AE0", Offset = "0x3786E0", VA = "0x180379AE0", Slot = "56")]
	protected virtual void AnimThrow()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x379130", Offset = "0x377D30", VA = "0x180379130", Slot = "57")]
	protected virtual void AnimCrash()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x37AA40", Offset = "0x379640", VA = "0x18037AA40", Slot = "25")]
	public override void PlayFallSound()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x37AA30", Offset = "0x379630", VA = "0x18037AA30", Slot = "27")]
	public override void PlayEatSound()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x37A9D0", Offset = "0x3795D0", VA = "0x18037A9D0")]
	private void PlayDieSound()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "23")]
	protected override bool GetLadder(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public Gargantuar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Garlic
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200017F")]
public class Garlic : WallNut
{
	[Token(Token = "0x6000747")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "39")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x4B5580", Offset = "0x4B4180", VA = "0x1804B5580", Slot = "30")]
	protected override void AnimSuperShoot()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public Garlic()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicBlover
using Il2CppDummyDll;

[Token(Token = "0x2000180")]
public class GarlicBlover : Blover
{
	[Token(Token = "0x600074A")]
	[Address(RVA = "0x4B5170", Offset = "0x4B3D70", VA = "0x1804B5170", Slot = "40")]
	protected override void BlowZombie()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public GarlicBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicCabbage
using Il2CppDummyDll;

[Token(Token = "0x2000215")]
public class GarlicCabbage : Cabbage
{
	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x3347F0", Offset = "0x3333F0", VA = "0x1803347F0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public GarlicCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicCorn
using Il2CppDummyDll;

[Token(Token = "0x2000216")]
public class GarlicCorn : Cornpult
{
	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x334820", Offset = "0x333420", VA = "0x180334820", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x334810", Offset = "0x333410", VA = "0x180334810", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public GarlicCorn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicFume
using Il2CppDummyDll;

[Token(Token = "0x2000217")]
public class GarlicFume : FumeShroom
{
	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x334830", Offset = "0x333430", VA = "0x180334830", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x334890", Offset = "0x333490", VA = "0x180334890", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public GarlicFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicMelon
using Il2CppDummyDll;

[Token(Token = "0x2000218")]
public class GarlicMelon : Melonpult
{
	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x334A10", Offset = "0x333610", VA = "0x180334A10", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public GarlicMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicUltimateChomper
using Il2CppDummyDll;

[Token(Token = "0x2000181")]
public class GarlicUltimateChomper : UltimateChomper
{
	[Token(Token = "0x600074C")]
	[Address(RVA = "0x4B5330", Offset = "0x4B3F30", VA = "0x1804B5330", Slot = "44")]
	public override void AnimShoot()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x4B5480", Offset = "0x4B4080", VA = "0x1804B5480")]
	public GarlicUltimateChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GarlicUmbrella
using Il2CppDummyDll;

[Token(Token = "0x2000182")]
public class GarlicUmbrella : CornUmbrella
{
	[Token(Token = "0x600074E")]
	[Address(RVA = "0x4B5490", Offset = "0x4B4090", VA = "0x1804B5490", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public GarlicUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GatlingBlackFootball
using Il2CppDummyDll;

[Token(Token = "0x2000298")]
public class GatlingBlackFootball : GatlingFootballZombie
{
	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x35FF90", Offset = "0x35EB90", VA = "0x18035FF90", Slot = "55")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public GatlingBlackFootball()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GatlingFootballZombie
using Il2CppDummyDll;

[Token(Token = "0x2000299")]
public class GatlingFootballZombie : Zombie
{
	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x360340", Offset = "0x35EF40", VA = "0x180360340", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x3602D0", Offset = "0x35EED0", VA = "0x1803602D0", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x360130", Offset = "0x35ED30", VA = "0x180360130", Slot = "55")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x360360", Offset = "0x35EF60", VA = "0x180360360", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x3605A0", Offset = "0x35F1A0", VA = "0x1803605A0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public GatlingFootballZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GatlingPea
using Il2CppDummyDll;

[Token(Token = "0x2000219")]
public class GatlingPea : Shooter
{
	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x334A20", Offset = "0x333620", VA = "0x180334A20", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x334A70", Offset = "0x333670", VA = "0x180334A70", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public GatlingPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GetNearestEntity
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003C3")]
public class GetNearestEntity : MonoBehaviour
{
	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GetNearestEntity()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GiveFertilize
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200033B")]
public class GiveFertilize : MonoBehaviour
{
	[Token(Token = "0x4000AB5")]
	[FieldOffset(Offset = "0x20")]
	private int occurrences;

	[Token(Token = "0x4000AB6")]
	[FieldOffset(Offset = "0x24")]
	private Vector2 pos;

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x3C9240", Offset = "0x3C7E40", VA = "0x1803C9240")]
	private void AnimGive()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x3C94D0", Offset = "0x3C80D0", VA = "0x1803C94D0")]
	public static bool AvaliableToGive()
	{
		return default(bool);
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x3C9540", Offset = "0x3C8140", VA = "0x1803C9540")]
	public GiveFertilize()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GloomShroom
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200021A")]
public class GloomShroom : Shooter
{
	[Token(Token = "0x4000710")]
	[FieldOffset(Offset = "0x1C0")]
	protected GameObject center;

	[Token(Token = "0x4000711")]
	[FieldOffset(Offset = "0x1C8")]
	protected float range;

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x335080", Offset = "0x333C80", VA = "0x180335080", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x335360", Offset = "0x333F60", VA = "0x180335360", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x335110", Offset = "0x333D10", VA = "0x180335110", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "31")]
	protected override GameObject SearchBoss()
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x3352D0", Offset = "0x333ED0", VA = "0x1803352D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x334BD0", Offset = "0x3337D0", VA = "0x180334BD0", Slot = "42")]
	protected virtual void AttackZombie()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x333F20", Offset = "0x332B20", VA = "0x180333F20")]
	public GloomShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Glove
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200000D")]
public class Glove : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[FieldOffset(Offset = "0x0")]
	public static Glove Instance;

	[Token(Token = "0x400002A")]
	[FieldOffset(Offset = "0x20")]
	public bool isPickUp;

	[Token(Token = "0x400002B")]
	[FieldOffset(Offset = "0x28")]
	public GameObject defaultParent;

	[Token(Token = "0x400002C")]
	[FieldOffset(Offset = "0x30")]
	public float fullCD;

	[Token(Token = "0x400002D")]
	[FieldOffset(Offset = "0x34")]
	public float CD;

	[Token(Token = "0x400002E")]
	[FieldOffset(Offset = "0x38")]
	public bool avaliable;

	[Token(Token = "0x400002F")]
	[FieldOffset(Offset = "0x40")]
	private RectTransform r;

	[Token(Token = "0x4000030")]
	[FieldOffset(Offset = "0x48")]
	protected Mouse m;

	[Token(Token = "0x4000031")]
	[FieldOffset(Offset = "0x50")]
	public Sprite zombieGlove;

	[Token(Token = "0x4000032")]
	[FieldOffset(Offset = "0x58")]
	public Sprite plantGlove;

	[Token(Token = "0x4000033")]
	[FieldOffset(Offset = "0x60")]
	public bool isZombie;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x3124D0", Offset = "0x3110D0", VA = "0x1803124D0")]
	public void SwitchStatus()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x312010", Offset = "0x310C10", VA = "0x180312010")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x312420", Offset = "0x311020", VA = "0x180312420")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x3122B0", Offset = "0x310EB0", VA = "0x1803122B0")]
	public void PickUp()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x312350", Offset = "0x310F50", VA = "0x180312350")]
	public void PutDown()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x312230", Offset = "0x310E30", VA = "0x180312230")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x3122A0", Offset = "0x310EA0", VA = "0x1803122A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x312600", Offset = "0x311200", VA = "0x180312600")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x312070", Offset = "0x310C70", VA = "0x180312070")]
	private void CDUpdate()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x312970", Offset = "0x311570", VA = "0x180312970")]
	public Glove()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GlowMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200000E")]
public class GlowMgr : MonoBehaviour
{
	[Token(Token = "0x6000035")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GlowMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GoldHypnoDoom
using Il2CppDummyDll;

[Token(Token = "0x2000183")]
public class GoldHypnoDoom : Plant
{
	[Token(Token = "0x6000750")]
	[Address(RVA = "0x4B5BA0", Offset = "0x4B47A0", VA = "0x1804B5BA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x4B5740", Offset = "0x4B4340", VA = "0x1804B5740", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x4B5BC0", Offset = "0x4B47C0", VA = "0x1804B5BC0")]
	private void SummonZombie(ZombieType bossType)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public GoldHypnoDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GoldMagnet
using Il2CppDummyDll;

[Token(Token = "0x2000184")]
public class GoldMagnet : Plant
{
	[Token(Token = "0x4000665")]
	[FieldOffset(Offset = "0x1B8")]
	private int attrackCount;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x4B61A0", Offset = "0x4B4DA0", VA = "0x1804B61A0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x4B6140", Offset = "0x4B4D40", VA = "0x1804B6140", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x4B5F50", Offset = "0x4B4B50", VA = "0x1804B5F50")]
	private void AttrackOver()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x4B5ED0", Offset = "0x4B4AD0", VA = "0x1804B5ED0")]
	private void AnimAttrack()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x4B61C0", Offset = "0x4B4DC0", VA = "0x1804B61C0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x4B60D0", Offset = "0x4B4CD0", VA = "0x1804B60D0")]
	private bool Attrackable(Bullet bullet)
	{
		return default(bool);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public GoldMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GoldSunflower
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x20001EB")]
public class GoldSunflower : Plant
{
	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private sealed class <ContinueProduce>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F8")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F9")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FA")]
		[FieldOffset(Offset = "0x20")]
		public GoldSunflower <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <ContinueProduce>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x4E0800", Offset = "0x4DF400", VA = "0x1804E0800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x4E09A0", Offset = "0x4DF5A0", VA = "0x1804E09A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x4D71F0", Offset = "0x4D5DF0", VA = "0x1804D71F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x4D71B0", Offset = "0x4D5DB0", VA = "0x1804D71B0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x4D7280", Offset = "0x4D5E80", VA = "0x1804D7280", Slot = "25")]
	public override bool SuperSkill()
	{
		return default(bool);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x4D7210", Offset = "0x4D5E10", VA = "0x1804D7210")]
	[IteratorStateMachine(typeof(<ContinueProduce>d__3))]
	private IEnumerator ContinueProduce()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public GoldSunflower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GoldThreeTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000185")]
public class GoldThreeTorch : TorchWood
{
	[Token(Token = "0x600075B")]
	[Address(RVA = "0x4B6570", Offset = "0x4B5170", VA = "0x1804B6570", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x4B63B0", Offset = "0x4B4FB0", VA = "0x1804B63B0")]
	private void FireBullet(Bullet bullet)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x4B6830", Offset = "0x4B5430", VA = "0x1804B6830")]
	private void SetBullet(int theRow, BulletType theBulletType, float theDamage, float speed, int theMoveWay, float offset = 0f)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public GoldThreeTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Gravebuster
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000186")]
public class Gravebuster : Plant
{
	[Token(Token = "0x2000187")]
	[CompilerGenerated]
	private sealed class <Busting>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000667")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000668")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000669")]
		[FieldOffset(Offset = "0x20")]
		public Gravebuster <>4__this;

		[Token(Token = "0x400066A")]
		[FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Busting>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x4BDB90", Offset = "0x4BC790", VA = "0x1804BDB90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x4BE0D0", Offset = "0x4BCCD0", VA = "0x1804BE0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000666")]
	[FieldOffset(Offset = "0x1B8")]
	private Coroutine bust;

	[Token(Token = "0x1700003D")]
	private GridItem GridItem_
	{
		[Token(Token = "0x6000761")]
		[Address(RVA = "0x4B6D50", Offset = "0x4B5950", VA = "0x1804B6D50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x4B6CF0", Offset = "0x4B58F0", VA = "0x1804B6CF0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x4B6970", Offset = "0x4B5570", VA = "0x1804B6970")]
	private void AnimBustUp()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x4B6AA0", Offset = "0x4B56A0", VA = "0x1804B6AA0")]
	[IteratorStateMachine(typeof(<Busting>d__5))]
	private IEnumerator Busting()
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x4B6B10", Offset = "0x4B5710", VA = "0x1804B6B10", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x4B6C10", Offset = "0x4B5810", VA = "0x1804B6C10", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Gravebuster()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GridItem
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200010C")]
public class GridItem : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <MoveAndSummonZombie>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000443")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000444")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000445")]
		[FieldOffset(Offset = "0x20")]
		public GridItem <>4__this;

		[Token(Token = "0x4000446")]
		[FieldOffset(Offset = "0x28")]
		private bool <ulti>5__2;

		[Token(Token = "0x4000447")]
		[FieldOffset(Offset = "0x2C")]
		private ZombieType <zombieType>5__3;

		[Token(Token = "0x4000448")]
		[FieldOffset(Offset = "0x30")]
		private GameObject <zombie>5__4;

		[Token(Token = "0x4000449")]
		[FieldOffset(Offset = "0x38")]
		private float <y>5__5;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveAndSummonZombie>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x48B400", Offset = "0x48A000", VA = "0x18048B400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x48BC40", Offset = "0x48A840", VA = "0x18048BC40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000438")]
	[FieldOffset(Offset = "0x20")]
	public GridItemType theItemType;

	[Token(Token = "0x4000439")]
	[FieldOffset(Offset = "0x24")]
	public int theItemRow;

	[Token(Token = "0x400043A")]
	[FieldOffset(Offset = "0x28")]
	public int theItemColumn;

	[Token(Token = "0x400043B")]
	[FieldOffset(Offset = "0x30")]
	public Board board;

	[Token(Token = "0x400043C")]
	[FieldOffset(Offset = "0x38")]
	public Sprite crater_fading;

	[Token(Token = "0x400043D")]
	[FieldOffset(Offset = "0x40")]
	private float existTime;

	[Token(Token = "0x400043E")]
	[FieldOffset(Offset = "0x48")]
	private Sprite crater;

	[Token(Token = "0x400043F")]
	[FieldOffset(Offset = "0x50")]
	private SpriteRenderer r;

	[Token(Token = "0x4000440")]
	[FieldOffset(Offset = "0x58")]
	public PlantType thePlantType;

	[Token(Token = "0x4000441")]
	[FieldOffset(Offset = "0x5C")]
	public ZombieType theZombieType;

	[Token(Token = "0x4000442")]
	[FieldOffset(Offset = "0x60")]
	public bool summing;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x47E740", Offset = "0x47D340", VA = "0x18047E740")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x47FDF0", Offset = "0x47E9F0", VA = "0x18047FDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x47FB60", Offset = "0x47E760", VA = "0x18047FB60")]
	public void SetZombie()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x47ECB0", Offset = "0x47D8B0", VA = "0x18047ECB0")]
	[IteratorStateMachine(typeof(<MoveAndSummonZombie>d__14))]
	private IEnumerator MoveAndSummonZombie()
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x47EAA0", Offset = "0x47D6A0", VA = "0x18047EAA0")]
	public void Hitted()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x47ED20", Offset = "0x47D920", VA = "0x18047ED20")]
	public void OnHitted()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x47FFE0", Offset = "0x47EBE0", VA = "0x18047FFE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x47E800", Offset = "0x47D400", VA = "0x18047E800")]
	private void CraterUpdate()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x47E890", Offset = "0x47D490", VA = "0x18047E890")]
	public void Die()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x47F2A0", Offset = "0x47DEA0", VA = "0x18047F2A0")]
	public static GridItem SetGridItem(int theColumn, int theRow, GridItemType theType)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x47F900", Offset = "0x47E500", VA = "0x18047F900")]
	private static void SetLayer(GridItem gridItem, int theRow, GridItemType type, int theColumn)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x47E5D0", Offset = "0x47D1D0", VA = "0x18047E5D0")]
	private static void AddToList(Board board, GridItem item)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x4800A0", Offset = "0x47ECA0", VA = "0x1804800A0")]
	public GridItem()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GridItemType
using Il2CppDummyDll;

[Token(Token = "0x200010E")]
public enum GridItemType
{
	[Token(Token = "0x400044B")]
	CraterDay = 0,
	[Token(Token = "0x400044C")]
	CraterNight = 1,
	[Token(Token = "0x400044D")]
	Ladder = 3,
	[Token(Token = "0x400044E")]
	ScaryPot = 4,
	[Token(Token = "0x400044F")]
	ScaryPot_plant = 5,
	[Token(Token = "0x4000450")]
	ScaryPot_zombie = 6,
	[Token(Token = "0x4000451")]
	Grave = 7
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GridLadder
using Il2CppDummyDll;

[Token(Token = "0x200010F")]
public class GridLadder : GridItem
{
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x4800A0", Offset = "0x47ECA0", VA = "0x1804800A0")]
	public GridLadder()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GridManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000338")]
public class GridManager : MonoBehaviour
{
	[Token(Token = "0x4000AA7")]
	[FieldOffset(Offset = "0x20")]
	public Vector2 spacing;

	[Token(Token = "0x4000AA8")]
	[FieldOffset(Offset = "0x28")]
	public int theNumberOfColumn;

	[Token(Token = "0x4000AA9")]
	[FieldOffset(Offset = "0x2C")]
	public bool allowMoving;

	[Token(Token = "0x4000AAA")]
	[FieldOffset(Offset = "0x2D")]
	public bool freezingX;

	[Token(Token = "0x4000AAB")]
	[FieldOffset(Offset = "0x2E")]
	public bool freezingY;

	[Token(Token = "0x4000AAC")]
	[FieldOffset(Offset = "0x30")]
	public float minY;

	[Token(Token = "0x4000AAD")]
	[FieldOffset(Offset = "0x34")]
	public float maxY;

	[Token(Token = "0x4000AAE")]
	[FieldOffset(Offset = "0x38")]
	private Vector2 startPosition;

	[Token(Token = "0x4000AAF")]
	[FieldOffset(Offset = "0x40")]
	private bool moving;

	[Token(Token = "0x4000AB0")]
	[FieldOffset(Offset = "0x44")]
	private float offsetY;

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x3C9560", Offset = "0x3C8160", VA = "0x1803C9560")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x3C99C0", Offset = "0x3C85C0", VA = "0x1803C99C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x3C9710", Offset = "0x3C8310", VA = "0x1803C9710")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public GridManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// GridType
using Il2CppDummyDll;

[Token(Token = "0x2000314")]
public enum GridType
{
	[Token(Token = "0x4000998")]
	Grass,
	[Token(Token = "0x4000999")]
	Water,
	[Token(Token = "0x400099A")]
	Dirt
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Hamburger
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200021B")]
public class Hamburger : Shooter
{
	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <SunBright>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000715")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000716")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000717")]
		[FieldOffset(Offset = "0x20")]
		public Hamburger <>4__this;

		[Token(Token = "0x4000718")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x348030", Offset = "0x346C30", VA = "0x180348030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x3481A0", Offset = "0x346DA0", VA = "0x1803481A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[FieldOffset(Offset = "0x1C0")]
	public GameObject r1;

	[Token(Token = "0x4000713")]
	[FieldOffset(Offset = "0x1C8")]
	public GameObject r2;

	[Token(Token = "0x4000714")]
	[FieldOffset(Offset = "0x1D0")]
	public GameObject r3;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x335620", Offset = "0x334220", VA = "0x180335620", Slot = "35")]
	public override void InitPlant()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x3355D0", Offset = "0x3341D0", VA = "0x1803355D0", Slot = "34")]
	public override int GetMaxHealth(PlantType thePlantType)
	{
		return default(int);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x3353A0", Offset = "0x333FA0", VA = "0x1803353A0")]
	public bool AddStage(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x335960", Offset = "0x334560", VA = "0x180335960", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x336210", Offset = "0x334E10", VA = "0x180336210", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x335590", Offset = "0x334190", VA = "0x180335590")]
	private void AnimShoot3()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x3355B0", Offset = "0x3341B0", VA = "0x1803355B0")]
	private void AnimShoot4()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x3362A0", Offset = "0x334EA0", VA = "0x1803362A0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x335850", Offset = "0x334450", VA = "0x180335850", Slot = "20")]
	public override void ProducerUpdate()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x336230", Offset = "0x334E30", VA = "0x180336230")]
	[IteratorStateMachine(typeof(<SunBright>d__12))]
	protected IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x335770", Offset = "0x334370", VA = "0x180335770")]
	private void ProduceSun()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public Hamburger()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HammerMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200000F")]
public class HammerMgr : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[FieldOffset(Offset = "0x0")]
	public static HammerMgr Instance;

	[Token(Token = "0x4000035")]
	[FieldOffset(Offset = "0x20")]
	public PlantType theHammerEffect;

	[Token(Token = "0x4000036")]
	[FieldOffset(Offset = "0x24")]
	public bool isPickUp;

	[Token(Token = "0x4000037")]
	[FieldOffset(Offset = "0x28")]
	public GameObject defaultParent;

	[Token(Token = "0x4000038")]
	[FieldOffset(Offset = "0x30")]
	private float fullCD;

	[Token(Token = "0x4000039")]
	[FieldOffset(Offset = "0x34")]
	public float CD;

	[Token(Token = "0x400003A")]
	[FieldOffset(Offset = "0x38")]
	public bool avaliable;

	[Token(Token = "0x400003B")]
	[FieldOffset(Offset = "0x40")]
	private RectTransform r;

	[Token(Token = "0x400003C")]
	[FieldOffset(Offset = "0x48")]
	protected Mouse m;

	[Token(Token = "0x400003D")]
	[FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x312CF0", Offset = "0x3118F0", VA = "0x180312CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x313390", Offset = "0x311F90", VA = "0x180313390")]
	public bool SwitchType(PlantType plantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x313470", Offset = "0x312070", VA = "0x180313470")]
	private void SwitchUpdate()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x312F90", Offset = "0x311B90", VA = "0x180312F90")]
	public void EffectZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x3132A0", Offset = "0x311EA0", VA = "0x1803132A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x313130", Offset = "0x311D30", VA = "0x180313130")]
	public void PickUp()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x3131D0", Offset = "0x311DD0", VA = "0x1803131D0")]
	public void PutDown()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x3130C0", Offset = "0x311CC0", VA = "0x1803130C0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x3122A0", Offset = "0x310EA0", VA = "0x1803122A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x313600", Offset = "0x312200", VA = "0x180313600")]
	private void Update()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x312D50", Offset = "0x311950", VA = "0x180312D50")]
	private void CDUpdate()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x312F00", Offset = "0x311B00", VA = "0x180312F00")]
	public void CrushZombie()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x312990", Offset = "0x311590", VA = "0x180312990")]
	private void AnimCrush()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x313AF0", Offset = "0x3126F0", VA = "0x180313AF0")]
	public HammerMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Helmet
using Il2CppDummyDll;

[Token(Token = "0x2000105")]
public class Helmet : Bucket
{
	[Token(Token = "0x6000488")]
	[Address(RVA = "0x4800B0", Offset = "0x47ECB0", VA = "0x1804800B0", Slot = "7")]
	public override void Use()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x47BDF0", Offset = "0x47A9F0", VA = "0x18047BDF0")]
	public Helmet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HelmetFume
using Il2CppDummyDll;

[Token(Token = "0x200021D")]
public class HelmetFume : FumeShroom
{
	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x336340", Offset = "0x334F40", VA = "0x180336340", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x336380", Offset = "0x334F80", VA = "0x180336380", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public HelmetFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoBlover
using Il2CppDummyDll;

[Token(Token = "0x2000188")]
public class HypnoBlover : Blover
{
	[Token(Token = "0x400066B")]
	[FieldOffset(Offset = "0x1B8")]
	private readonly float dragSpeed;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x4B6E50", Offset = "0x4B5A50", VA = "0x1804B6E50", Slot = "39")]
	protected override void AnimBlow()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x4B7470", Offset = "0x4B6070", VA = "0x1804B7470", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x4B6F70", Offset = "0x4B5B70", VA = "0x1804B6F70")]
	private void DragZombieUpdate()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x4B74A0", Offset = "0x4B60A0", VA = "0x1804B74A0")]
	public HypnoBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoDoom
using Il2CppDummyDll;

[Token(Token = "0x2000142")]
public class HypnoDoom : Plant
{
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public HypnoDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoMagnet
using Il2CppDummyDll;

[Token(Token = "0x2000189")]
public class HypnoMagnet : Plant
{
	[Token(Token = "0x400066C")]
	[FieldOffset(Offset = "0x1B8")]
	public BucketType itemType;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x4B78D0", Offset = "0x4B64D0", VA = "0x1804B78D0")]
	public void Summon(BucketType type)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x4B7940", Offset = "0x4B6540", VA = "0x1804B7940", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x4B74C0", Offset = "0x4B60C0", VA = "0x1804B74C0")]
	private void AnimSummon()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public HypnoMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoNut
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200018A")]
public class HypnoNut : WallNut
{
	[Token(Token = "0x400066D")]
	[FieldOffset(Offset = "0x1B8")]
	private int[] hyponos;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x4B7B30", Offset = "0x4B6730", VA = "0x1804B7B30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x4B7A30", Offset = "0x4B6630", VA = "0x1804B7A30", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x4B7B50", Offset = "0x4B6750", VA = "0x1804B7B50")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x4B7E20", Offset = "0x4B6A20", VA = "0x1804B7E20")]
	public HypnoNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoPumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200018B")]
public class HypnoPumpkin : Pumpkin
{
	[Token(Token = "0x400066E")]
	[FieldOffset(Offset = "0x1B8")]
	public GameObject[] mushes;

	[Token(Token = "0x400066F")]
	[FieldOffset(Offset = "0x1C0")]
	private LayerMask m_layer;

	[Token(Token = "0x4000670")]
	[FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private Zombie m_zombie;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x4B7E80", Offset = "0x4B6A80", VA = "0x1804B7E80", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x4B7F30", Offset = "0x4B6B30", VA = "0x1804B7F30", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x4B8300", Offset = "0x4B6F00", VA = "0x1804B8300", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x4B88C0", Offset = "0x4B74C0", VA = "0x1804B88C0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x4B8800", Offset = "0x4B7400", VA = "0x1804B8800", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x4B8240", Offset = "0x4B6E40", VA = "0x1804B8240", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x4B8340", Offset = "0x4B6F40", VA = "0x1804B8340", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x4B89E0", Offset = "0x4B75E0", VA = "0x1804B89E0")]
	public HypnoPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HypnoQueen
using Il2CppDummyDll;

[Token(Token = "0x200018C")]
public class HypnoQueen : HyponoEmperor
{
	[Token(Token = "0x6000780")]
	[Address(RVA = "0x4B8E10", Offset = "0x4B7A10", VA = "0x1804B8E10", Slot = "40")]
	protected override void Summon()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x4B8A40", Offset = "0x4B7640", VA = "0x1804B8A40", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x4B8BE0", Offset = "0x4B77E0", VA = "0x1804B8BE0", Slot = "39")]
	protected override void SummonUpdate()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x4B90F0", Offset = "0x4B7CF0", VA = "0x1804B90F0")]
	public HypnoQueen()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HyponoEmperor
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200018D")]
public class HyponoEmperor : Plant
{
	[Token(Token = "0x4000671")]
	[FieldOffset(Offset = "0x1B8")]
	public int restHealth;

	[Token(Token = "0x4000672")]
	[FieldOffset(Offset = "0x1BC")]
	[SerializeField]
	protected float summonZombieTime;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x4B9300", Offset = "0x4B7F00", VA = "0x1804B9300", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x4B92B0", Offset = "0x4B7EB0", VA = "0x1804B92B0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x4B9AB0", Offset = "0x4B86B0", VA = "0x1804B9AB0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x4B9790", Offset = "0x4B8390", VA = "0x1804B9790", Slot = "39")]
	protected virtual void SummonUpdate()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x4B98D0", Offset = "0x4B84D0", VA = "0x1804B98D0", Slot = "40")]
	protected virtual void Summon()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x4B99F0", Offset = "0x4B85F0", VA = "0x1804B99F0")]
	private void Summon_skin()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x4B9400", Offset = "0x4B8000", VA = "0x1804B9400")]
	private void SummonNormal()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x4B95C0", Offset = "0x4B81C0", VA = "0x1804B95C0")]
	private void SummonStronger()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x4B9110", Offset = "0x4B7D10", VA = "0x1804B9110", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x4B90F0", Offset = "0x4B7CF0", VA = "0x1804B90F0")]
	public HyponoEmperor()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// HyponoFume
using Il2CppDummyDll;

[Token(Token = "0x200021E")]
public class HyponoFume : FumeShroom
{
	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x336500", Offset = "0x335100", VA = "0x180336500", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x336670", Offset = "0x335270", VA = "0x180336670", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x336500", Offset = "0x335100", VA = "0x180336500")]
	private void TrySetMindControl(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public HyponoFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Ice
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001ED")]
public class Ice : MonoBehaviour
{
	[Token(Token = "0x600096C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Ice()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceBean
using Il2CppDummyDll;

[Token(Token = "0x200018E")]
public class IceBean : Plant
{
	[Token(Token = "0x600078E")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public IceBean()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceCaltrop
using Il2CppDummyDll;

[Token(Token = "0x200018F")]
public class IceCaltrop : Caltrop
{
	[Token(Token = "0x600078F")]
	[Address(RVA = "0x4B9B50", Offset = "0x4B8750", VA = "0x1804B9B50", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public IceCaltrop()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceCannon
using Il2CppDummyDll;

[Token(Token = "0x2000190")]
public class IceCannon : CobCannon
{
	[Token(Token = "0x6000791")]
	[Address(RVA = "0x4B9D90", Offset = "0x4B8990", VA = "0x1804B9D90", Slot = "40")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public IceCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceCattail
using Il2CppDummyDll;

[Token(Token = "0x200021F")]
public class IceCattail : CattailPlant
{
	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x337FB0", Offset = "0x336BB0", VA = "0x180337FB0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IceCattail()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceCherry
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000143")]
public class IceCherry : Plant
{
	[Token(Token = "0x4000609")]
	[FieldOffset(Offset = "0x1B8")]
	private TextMeshPro energyText;

	[Token(Token = "0x400060A")]
	[FieldOffset(Offset = "0x1C0")]
	private TextMeshPro energyTextShadow;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x48D890", Offset = "0x48C490", VA = "0x18048D890", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x48DB00", Offset = "0x48C700", VA = "0x18048DB00")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x48D910", Offset = "0x48C510", VA = "0x18048D910", Slot = "10")]
	public override GameObject InitText()
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x48DE50", Offset = "0x48CA50", VA = "0x18048DE50", Slot = "11")]
	public override void UpdateText()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public IceCherry()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceDoom
using Il2CppDummyDll;

[Token(Token = "0x2000144")]
public class IceDoom : DoomShroom
{
	[Token(Token = "0x6000603")]
	[Address(RVA = "0x48DF40", Offset = "0x48CB40", VA = "0x18048DF40", Slot = "39")]
	public override void AnimExplode()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public IceDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceDoomFume
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000220")]
public class IceDoomFume : Shooter
{
	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x338100", Offset = "0x336D00", VA = "0x180338100", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x338350", Offset = "0x336F50", VA = "0x180338350", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x338150", Offset = "0x336D50", VA = "0x180338150", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IceDoomFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceDoomGloom
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000221")]
public class IceDoomGloom : IceGloom
{
	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <AttackZombie2>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071A")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071B")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071C")]
		[FieldOffset(Offset = "0x20")]
		public Vector2[] vectors;

		[Token(Token = "0x400071D")]
		[FieldOffset(Offset = "0x28")]
		public IceDoomGloom <>4__this;

		[Token(Token = "0x400071E")]
		[FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <AttackZombie2>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x347D60", Offset = "0x346960", VA = "0x180347D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x347FF0", Offset = "0x346BF0", VA = "0x180347FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000719")]
	[FieldOffset(Offset = "0x1D0")]
	private int power;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x338500", Offset = "0x337100", VA = "0x180338500", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x3386E0", Offset = "0x3372E0", VA = "0x1803386E0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x338730", Offset = "0x337330", VA = "0x180338730", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x338470", Offset = "0x337070", VA = "0x180338470")]
	[IteratorStateMachine(typeof(<AttackZombie2>d__4))]
	private IEnumerator AttackZombie2(Vector2[] vectors)
	{
		return null;
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x338590", Offset = "0x337190", VA = "0x180338590", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x338910", Offset = "0x337510", VA = "0x180338910", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x333F20", Offset = "0x332B20", VA = "0x180333F20")]
	public IceDoomGloom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceExplodeControl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000006")]
public class IceExplodeControl : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[FieldOffset(Offset = "0x20")]
	private SpriteRenderer r;

	[Token(Token = "0x400000C")]
	[FieldOffset(Offset = "0x28")]
	private Color color;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x315940", Offset = "0x314540", VA = "0x180315940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x3158F0", Offset = "0x3144F0", VA = "0x1803158F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public IceExplodeControl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceExplodeEvent
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000101")]
public class IceExplodeEvent : MonoBehaviour
{
	[Token(Token = "0x6000475")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public IceExplodeEvent()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceFumeShroom
using Il2CppDummyDll;

[Token(Token = "0x2000223")]
public class IceFumeShroom : FumeShroom
{
	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x338AA0", Offset = "0x3376A0", VA = "0x180338AA0", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x338AF0", Offset = "0x3376F0", VA = "0x180338AF0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IceFumeShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceGloom
using Il2CppDummyDll;

[Token(Token = "0x2000224")]
public class IceGloom : GloomShroom
{
	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x338DA0", Offset = "0x3379A0", VA = "0x180338DA0", Slot = "42")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x339140", Offset = "0x337D40", VA = "0x180339140", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x333F20", Offset = "0x332B20", VA = "0x180333F20")]
	public IceGloom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceHypno
using Il2CppDummyDll;

[Token(Token = "0x2000191")]
public class IceHypno : Plant
{
	[Token(Token = "0x6000793")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public IceHypno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IcePuff
using Il2CppDummyDll;

[Token(Token = "0x2000225")]
public class IcePuff : PeaSmallPuff
{
	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x3391D0", Offset = "0x337DD0", VA = "0x1803391D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IcePuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceRoad
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000110")]
public class IceRoad : MonoBehaviour
{
	[Token(Token = "0x4000452")]
	[FieldOffset(Offset = "0x20")]
	public int theIceRoadRow;

	[Token(Token = "0x4000453")]
	[FieldOffset(Offset = "0x28")]
	private GameObject iceCap;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x480E10", Offset = "0x47FA10", VA = "0x180480E10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x480E60", Offset = "0x47FA60", VA = "0x180480E60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public IceRoad()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceScaredyShroom
using Il2CppDummyDll;

[Token(Token = "0x2000226")]
public class IceScaredyShroom : ScaredyShroom
{
	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x339740", Offset = "0x338340", VA = "0x180339740", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x339320", Offset = "0x337F20", VA = "0x180339320")]
	private void AnimFreeze()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IceScaredyShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceShroom
using Il2CppDummyDll;

[Token(Token = "0x2000192")]
public class IceShroom : Plant
{
	[Token(Token = "0x4000673")]
	[FieldOffset(Offset = "0x1B8")]
	private float ExplodeCountDown;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x4BE670", Offset = "0x4BD270", VA = "0x1804BE670", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x4BE720", Offset = "0x4BD320", VA = "0x1804BE720")]
	public IceShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceSpikeRock
using Il2CppDummyDll;

[Token(Token = "0x2000193")]
public class IceSpikeRock : SpikeRock
{
	[Token(Token = "0x6000796")]
	[Address(RVA = "0x4BE740", Offset = "0x4BD340", VA = "0x1804BE740", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public IceSpikeRock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IceTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000194")]
public class IceTorch : TorchWood
{
	[Token(Token = "0x6000798")]
	[Address(RVA = "0x4BE980", Offset = "0x4BD580", VA = "0x1804BE980", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x4BECF0", Offset = "0x4BD8F0", VA = "0x1804BECF0")]
	private void TurnAtoB(Bullet bullet, BulletType newBulletType, int damage)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public IceTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IdleState
using Il2CppDummyDll;

[Token(Token = "0x2000086")]
public class IdleState
{
	[Token(Token = "0x600024A")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public IdleState()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IFVIronPuff
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000227")]
public class IFVIronPuff : IronPuff
{
	[Token(Token = "0x400071F")]
	[FieldOffset(Offset = "0x1C0")]
	private float sniperTimer;

	[Token(Token = "0x4000720")]
	[FieldOffset(Offset = "0x1C4")]
	private float pultTimer;

	[Token(Token = "0x4000721")]
	[FieldOffset(Offset = "0x1C8")]
	public Transform shoot_pult;

	[Token(Token = "0x4000722")]
	[FieldOffset(Offset = "0x1D0")]
	public SortingGroup heart;

	[Token(Token = "0x4000723")]
	[FieldOffset(Offset = "0x1D8")]
	private Transform heartTransform;

	[Token(Token = "0x4000724")]
	[FieldOffset(Offset = "0x1E0")]
	public Transform pult;

	[Token(Token = "0x4000725")]
	[FieldOffset(Offset = "0x1E8")]
	private Zombie targetZombie2;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x336AA0", Offset = "0x3356A0", VA = "0x180336AA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x337420", Offset = "0x336020", VA = "0x180337420", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x337530", Offset = "0x336130", VA = "0x180337530", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x336920", Offset = "0x335520", VA = "0x180336920")]
	private void AnimShoot3()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x337BE0", Offset = "0x3367E0", VA = "0x180337BE0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x337100", Offset = "0x335D00", VA = "0x180337100")]
	private void PultUpdate()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x3379C0", Offset = "0x3365C0", VA = "0x1803379C0")]
	private Zombie TryGetFlyingZombie()
	{
		return null;
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x336B50", Offset = "0x335750", VA = "0x180336B50")]
	private bool CheckAir(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x336D70", Offset = "0x335970", VA = "0x180336D70")]
	private void ExtraShootUpdate()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x336F20", Offset = "0x335B20", VA = "0x180336F20")]
	private bool PultSearch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x337790", Offset = "0x336390", VA = "0x180337790")]
	private Zombie SniperSearch()
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x336C80", Offset = "0x335880", VA = "0x180336C80")]
	private bool CheckZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IFVIronPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IFVPumpkin
using Il2CppDummyDll;

[Token(Token = "0x2000195")]
public class IFVPumpkin : Pumpkin
{
	[Token(Token = "0x600079B")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public IFVPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Imitater
using Il2CppDummyDll;

[Token(Token = "0x2000196")]
public class Imitater : Present
{
	[Token(Token = "0x600079C")]
	[Address(RVA = "0x4B5BA0", Offset = "0x4B47A0", VA = "0x1804B5BA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x4BEE40", Offset = "0x4BDA40", VA = "0x1804BEE40")]
	private void AnimExplode()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x4BF290", Offset = "0x4BDE90", VA = "0x1804BF290", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Imitater()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ImpZombie
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002B1")]
public class ImpZombie : Zombie
{
	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <EnableSprites>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F5")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F6")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F7")]
		[FieldOffset(Offset = "0x20")]
		public ImpZombie <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <EnableSprites>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x382EA0", Offset = "0x381AA0", VA = "0x180382EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x3830B0", Offset = "0x381CB0", VA = "0x1803830B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[CompilerGenerated]
	private sealed class <IAdjustPosition>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F8")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F9")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FA")]
		[FieldOffset(Offset = "0x20")]
		public ImpZombie <>4__this;

		[Token(Token = "0x40007FB")]
		[FieldOffset(Offset = "0x28")]
		private float <currentY>5__2;

		[Token(Token = "0x40007FC")]
		[FieldOffset(Offset = "0x2C")]
		private float <targetY>5__3;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <IAdjustPosition>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x3830F0", Offset = "0x381CF0", VA = "0x1803830F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x383420", Offset = "0x382020", VA = "0x180383420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F1")]
	[FieldOffset(Offset = "0x220")]
	private float Vy;

	[Token(Token = "0x40007F2")]
	[FieldOffset(Offset = "0x228")]
	private Transform realShadow;

	[Token(Token = "0x40007F3")]
	[FieldOffset(Offset = "0x230")]
	private float Vx;

	[Token(Token = "0x40007F4")]
	[FieldOffset(Offset = "0x238")]
	public Coroutine coroutine;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x37ACB0", Offset = "0x3798B0", VA = "0x18037ACB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x35F0F0", Offset = "0x35DCF0", VA = "0x18035F0F0", Slot = "51")]
	public override void BeSmall(float scale = 0.5f)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x37B470", Offset = "0x37A070", VA = "0x18037B470", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x37AEA0", Offset = "0x379AA0", VA = "0x18037AEA0")]
	[IteratorStateMachine(typeof(<EnableSprites>d__7))]
	private IEnumerator EnableSprites()
	{
		return null;
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x37AD80", Offset = "0x379980", VA = "0x18037AD80", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x37B390", Offset = "0x379F90", VA = "0x18037B390")]
	private void StartLand()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x37AF10", Offset = "0x379B10", VA = "0x18037AF10")]
	[IteratorStateMachine(typeof(<IAdjustPosition>d__10))]
	private IEnumerator IAdjustPosition()
	{
		return null;
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x37AF80", Offset = "0x379B80", VA = "0x18037AF80")]
	private void Land()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x37AE30", Offset = "0x379A30", VA = "0x18037AE30", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x37AFF0", Offset = "0x379BF0", VA = "0x18037AFF0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x37B660", Offset = "0x37A260", VA = "0x18037B660")]
	public void Thrown()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x37B060", Offset = "0x379C60", VA = "0x18037B060", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x37B360", Offset = "0x379F60", VA = "0x18037B360", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x37AD60", Offset = "0x379960", VA = "0x18037AD60", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x37B6E0", Offset = "0x37A2E0", VA = "0x18037B6E0")]
	public ImpZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// InGameBtn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000010")]
public class InGameBtn : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x400003F")]
	[FieldOffset(Offset = "0x28")]
	public int buttonNumber;

	[Token(Token = "0x4000040")]
	[FieldOffset(Offset = "0x30")]
	public GameObject thisMenu;

	[Token(Token = "0x4000041")]
	[FieldOffset(Offset = "0x38")]
	public Vector3 originPosition;

	[Token(Token = "0x4000042")]
	[FieldOffset(Offset = "0x48")]
	private Sprite originSprite;

	[Token(Token = "0x4000043")]
	[FieldOffset(Offset = "0x50")]
	private Image image;

	[Token(Token = "0x4000044")]
	[FieldOffset(Offset = "0x58")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000045")]
	[FieldOffset(Offset = "0x60")]
	private bool existItemOnMouse;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x3159B0", Offset = "0x3145B0", VA = "0x1803159B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x3176B0", Offset = "0x3162B0", VA = "0x1803176B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x3163C0", Offset = "0x314FC0", VA = "0x1803163C0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x3164B0", Offset = "0x3150B0", VA = "0x1803164B0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x316520", Offset = "0x315120", VA = "0x180316520")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x3162A0", Offset = "0x314EA0", VA = "0x1803162A0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x317780", Offset = "0x316380", VA = "0x180317780")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x316F60", Offset = "0x315B60", VA = "0x180316F60")]
	private void ShowCards()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x317630", Offset = "0x316230", VA = "0x180317630")]
	private void SpeedTrigger()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x315DA0", Offset = "0x3149A0", VA = "0x180315DA0")]
	private void GetLastCards()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x315A50", Offset = "0x314650", VA = "0x180315A50")]
	private void ChangeScene()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x315B60", Offset = "0x314760", VA = "0x180315B60")]
	private void ChangeStrings(SceneType sceneType)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public InGameBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// InGameText
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000111")]
public class InGameText : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[FieldOffset(Offset = "0x0")]
	private static InGameText _instance;

	[Token(Token = "0x4000455")]
	[FieldOffset(Offset = "0x20")]
	private bool used;

	[Token(Token = "0x4000456")]
	[FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000457")]
	[FieldOffset(Offset = "0x28")]
	public GameObject textHead;

	[Token(Token = "0x4000458")]
	[FieldOffset(Offset = "0x30")]
	public List<TextMeshProUGUI> textMeshes;

	[Token(Token = "0x17000016")]
	public static InGameText Instance
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x481240", Offset = "0x47FE40", VA = "0x180481240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x480F50", Offset = "0x47FB50", VA = "0x180480F50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x481150", Offset = "0x47FD50", VA = "0x180481150")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x481110", Offset = "0x47FD10", VA = "0x180481110")]
	public void TimeOver()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x480FA0", Offset = "0x47FBA0", VA = "0x180480FA0")]
	public void ShowText(string text, float time, bool cover = false)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x4811C0", Offset = "0x47FDC0", VA = "0x1804811C0")]
	public InGameText()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// InGameUI
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000013")]
public class InGameUI : BaseMenu
{
	[Token(Token = "0x2000015")]
	[CompilerGenerated]
	private sealed class <MoveCard>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000070")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000071")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000072")]
		[FieldOffset(Offset = "0x20")]
		public GameObject card;

		[Token(Token = "0x4000073")]
		[FieldOffset(Offset = "0x28")]
		public bool quick;

		[Token(Token = "0x4000074")]
		[FieldOffset(Offset = "0x2C")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000075")]
		[FieldOffset(Offset = "0x38")]
		private Vector3 <target>5__3;

		[Token(Token = "0x4000076")]
		[FieldOffset(Offset = "0x44")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x4000077")]
		[FieldOffset(Offset = "0x48")]
		private float <duration>5__5;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveCard>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x31D7B0", Offset = "0x31C3B0", VA = "0x18031D7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x31D9A0", Offset = "0x31C5A0", VA = "0x18031D9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000048")]
	[FieldOffset(Offset = "0x0")]
	public static InGameUI Instance;

	[Token(Token = "0x4000049")]
	[FieldOffset(Offset = "0x30")]
	public GameObject[] cardOnBank;

	[Token(Token = "0x400004A")]
	[FieldOffset(Offset = "0x38")]
	public GameObject[] seed;

	[Token(Token = "0x400004B")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI sun;

	[Token(Token = "0x400004C")]
	[FieldOffset(Offset = "0x48")]
	public string sun2;

	[Token(Token = "0x400004D")]
	[FieldOffset(Offset = "0x50")]
	public GameObject ShovelBank;

	[Token(Token = "0x400004E")]
	[FieldOffset(Offset = "0x58")]
	public GameObject Bottom;

	[Token(Token = "0x400004F")]
	[FieldOffset(Offset = "0x60")]
	public GameObject SeedBank;

	[Token(Token = "0x4000050")]
	[FieldOffset(Offset = "0x68")]
	public GameObject LevProgress;

	[Token(Token = "0x4000051")]
	[FieldOffset(Offset = "0x70")]
	public GameObject LevelName1;

	[Token(Token = "0x4000052")]
	[FieldOffset(Offset = "0x78")]
	public GameObject LevelName2;

	[Token(Token = "0x4000053")]
	[FieldOffset(Offset = "0x80")]
	public GameObject LevelName3;

	[Token(Token = "0x4000054")]
	[FieldOffset(Offset = "0x88")]
	public GameObject GloveBank;

	[Token(Token = "0x4000055")]
	[FieldOffset(Offset = "0x90")]
	public GameObject BackToMenu;

	[Token(Token = "0x4000056")]
	[FieldOffset(Offset = "0x98")]
	public GameObject SlowTrigger;

	[Token(Token = "0x4000057")]
	[FieldOffset(Offset = "0xA0")]
	public GameObject Difficulty;

	[Token(Token = "0x4000058")]
	[FieldOffset(Offset = "0xA8")]
	public GameObject IngameMenu;

	[Token(Token = "0x4000059")]
	[FieldOffset(Offset = "0xB0")]
	public GameObject ZombieNum;

	[Token(Token = "0x400005A")]
	[FieldOffset(Offset = "0xB8")]
	public GameObject HammerBank;

	[Token(Token = "0x400005B")]
	[FieldOffset(Offset = "0xC0")]
	public GameObject StartBattle;

	[Token(Token = "0x400005C")]
	[FieldOffset(Offset = "0xC8")]
	public GameObject Stars;

	[Token(Token = "0x400005D")]
	[FieldOffset(Offset = "0xD0")]
	public GameObject MiniMap;

	[Token(Token = "0x400005E")]
	[FieldOffset(Offset = "0xD8")]
	public GameObject MiniMapCtrl;

	[Token(Token = "0x400005F")]
	[FieldOffset(Offset = "0xE0")]
	public GameObject CameraCtrl;

	[Token(Token = "0x4000060")]
	[FieldOffset(Offset = "0xE8")]
	public GameObject MoneyBank;

	[Token(Token = "0x4000061")]
	[FieldOffset(Offset = "0xF0")]
	public GameObject ConveyorBelt;

	[Token(Token = "0x4000062")]
	[FieldOffset(Offset = "0xF8")]
	public GameObject ShowCardBank;

	[Token(Token = "0x4000063")]
	[FieldOffset(Offset = "0x100")]
	public GameObject ShowPlantHealth;

	[Token(Token = "0x4000064")]
	[FieldOffset(Offset = "0x108")]
	public GameObject ShowZombieHealth;

	[Token(Token = "0x4000065")]
	[FieldOffset(Offset = "0x110")]
	public GameObject grid;

	[Token(Token = "0x4000066")]
	[FieldOffset(Offset = "0x118")]
	public Transform sunPos;

	[Token(Token = "0x4000067")]
	[FieldOffset(Offset = "0x120")]
	public GameObject ChangeGlove;

	[Token(Token = "0x4000068")]
	[FieldOffset(Offset = "0x128")]
	public List<CardUI> cards;

	[Token(Token = "0x4000069")]
	[FieldOffset(Offset = "0x130")]
	public int avaliableCardCount;

	[Token(Token = "0x400006A")]
	[FieldOffset(Offset = "0x138")]
	[SerializeField]
	private List<CanvasUpUI> ups;

	[Token(Token = "0x400006B")]
	[FieldOffset(Offset = "0x140")]
	private readonly Dictionary<int, string> levelDescriptions;

	[Token(Token = "0x400006C")]
	[FieldOffset(Offset = "0x148")]
	private readonly Dictionary<int, string> levelDescriptions2;

	[Token(Token = "0x400006D")]
	[FieldOffset(Offset = "0x150")]
	private readonly Dictionary<SkinLevel, string> skinLevelDescription;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x317F00", Offset = "0x316B00", VA = "0x180317F00", Slot = "5")]
	public override void OnExit()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x317A30", Offset = "0x316630", VA = "0x180317A30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x317D20", Offset = "0x316920", VA = "0x180317D20")]
	private void GetCard(GameObject obj)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x3191E0", Offset = "0x317DE0", VA = "0x1803191E0")]
	public bool UnlockCard(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x318D20", Offset = "0x317920", VA = "0x180318D20")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x317880", Offset = "0x316480", VA = "0x180317880")]
	public void AddCardToBank(GameObject card, bool quick = false)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x318130", Offset = "0x316D30", VA = "0x180318130")]
	public void RemoveCardFromBank(GameObject card)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x317E80", Offset = "0x316A80", VA = "0x180317E80")]
	[IteratorStateMachine(typeof(<MoveCard>d__42))]
	private IEnumerator MoveCard(GameObject card, bool quick = false)
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x319380", Offset = "0x317F80", VA = "0x180319380")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x318040", Offset = "0x316C40", VA = "0x180318040")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x3184E0", Offset = "0x3170E0", VA = "0x1803184E0")]
	private void SetUniqueText(TextMeshProUGUI[] T)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x313D90", Offset = "0x312990", VA = "0x180313D90")]
	private void ChangeString(TextMeshProUGUI[] T, string name)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x319670", Offset = "0x318270", VA = "0x180319670")]
	public InGameUI()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// InitBoard
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000112")]
public class InitBoard : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <DecreaseVolume>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000460")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000461")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DecreaseVolume>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x48A390", Offset = "0x488F90", VA = "0x18048A390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x48A550", Offset = "0x489150", VA = "0x18048A550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000115")]
	[CompilerGenerated]
	private sealed class <DisLookTheLawn>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000462")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000463")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000464")]
		[FieldOffset(Offset = "0x20")]
		public Vector3 target;

		[Token(Token = "0x4000465")]
		[FieldOffset(Offset = "0x30")]
		public GameObject obj;

		[Token(Token = "0x4000466")]
		[FieldOffset(Offset = "0x38")]
		public float moveSpeed;

		[Token(Token = "0x4000467")]
		[FieldOffset(Offset = "0x40")]
		public InitBoard <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DisLookTheLawn>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x48A590", Offset = "0x489190", VA = "0x18048A590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x48A940", Offset = "0x489540", VA = "0x18048A940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private sealed class <LookTheLawn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000468")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000469")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046A")]
		[FieldOffset(Offset = "0x20")]
		public InitBoard <>4__this;

		[Token(Token = "0x400046B")]
		[FieldOffset(Offset = "0x28")]
		public Vector3 target;

		[Token(Token = "0x400046C")]
		[FieldOffset(Offset = "0x38")]
		public GameObject obj;

		[Token(Token = "0x400046D")]
		[FieldOffset(Offset = "0x40")]
		public float moveSpeed;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <LookTheLawn>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x48B030", Offset = "0x489C30", VA = "0x18048B030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x48B3C0", Offset = "0x489FC0", VA = "0x18048B3C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000117")]
	[CompilerGenerated]
	private sealed class <MoveDirection>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046E")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046F")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000470")]
		[FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4000471")]
		[FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x4000472")]
		[FieldOffset(Offset = "0x30")]
		public int direction;

		[Token(Token = "0x4000473")]
		[FieldOffset(Offset = "0x34")]
		private float <duration>5__2;

		[Token(Token = "0x4000474")]
		[FieldOffset(Offset = "0x38")]
		private Vector3 <endPosition>5__3;

		[Token(Token = "0x4000475")]
		[FieldOffset(Offset = "0x44")]
		private Vector3 <startPosition>5__4;

		[Token(Token = "0x4000476")]
		[FieldOffset(Offset = "0x50")]
		private float <elapsedTime>5__5;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveDirection>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x48BC80", Offset = "0x48A880", VA = "0x18048BC80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x48BFB0", Offset = "0x48ABB0", VA = "0x18048BFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000118")]
	[CompilerGenerated]
	private sealed class <MoveMowers>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000477")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000478")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000479")]
		[FieldOffset(Offset = "0x20")]
		public GameObject mower;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveMowers>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x48BFF0", Offset = "0x48ABF0", VA = "0x18048BFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x48C190", Offset = "0x48AD90", VA = "0x18048C190", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000119")]
	[CompilerGenerated]
	private sealed class <MoveObject>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047A")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047B")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047C")]
		[FieldOffset(Offset = "0x20")]
		public GameObject obj;

		[Token(Token = "0x400047D")]
		[FieldOffset(Offset = "0x28")]
		public Vector3 endPos;

		[Token(Token = "0x400047E")]
		[FieldOffset(Offset = "0x34")]
		public float speed;

		[Token(Token = "0x400047F")]
		[FieldOffset(Offset = "0x38")]
		public InitBoard <>4__this;

		[Token(Token = "0x4000480")]
		[FieldOffset(Offset = "0x40")]
		public string direction;

		[Token(Token = "0x4000481")]
		[FieldOffset(Offset = "0x48")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000482")]
		[FieldOffset(Offset = "0x54")]
		private float <moveTime>5__3;

		[Token(Token = "0x4000483")]
		[FieldOffset(Offset = "0x58")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x4000484")]
		[FieldOffset(Offset = "0x60")]
		private GameObject <levelText>5__5;

		[Token(Token = "0x4000485")]
		[FieldOffset(Offset = "0x68")]
		private Color <col1>5__6;

		[Token(Token = "0x4000486")]
		[FieldOffset(Offset = "0x78")]
		private Color <col2>5__7;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveObject>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x48C1D0", Offset = "0x48ADD0", VA = "0x18048C1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x48C690", Offset = "0x48B290", VA = "0x18048C690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000459")]
	[FieldOffset(Offset = "0x20")]
	private Board board;

	[Token(Token = "0x400045A")]
	[FieldOffset(Offset = "0x0")]
	public static InitBoard Instance;

	[Token(Token = "0x400045B")]
	[FieldOffset(Offset = "0x28")]
	public bool lookingLawn;

	[Token(Token = "0x400045C")]
	[FieldOffset(Offset = "0x29")]
	private bool moving;

	[Token(Token = "0x400045D")]
	[FieldOffset(Offset = "0x2C")]
	private Vector2 cameraPosition;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x4822E0", Offset = "0x480EE0", VA = "0x1804822E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x484BD0", Offset = "0x4837D0", VA = "0x180484BD0")]
	private void QuickInGame()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x485A20", Offset = "0x484620", VA = "0x180485A20")]
	public void StartInit()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x482410", Offset = "0x481010", VA = "0x180482410")]
	public void ContinueLevel()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x482410", Offset = "0x481010", VA = "0x180482410")]
	private void RightMoveCamera()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x482FC0", Offset = "0x481BC0", VA = "0x180482FC0")]
	private void LeftMoveCamera()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x483490", Offset = "0x482090", VA = "0x180483490")]
	[IteratorStateMachine(typeof(<MoveObject>d__11))]
	private IEnumerator MoveObject(Vector3 endPos, float speed, string direction, GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x483560", Offset = "0x482160", VA = "0x180483560")]
	private void MoveOverEvent(string direction)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x482810", Offset = "0x481410", VA = "0x180482810")]
	private void InitMower()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x4826C0", Offset = "0x4812C0", VA = "0x1804826C0")]
	[IteratorStateMachine(typeof(<DecreaseVolume>d__14))]
	private IEnumerator DecreaseVolume()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x4851A0", Offset = "0x483DA0", VA = "0x1804851A0")]
	private void ReadySetPlant()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x483420", Offset = "0x482020", VA = "0x180483420")]
	[IteratorStateMachine(typeof(<MoveMowers>d__16))]
	private IEnumerator MoveMowers(GameObject mower)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x4827D0", Offset = "0x4813D0", VA = "0x1804827D0")]
	private float EaseInOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x4823F0", Offset = "0x480FF0", VA = "0x1804823F0")]
	private bool CheckIfOptionalCard()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x482980", Offset = "0x481580", VA = "0x180482980")]
	public void InitSelectUI()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x483D50", Offset = "0x482950", VA = "0x180483D50")]
	private void PreSelectCard()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x484920", Offset = "0x483520", VA = "0x180484920")]
	private CardUI PreSelect(PlantType theSeedType)
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x483390", Offset = "0x481F90", VA = "0x180483390")]
	[IteratorStateMachine(typeof(<MoveDirection>d__22))]
	private IEnumerator MoveDirection(GameObject obj, float distance, int direction)
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x485900", Offset = "0x484500", VA = "0x180485900")]
	private void ShowUI()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x485300", Offset = "0x483F00", VA = "0x180485300")]
	public void RemoveUI()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x483140", Offset = "0x481D40", VA = "0x180483140")]
	public void LookLawn()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x4832D0", Offset = "0x481ED0", VA = "0x1804832D0")]
	[IteratorStateMachine(typeof(<LookTheLawn>d__26))]
	private IEnumerator LookTheLawn(Vector3 target, GameObject obj, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x482710", Offset = "0x481310", VA = "0x180482710")]
	[IteratorStateMachine(typeof(<DisLookTheLawn>d__27))]
	private IEnumerator DisLookTheLawn(Vector3 target, GameObject obj, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x485C70", Offset = "0x484870", VA = "0x180485C70")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x482A00", Offset = "0x481600", VA = "0x180482A00")]
	private void InitZombieFromList()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x485600", Offset = "0x484200", VA = "0x180485600")]
	private void ResetLayer(GameObject obj, int baseLayer)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x4813B0", Offset = "0x47FFB0", VA = "0x1804813B0")]
	private void AddCard()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x4825D0", Offset = "0x4811D0", VA = "0x1804825D0")]
	private CardUI CreateCard(PlantType theSeedType, bool shadow = true)
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public InitBoard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// InitZombieList
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003C4")]
public class InitZombieList : MonoBehaviour
{
	[Token(Token = "0x4001068")]
	[FieldOffset(Offset = "0x0")]
	private static int multiplier;

	[Token(Token = "0x4001069")]
	[FieldOffset(Offset = "0x4")]
	public static int theMaxWave;

	[Token(Token = "0x400106A")]
	[FieldOffset(Offset = "0x8")]
	public static ZombieType[,] zombieList;

	[Token(Token = "0x400106B")]
	[FieldOffset(Offset = "0x10")]
	public static ZombieType[] zombieTypeList;

	[Token(Token = "0x400106C")]
	[FieldOffset(Offset = "0x18")]
	private static bool[] allow;

	[Token(Token = "0x400106D")]
	[FieldOffset(Offset = "0x20")]
	private static int zombiePoint;

	[Token(Token = "0x400106E")]
	[FieldOffset(Offset = "0x28")]
	private static readonly Dictionary<ZombieType, int> zombieWeights;

	[Token(Token = "0x400106F")]
	[FieldOffset(Offset = "0x30")]
	private static readonly List<ZombieType> zombieInLandNormal;

	[Token(Token = "0x4001070")]
	[FieldOffset(Offset = "0x38")]
	private static readonly List<ZombieType> zombieInLandHard;

	[Token(Token = "0x4001071")]
	[FieldOffset(Offset = "0x40")]
	private static readonly List<ZombieType> zombieInPoolNormal;

	[Token(Token = "0x4001072")]
	[FieldOffset(Offset = "0x48")]
	private static readonly List<ZombieType> zombieInPoolHard;

	[Token(Token = "0x4001073")]
	[FieldOffset(Offset = "0x50")]
	private static readonly List<ZombieType> zombieInTravel_water;

	[Token(Token = "0x4001074")]
	[FieldOffset(Offset = "0x58")]
	private static readonly List<ZombieType> zombieInTravel_land;

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x409580", Offset = "0x408180", VA = "0x180409580")]
	public static void InitZombie(LevelType theLevelType, int theLevelNumber, SceneType sceneType = SceneType.Day, int theSurvivalRound = 0)
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x4105D0", Offset = "0x40F1D0", VA = "0x1804105D0")]
	private static void UltimateBoss(int currentWave)
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x4104F0", Offset = "0x40F0F0", VA = "0x1804104F0")]
	private static void TryAddBoss(ZombieType zombieType, int currentWave, int minWave)
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x40CE80", Offset = "0x40BA80", VA = "0x18040CE80")]
	private static bool ShootingLimit(ZombieType theZombieType, int wave)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x40DF30", Offset = "0x40CB30", VA = "0x18040DF30")]
	private static bool TowerLimit(ZombieType theZombieType, int wave)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x410720", Offset = "0x40F320", VA = "0x180410720")]
	private static bool WheatProtectionLimit(ZombieType theZombieType, int wave)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x3FBED0", Offset = "0x3FAAD0", VA = "0x1803FBED0")]
	private static int AddZombieToList(ZombieType zombieType, int wave)
	{
		return default(int);
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x408B00", Offset = "0x407700", VA = "0x180408B00")]
	private static void InitAdvWave(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x408CC0", Offset = "0x4078C0", VA = "0x180408CC0")]
	private static void InitChallengeWave(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x4091F0", Offset = "0x407DF0", VA = "0x1804091F0")]
	private static void InitSurvivalWave(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x408EF0", Offset = "0x407AF0", VA = "0x180408EF0")]
	private static void InitExplorWave(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x40D6F0", Offset = "0x40C2F0", VA = "0x18040D6F0")]
	private static void SurvivalZombieTypeSpawn(int theLevelNumber, int theRound, SceneType sceneType)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x40B5E0", Offset = "0x40A1E0", VA = "0x18040B5E0")]
	private static void SetTravelZombie(int theLevel, int theRound, SceneType sceneType)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x40EA80", Offset = "0x40D680", VA = "0x18040EA80")]
	public static void TravelLandGroup(int group)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x410020", Offset = "0x40EC20", VA = "0x180410020")]
	public static void TravelWaterGroup(int group)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x3FC650", Offset = "0x3FB250", VA = "0x1803FC650")]
	private static void AdvantureZombieTypeSpawn(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x40B480", Offset = "0x40A080", VA = "0x18040B480")]
	private static void SetAllowZombieTypeSpawn(LevelType theLevelType, int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x4094B0", Offset = "0x4080B0", VA = "0x1804094B0")]
	private static void InitTravelAdvWave(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x408980", Offset = "0x407580", VA = "0x180408980")]
	public static int InitAbyssWave(int theLevelNumber)
	{
		return default(int);
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x3FAD50", Offset = "0x3F9950", VA = "0x1803FAD50")]
	private static void AbyssLevelSpawner(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x40CED0", Offset = "0x40BAD0", VA = "0x18040CED0")]
	public static void SkinLevelSpawner(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x40DF80", Offset = "0x40CB80", VA = "0x18040DF80")]
	private static void TravelAdvSpawner(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x3FF920", Offset = "0x3FE520", VA = "0x1803FF920")]
	private static void AllowZombies(List<ZombieType> zombieTypes)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x406D40", Offset = "0x405940", VA = "0x180406D40")]
	private static void ExploreSpawner(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x3FFA70", Offset = "0x3FE670", VA = "0x1803FFA70")]
	private static void ChallengeSpawner(int theLevelNumber)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x408090", Offset = "0x406C90", VA = "0x180408090")]
	private static List<ZombieType> GetRandomZombiesFromLandNormal()
	{
		return null;
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x407EA0", Offset = "0x406AA0", VA = "0x180407EA0")]
	private static List<ZombieType> GetRandomZombiesFromLandHard()
	{
		return null;
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x408440", Offset = "0x407040", VA = "0x180408440")]
	private static List<ZombieType> GetRandomZombiesFromPoolNormal()
	{
		return null;
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x408250", Offset = "0x406E50", VA = "0x180408250")]
	private static List<ZombieType> GetRandomZombiesFromPoolHard()
	{
		return null;
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x4087C0", Offset = "0x4073C0", VA = "0x1804087C0")]
	private static List<ZombieType> GetTravelZombieWater()
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x408600", Offset = "0x407200", VA = "0x180408600")]
	private static List<ZombieType> GetTravelZombieLand()
	{
		return null;
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x40AC50", Offset = "0x409850", VA = "0x18040AC50")]
	private static ZombieType PickZombie()
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x408FB0", Offset = "0x407BB0", VA = "0x180408FB0")]
	private static void InitList()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x406CF0", Offset = "0x4058F0", VA = "0x180406CF0")]
	private static bool ContainsType(ZombieType type, ZombieType[] list)
	{
		return default(bool);
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x40A930", Offset = "0x409530", VA = "0x18040A930")]
	private static void LandNormal()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x40A7C0", Offset = "0x4093C0", VA = "0x18040A7C0")]
	private static void LandHard()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x40B0F0", Offset = "0x409CF0", VA = "0x18040B0F0")]
	private static void PoolNormal()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x40AF80", Offset = "0x409B80", VA = "0x18040AF80")]
	private static void PoolHard()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x40B410", Offset = "0x40A010", VA = "0x18040B410")]
	public static void RoofHard()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x4101D0", Offset = "0x40EDD0", VA = "0x1804101D0")]
	private static void TravelWater()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x40FCC0", Offset = "0x40E8C0", VA = "0x18040FCC0")]
	private static void TravelUltimate(int count)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x40F9A0", Offset = "0x40E5A0", VA = "0x18040F9A0")]
	private static void TravelLand()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x3FF6B0", Offset = "0x3FE2B0", VA = "0x1803FF6B0")]
	private static void AllowNormal()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x3FEF80", Offset = "0x3FDB80", VA = "0x1803FEF80")]
	private static void AllowDay()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x3FEE00", Offset = "0x3FDA00", VA = "0x1803FEE00")]
	private static void AllowDayNormal()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x3FF310", Offset = "0x3FDF10", VA = "0x1803FF310")]
	private static void AllowNightNormal()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x3FF460", Offset = "0x3FE060", VA = "0x1803FF460")]
	private static void AllowNight()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x3FF1B0", Offset = "0x3FDDB0", VA = "0x1803FF1B0")]
	private static void AllowEliteNight()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x3FF760", Offset = "0x3FE360", VA = "0x1803FF760")]
	private static void AllowPlantZombie()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x3FEB90", Offset = "0x3FD790", VA = "0x1803FEB90")]
	private static void AllowAllTravel()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public InitZombieList()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronBalloonZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002CE")]
public class IronBalloonZombie : BalloonZombie
{
	[Token(Token = "0x400082C")]
	[FieldOffset(Offset = "0x228")]
	public GameObject bucketNut;

	[Token(Token = "0x400082D")]
	[FieldOffset(Offset = "0x230")]
	public GameObject Petals1;

	[Token(Token = "0x400082E")]
	[FieldOffset(Offset = "0x238")]
	public GameObject Petals2;

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x37BE80", Offset = "0x37AA80", VA = "0x18037BE80", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x37BB90", Offset = "0x37A790", VA = "0x18037BB90", Slot = "55")]
	public override void Fall()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x37BCE0", Offset = "0x37A8E0", VA = "0x18037BCE0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x35C0E0", Offset = "0x35ACE0", VA = "0x18035C0E0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x37BA20", Offset = "0x37A620", VA = "0x18037BA20", Slot = "43")]
	public override GameObject DropArmor()
	{
		return null;
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public IronBalloonZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronBalloonZombie2
using Il2CppDummyDll;

[Token(Token = "0x20002CF")]
public class IronBalloonZombie2 : IronBalloonZombie
{
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x37B8D0", Offset = "0x37A4D0", VA = "0x18037B8D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x370980", Offset = "0x36F580", VA = "0x180370980", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x37B8F0", Offset = "0x37A4F0", VA = "0x18037B8F0", Slot = "55")]
	public override void Fall()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x37B870", Offset = "0x37A470", VA = "0x18037B870", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x37B700", Offset = "0x37A300", VA = "0x18037B700")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public IronBalloonZombie2()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronCorn
using Il2CppDummyDll;

[Token(Token = "0x2000228")]
public class IronCorn : Cornpult
{
	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x3398A0", Offset = "0x3384A0", VA = "0x1803398A0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x339890", Offset = "0x338490", VA = "0x180339890", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public IronCorn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronGargantuar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D0")]
public class IronGargantuar : Zombie
{
	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x37C750", Offset = "0x37B350", VA = "0x18037C750")]
	public void LoseIronHead()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x37BF20", Offset = "0x37AB20", VA = "0x18037BF20", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x37C3A0", Offset = "0x37AFA0", VA = "0x18037C3A0", Slot = "26")]
	public override void DestoryZombie()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x37C580", Offset = "0x37B180", VA = "0x18037C580", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x37CB00", Offset = "0x37B700", VA = "0x18037CB00")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x35F920", Offset = "0x35E520", VA = "0x18035F920", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x37CC60", Offset = "0x37B860", VA = "0x18037CC60", Slot = "30")]
	public override void SetMindControl(int level = 0)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	public override void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "36")]
	public override void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "37")]
	public override void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "32")]
	public override void SetJalaed()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "33")]
	public override void SetEmbered()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public IronGargantuar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronPeaShooter
using Il2CppDummyDll;

[Token(Token = "0x2000229")]
public class IronPeaShooter : PeaShooter
{
	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x3398B0", Offset = "0x3384B0", VA = "0x1803398B0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IronPeaShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronPeaZ
using Il2CppDummyDll;

[Token(Token = "0x20002D1")]
public class IronPeaZ : PeaShooterZ
{
	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x37CC70", Offset = "0x37B870", VA = "0x18037CC70", Slot = "55")]
	public override Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x37CE60", Offset = "0x37BA60", VA = "0x18037CE60", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x375160", Offset = "0x373D60", VA = "0x180375160")]
	public IronPeaZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IronPuff
using Il2CppDummyDll;

[Token(Token = "0x200022A")]
public class IronPuff : Shooter
{
	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x339A10", Offset = "0x338610", VA = "0x180339A10", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public IronPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IState
using Il2CppDummyDll;

[Token(Token = "0x2000087")]
public interface IState
{
	[Token(Token = "0x600024B")]
	void OnEnter();

	[Token(Token = "0x600024C")]
	void OnUpdate();

	[Token(Token = "0x600024D")]
	void OnExit();
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ItemBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200033C")]
public class ItemBtn : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	public enum Type
	{
		[Token(Token = "0x4000AB9")]
		Bean
	}

	[Token(Token = "0x4000AB7")]
	[FieldOffset(Offset = "0x20")]
	public Type type;

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x3C9B30", Offset = "0x3C8730", VA = "0x1803C9B30")]
	public GameObject Clicked()
	{
		return null;
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x3C9CC0", Offset = "0x3C88C0", VA = "0x1803C9CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ItemBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ItemManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000343")]
public class ItemManager
{
	[Token(Token = "0x4000ACD")]
	[FieldOffset(Offset = "0x10")]
	public Dictionary<BucketType, GameObject> bucketPrefabs;

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x3CA000", Offset = "0x3C8C00", VA = "0x1803CA000")]
	public ItemManager()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x3C9E60", Offset = "0x3C8A60", VA = "0x1803C9E60")]
	public Bucket SetBucket(Board board, BucketType theBucketType, Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x3C9E00", Offset = "0x3C8A00", VA = "0x1803C9E00")]
	private void LoadBuckets()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ItemType
using Il2CppDummyDll;

[Token(Token = "0x2000128")]
public enum ItemType
{
	[Token(Token = "0x40004D6")]
	NormalSun = 0,
	[Token(Token = "0x40004D7")]
	BigSun = 1,
	[Token(Token = "0x40004D8")]
	SmallSun = 2,
	[Token(Token = "0x40004D9")]
	Bucket = 4,
	[Token(Token = "0x40004DA")]
	Helmet = 6,
	[Token(Token = "0x40004DB")]
	Jackbox = 7,
	[Token(Token = "0x40004DC")]
	Pickaxe = 8,
	[Token(Token = "0x40004DD")]
	LittleSun = 13,
	[Token(Token = "0x40004DE")]
	SilverCoin = 34,
	[Token(Token = "0x40004DF")]
	GoldCoin = 35,
	[Token(Token = "0x40004E0")]
	DiamondCoin = 36,
	[Token(Token = "0x40004E1")]
	Bean = 37,
	[Token(Token = "0x40004E2")]
	SmallSilverCoin = 38,
	[Token(Token = "0x40004E3")]
	SmallGoldCoin = 39,
	[Token(Token = "0x40004E4")]
	Machine = 41,
	[Token(Token = "0x40004E5")]
	Portal = 42
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IZData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000362")]
public class IZData
{
	[Token(Token = "0x4000BCA")]
	[FieldOffset(Offset = "0x10")]
	public List<SavePlantData> plants;

	[Token(Token = "0x4000BCB")]
	[FieldOffset(Offset = "0x18")]
	public int theSun;

	[Token(Token = "0x4000BCC")]
	[FieldOffset(Offset = "0x20")]
	public List<ZombieType> zombietTypes;

	[Token(Token = "0x4000BCD")]
	[FieldOffset(Offset = "0x28")]
	public int dropSunPerPlant;

	[Token(Token = "0x4000BCE")]
	[FieldOffset(Offset = "0x2C")]
	public int recommendDifficulty;

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public IZData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IZEBrains
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200011A")]
public class IZEBrains : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	[CompilerGenerated]
	private sealed class <FlashObject>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048B")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048C")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048D")]
		[FieldOffset(Offset = "0x20")]
		public Material mt;

		[Token(Token = "0x400048E")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <FlashObject>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x48AB80", Offset = "0x489780", VA = "0x18048AB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x48AD00", Offset = "0x489900", VA = "0x18048AD00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000487")]
	[FieldOffset(Offset = "0x20")]
	public int theRow;

	[Token(Token = "0x4000488")]
	[FieldOffset(Offset = "0x24")]
	public int theHealth;

	[Token(Token = "0x4000489")]
	[FieldOffset(Offset = "0x28")]
	private Board board;

	[Token(Token = "0x400048A")]
	[FieldOffset(Offset = "0x30")]
	private BrainMgr brainMgr;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x480370", Offset = "0x47EF70", VA = "0x180480370")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x480B90", Offset = "0x47F790", VA = "0x180480B90")]
	private void Start()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x480C30", Offset = "0x47F830", VA = "0x180480C30")]
	private void Update()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x4806A0", Offset = "0x47F2A0", VA = "0x1804806A0")]
	private void ClearRow(int theRow)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x4803D0", Offset = "0x47EFD0", VA = "0x1804803D0")]
	private void ClearAll()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x480AC0", Offset = "0x47F6C0", VA = "0x180480AC0")]
	public void FlashOnce()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x480A50", Offset = "0x47F650", VA = "0x180480A50")]
	[IteratorStateMachine(typeof(<FlashObject>d__10))]
	private IEnumerator FlashObject(Material mt)
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x480E00", Offset = "0x47FA00", VA = "0x180480E00")]
	public IZEBrains()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IZECard
using Il2CppDummyDll;

[Token(Token = "0x20000ED")]
public class IZECard : CardUI
{
	[Token(Token = "0x6000404")]
	[Address(RVA = "0x4770A0", Offset = "0x475CA0", VA = "0x1804770A0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x477780", Offset = "0x476380", VA = "0x180477780", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x4778C0", Offset = "0x4764C0", VA = "0x1804778C0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x477700", Offset = "0x476300", VA = "0x180477700")]
	public new void Die()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x476680", Offset = "0x475280", VA = "0x180476680")]
	public IZECard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// IZEMgr
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000017")]
public class IZEMgr : BaseMenu
{
	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <MoveCard>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000089")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008A")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008B")]
		[FieldOffset(Offset = "0x20")]
		public GameObject card;

		[Token(Token = "0x400008C")]
		[FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400008D")]
		[FieldOffset(Offset = "0x34")]
		private Vector3 <target>5__3;

		[Token(Token = "0x400008E")]
		[FieldOffset(Offset = "0x40")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x400008F")]
		[FieldOffset(Offset = "0x44")]
		private float <duration>5__5;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveCard>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x31D580", Offset = "0x31C180", VA = "0x18031D580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x31D770", Offset = "0x31C370", VA = "0x18031D770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007D")]
	[FieldOffset(Offset = "0x0")]
	public static IZEMgr Instance;

	[Token(Token = "0x400007E")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI sun;

	[Token(Token = "0x400007F")]
	[FieldOffset(Offset = "0x38")]
	public GameObject[] cardOnBank;

	[Token(Token = "0x4000080")]
	[FieldOffset(Offset = "0x40")]
	public GameObject[] seed;

	[Token(Token = "0x4000081")]
	[FieldOffset(Offset = "0x48")]
	public List<IZECard> zombieCards;

	[Token(Token = "0x4000082")]
	[FieldOffset(Offset = "0x50")]
	public GameObject shovel;

	[Token(Token = "0x4000083")]
	[FieldOffset(Offset = "0x58")]
	public GameObject glove;

	[Token(Token = "0x4000084")]
	[FieldOffset(Offset = "0x60")]
	public List<ZombieType> customCards;

	[Token(Token = "0x4000085")]
	[FieldOffset(Offset = "0x68")]
	public TMP_InputField setSun;

	[Token(Token = "0x4000086")]
	[FieldOffset(Offset = "0x70")]
	public TMP_InputField setDropSunCount;

	[Token(Token = "0x4000087")]
	[FieldOffset(Offset = "0x78")]
	public GameObject plantLibrary;

	[Token(Token = "0x4000088")]
	[FieldOffset(Offset = "0x80")]
	public GameObject zombieLibary;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x313CA0", Offset = "0x3128A0", VA = "0x180313CA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x3152A0", Offset = "0x313EA0", VA = "0x1803152A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x315490", Offset = "0x314090", VA = "0x180315490")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x313FF0", Offset = "0x312BF0", VA = "0x180313FF0")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x314630", Offset = "0x313230", VA = "0x180314630")]
	private void SetUniqueText(TextMeshProUGUI[] T)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x313D90", Offset = "0x312990", VA = "0x180313D90")]
	private void ChangeString(TextMeshProUGUI[] T, string name)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x313B10", Offset = "0x312710", VA = "0x180313B10")]
	public bool AddCardToBank(GameObject card)
	{
		return default(bool);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x3140B0", Offset = "0x312CB0", VA = "0x1803140B0")]
	public void RemoveCardFromBank(GameObject card)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x313F80", Offset = "0x312B80", VA = "0x180313F80")]
	[IteratorStateMachine(typeof(<MoveCard>d__20))]
	private IEnumerator MoveCard(GameObject card)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x313E00", Offset = "0x312A00", VA = "0x180313E00")]
	public static IZData GetCustomIZData()
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x313ED0", Offset = "0x312AD0", VA = "0x180313ED0")]
	public static IZData GetCustomIZData(string name)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x314560", Offset = "0x313160", VA = "0x180314560")]
	public void SetSun()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x314450", Offset = "0x313050", VA = "0x180314450")]
	public void SetDropSun()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x3157E0", Offset = "0x3143E0", VA = "0x1803157E0")]
	public IZEMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JackBox
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000079")]
public class JackBox : MonoBehaviour
{
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public JackBox()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JackboxJumpZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D2")]
public class JackboxJumpZombie : SuperPogoZombie
{
	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x37D080", Offset = "0x37BC80", VA = "0x18037D080", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x37CFD0", Offset = "0x37BBD0", VA = "0x18037CFD0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x37D220", Offset = "0x37BE20", VA = "0x18037D220")]
	public JackboxJumpZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JackboxPumpkin
using Il2CppDummyDll;

[Token(Token = "0x2000197")]
public class JackboxPumpkin : MagnetPumpkin
{
	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x4BF2F0", Offset = "0x4BDEF0", VA = "0x1804BF2F0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public JackboxPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JackboxZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D3")]
public class JackboxZombie : Zombie
{
	[Token(Token = "0x400082F")]
	[FieldOffset(Offset = "0x220")]
	public AudioSource audioSource;

	[Token(Token = "0x4000830")]
	[FieldOffset(Offset = "0x228")]
	public bool audioSourcePlaying;

	[Token(Token = "0x4000831")]
	[FieldOffset(Offset = "0x22C")]
	public float popCountDown;

	[Token(Token = "0x4000832")]
	[FieldOffset(Offset = "0x230")]
	protected float originalCountDown;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x37D500", Offset = "0x37C100", VA = "0x18037D500", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x37DA70", Offset = "0x37C670", VA = "0x18037DA70", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x37D7F0", Offset = "0x37C3F0", VA = "0x18037D7F0")]
	public void Pop()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x37D7A0", Offset = "0x37C3A0", VA = "0x18037D7A0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x37D230", Offset = "0x37BE30", VA = "0x18037D230", Slot = "55")]
	protected virtual void AnimExplode()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x37D720", Offset = "0x37C320", VA = "0x18037D720")]
	protected void Explode()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x37D920", Offset = "0x37C520", VA = "0x18037D920", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x37D8D0", Offset = "0x37C4D0", VA = "0x18037D8D0", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x37DA20", Offset = "0x37C620", VA = "0x18037DA20", Slot = "39")]
	protected override void Unfrezzing()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x37D620", Offset = "0x37C220", VA = "0x18037D620", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x37D9D0", Offset = "0x37C5D0", VA = "0x18037D9D0", Slot = "42")]
	protected override void UnButtered()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x37D670", Offset = "0x37C270", VA = "0x18037D670", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x37D2C0", Offset = "0x37BEC0", VA = "0x18037D2C0")]
	private bool AvaliableToPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x37D7C0", Offset = "0x37C3C0", VA = "0x18037D7C0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public JackboxZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JacksonDriver
using Il2CppDummyDll;

[Token(Token = "0x200029A")]
public class JacksonDriver : SuperDriverZombie
{
	[Token(Token = "0x40007CA")]
	[FieldOffset(Offset = "0x228")]
	private bool setDancer;

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x360F20", Offset = "0x35FB20", VA = "0x180360F20", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x361A60", Offset = "0x360660", VA = "0x180361A60", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x360610", Offset = "0x35F210", VA = "0x180360610", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x3612B0", Offset = "0x35FEB0", VA = "0x1803612B0", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x35FC90", Offset = "0x35E890", VA = "0x18035FC90")]
	public JacksonDriver()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Jalakelp
using Il2CppDummyDll;

[Token(Token = "0x2000145")]
public class Jalakelp : Tanglekelp
{
	[Token(Token = "0x6000605")]
	[Address(RVA = "0x48DFB0", Offset = "0x48CBB0", VA = "0x18048DFB0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x48DFF0", Offset = "0x48CBF0", VA = "0x18048DFF0")]
	public Jalakelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalaMine
using Il2CppDummyDll;

[Token(Token = "0x2000198")]
public class JalaMine : Plant
{
	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x4BF300", Offset = "0x4BDF00", VA = "0x1804BF300", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public JalaMine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Jalapeno
using Il2CppDummyDll;

[Token(Token = "0x2000146")]
public class Jalapeno : Plant
{
	[Token(Token = "0x6000607")]
	[Address(RVA = "0x48E070", Offset = "0x48CC70", VA = "0x18048E070", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x48E010", Offset = "0x48CC10", VA = "0x18048E010")]
	public void AnimExplode()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Jalapeno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalapenoZombie
using Il2CppDummyDll;

[Token(Token = "0x20002B4")]
public class JalapenoZombie : Zombie
{
	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x37DD70", Offset = "0x37C970", VA = "0x18037DD70", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x37DCF0", Offset = "0x37C8F0", VA = "0x18037DCF0", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public JalapenoZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalaSpike
using Il2CppDummyDll;

[Token(Token = "0x2000199")]
public class JalaSpike : Caltrop
{
	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x4BF7C0", Offset = "0x4BE3C0", VA = "0x1804BF7C0", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public JalaSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalaSquash
using Il2CppDummyDll;

[Token(Token = "0x200019A")]
public class JalaSquash : Squash
{
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x4BFA60", Offset = "0x4BE660", VA = "0x1804BFA60", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x4BFA10", Offset = "0x4BE610", VA = "0x1804BFA10", Slot = "41")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x4BFA90", Offset = "0x4BE690", VA = "0x1804BFA90")]
	public JalaSquash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalaStar
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200022B")]
public class JalaStar : Plant
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<Transform> shoots;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x339B90", Offset = "0x338790", VA = "0x180339B90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x339FA0", Offset = "0x338BA0", VA = "0x180339FA0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x339B70", Offset = "0x338770", VA = "0x180339B70", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x339BE0", Offset = "0x3387E0", VA = "0x180339BE0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x339BB0", Offset = "0x3387B0", VA = "0x180339BB0", Slot = "16")]
	public override void Crashed(int level = 0, int soundID = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x33A030", Offset = "0x338C30", VA = "0x18033A030")]
	public JalaStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// JalaTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200019B")]
public class JalaTorch : TorchWood
{
	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x4BFAA0", Offset = "0x4BE6A0", VA = "0x1804BFAA0", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x48DFB0", Offset = "0x48CBB0", VA = "0x18048DFB0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public JalaTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// KelpTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000147")]
public class KelpTorch : Tanglekelp
{
	[Token(Token = "0x400060B")]
	[FieldOffset(Offset = "0x1D8")]
	private int count;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x48E150", Offset = "0x48CD50", VA = "0x18048E150")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x48E460", Offset = "0x48D060", VA = "0x18048E460")]
	private void Summon()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x48DFF0", Offset = "0x48CBF0", VA = "0x18048DFF0")]
	public KelpTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// KirovAirship
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D4")]
public class KirovAirship : Zombie
{
	[Token(Token = "0x4000833")]
	[FieldOffset(Offset = "0x220")]
	protected bool existBomb;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x37DDB0", Offset = "0x37C9B0", VA = "0x18037DDB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x37EBF0", Offset = "0x37D7F0", VA = "0x18037EBF0", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x37EC10", Offset = "0x37D810", VA = "0x18037EC10", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x37E9A0", Offset = "0x37D5A0", VA = "0x18037E9A0", Slot = "55")]
	protected virtual void PlayMachineSound()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x37EA30", Offset = "0x37D630", VA = "0x18037EA30", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x37EBD0", Offset = "0x37D7D0", VA = "0x18037EBD0", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x37DDD0", Offset = "0x37C9D0", VA = "0x18037DDD0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x37E910", Offset = "0x37D510", VA = "0x18037E910", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x37E010", Offset = "0x37CC10", VA = "0x18037E010", Slot = "56")]
	protected virtual void BombUpdate()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x37E440", Offset = "0x37D040", VA = "0x18037E440", Slot = "57")]
	protected virtual void CreateBomb()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x37EBC0", Offset = "0x37D7C0", VA = "0x18037EBC0")]
	private void ReplaceBomb()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x37E6F0", Offset = "0x37D2F0", VA = "0x18037E6F0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x37E8F0", Offset = "0x37D4F0", VA = "0x18037E8F0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x37E3B0", Offset = "0x37CFB0", VA = "0x18037E3B0")]
	private void CrashEvent()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x3710F0", Offset = "0x36FCF0", VA = "0x1803710F0")]
	public KirovAirship()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// KirovBomb
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000102")]
public class KirovBomb : MonoBehaviour
{
	[Token(Token = "0x4000407")]
	[FieldOffset(Offset = "0x20")]
	private float existTime;

	[Token(Token = "0x4000408")]
	[FieldOffset(Offset = "0x24")]
	private bool explode;

	[Token(Token = "0x4000409")]
	[FieldOffset(Offset = "0x28")]
	public int bombRow;

	[Token(Token = "0x400040A")]
	[FieldOffset(Offset = "0x2C")]
	public int bombDamage;

	[Token(Token = "0x400040B")]
	[FieldOffset(Offset = "0x30")]
	public bool fromHypno;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x4864F0", Offset = "0x4850F0", VA = "0x1804864F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x485DE0", Offset = "0x4849E0", VA = "0x180485DE0")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x486600", Offset = "0x485200", VA = "0x180486600")]
	public KirovBomb()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LadderZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D5")]
public class LadderZombie : DoorZombie
{
	[Token(Token = "0x4000834")]
	[FieldOffset(Offset = "0x238")]
	private Plant ladderTarget;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x37EEF0", Offset = "0x37DAF0", VA = "0x18037EEF0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "55")]
	protected override void GetHand()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x37EF10", Offset = "0x37DB10", VA = "0x18037EF10", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x37F1D0", Offset = "0x37DDD0", VA = "0x18037F1D0", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x37F3E0", Offset = "0x37DFE0", VA = "0x18037F3E0", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x37F060", Offset = "0x37DC60", VA = "0x18037F060", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x37EC90", Offset = "0x37D890", VA = "0x18037EC90")]
	private void AnimSetLadder()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x37EFB0", Offset = "0x37DBB0", VA = "0x18037EFB0")]
	public void LoseLadder()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public LadderZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LandSubmarineZombie
using Il2CppDummyDll;

[Token(Token = "0x20002B5")]
public class LandSubmarineZombie : SubmarineZombie
{
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x37F7E0", Offset = "0x37E3E0", VA = "0x18037F7E0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public LandSubmarineZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LangernMagnet
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200019C")]
public class LangernMagnet : Magnetshroom
{
	[Token(Token = "0x4000674")]
	[FieldOffset(Offset = "0x1D8")]
	private ParticleSystem lightShine;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x4BFE10", Offset = "0x4BEA10", VA = "0x1804BFE10", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x4BFF60", Offset = "0x4BEB60", VA = "0x1804BFF60", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x4BFB90", Offset = "0x4BE790", VA = "0x1804BFB90", Slot = "40")]
	protected override void AttrackItem(GameObject item, int theRow)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x4C0050", Offset = "0x4BEC50", VA = "0x1804C0050")]
	public LangernMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternBlover
using Il2CppDummyDll;

[Token(Token = "0x200019D")]
public class LanternBlover : Blover
{
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x4C0080", Offset = "0x4BEC80", VA = "0x1804C0080", Slot = "39")]
	protected override void AnimBlow()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public LanternBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternCactus
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200022C")]
public class LanternCactus : Cactus
{
	[Token(Token = "0x4000727")]
	[FieldOffset(Offset = "0x1C0")]
	private ParticleSystem lightShine;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x33A7D0", Offset = "0x3393D0", VA = "0x18033A7D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x33ACA0", Offset = "0x3398A0", VA = "0x18033ACA0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x33AA80", Offset = "0x339680", VA = "0x18033AA80", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x33A870", Offset = "0x339470", VA = "0x18033A870", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x33A0B0", Offset = "0x338CB0", VA = "0x18033A0B0")]
	private void AttackZombieInAir()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x33A440", Offset = "0x339040", VA = "0x18033A440")]
	private void AttackZombieInLand()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public LanternCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternLaser
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000132")]
public class LanternLaser : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[FieldOffset(Offset = "0x20")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000526")]
	[FieldOffset(Offset = "0x28")]
	private Color color;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x48E600", Offset = "0x48D200", VA = "0x18048E600")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x48E640", Offset = "0x48D240", VA = "0x18048E640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LanternLaser()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternPot
using Il2CppDummyDll;

[Token(Token = "0x200019E")]
public class LanternPot : Pot
{
	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x4C0150", Offset = "0x4BED50", VA = "0x1804C0150", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x4C00C0", Offset = "0x4BECC0", VA = "0x1804C00C0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public LanternPot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternPumpkin
using Il2CppDummyDll;

[Token(Token = "0x200019F")]
public class LanternPumpkin : Pumpkin
{
	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x4C0410", Offset = "0x4BF010", VA = "0x1804C0410", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x4C0250", Offset = "0x4BEE50", VA = "0x1804C0250", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x4C0350", Offset = "0x4BEF50", VA = "0x1804C0350", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x4C02C0", Offset = "0x4BEEC0", VA = "0x1804C02C0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x4C0210", Offset = "0x4BEE10", VA = "0x1804C0210", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public LanternPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternStarFruit
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200022D")]
public class LanternStarFruit : StarFruit
{
	[Token(Token = "0x4000728")]
	[FieldOffset(Offset = "0x1C0")]
	private ParticleSystem lightShine;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x33AD20", Offset = "0x339920", VA = "0x18033AD20", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x33ACA0", Offset = "0x3398A0", VA = "0x18033ACA0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x33B110", Offset = "0x339D10", VA = "0x18033B110", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x33ADC0", Offset = "0x3399C0", VA = "0x18033ADC0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x33AF00", Offset = "0x339B00", VA = "0x18033AF00", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public LanternStarFruit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternUmbrella
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x20001A0")]
public class LanternUmbrella : CornUmbrella
{
	[Token(Token = "0x4000675")]
	[FieldOffset(Offset = "0x1C8")]
	private float recoverEnergyTimer;

	[Token(Token = "0x4000676")]
	[FieldOffset(Offset = "0x1CC")]
	protected int maxEnergy;

	[Token(Token = "0x4000677")]
	[FieldOffset(Offset = "0x1D0")]
	private TextMeshPro energyText;

	[Token(Token = "0x4000678")]
	[FieldOffset(Offset = "0x1D8")]
	private TextMeshPro energyTextShadow;

	[Token(Token = "0x4000679")]
	[FieldOffset(Offset = "0x1E0")]
	protected GameObject lanternLight;

	[Token(Token = "0x400067A")]
	[FieldOffset(Offset = "0x1E8")]
	private Vector3 lightPos;

	[Token(Token = "0x400067B")]
	[FieldOffset(Offset = "0x1F8")]
	private ParticleSystem par;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x4C0790", Offset = "0x4BF390", VA = "0x1804C0790", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x4C07C0", Offset = "0x4BF3C0", VA = "0x1804C07C0", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x4C0DC0", Offset = "0x4BF9C0", VA = "0x1804C0DC0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x4C0430", Offset = "0x4BF030", VA = "0x1804C0430")]
	public void AdjustEnergy(int cost)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x4C0940", Offset = "0x4BF540", VA = "0x1804C0940", Slot = "13")]
	protected override int GetDamage(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x4C1220", Offset = "0x4BFE20", VA = "0x1804C1220", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x4C0D30", Offset = "0x4BF930", VA = "0x1804C0D30", Slot = "42")]
	protected virtual void RecoverEnergyUpdate()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x4C08A0", Offset = "0x4BF4A0", VA = "0x1804C08A0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x4C0C70", Offset = "0x4BF870", VA = "0x1804C0C70", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x4C0BE0", Offset = "0x4BF7E0", VA = "0x1804C0BE0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x4C09A0", Offset = "0x4BF5A0", VA = "0x1804C09A0", Slot = "10")]
	public override GameObject InitText()
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x4C1080", Offset = "0x4BFC80", VA = "0x1804C1080")]
	private void UpdateEnergyText()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x4C12D0", Offset = "0x4BFED0", VA = "0x1804C12D0")]
	public LanternUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LanternUmbrellaEffect
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000F2")]
public class LanternUmbrellaEffect : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[FieldOffset(Offset = "0x20")]
	public LanternUmbrella plant;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x477A00", Offset = "0x476600", VA = "0x180477A00")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LanternUmbrellaEffect()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LaserUmbrella
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x20001A1")]
public class LaserUmbrella : LanternUmbrella
{
	[Token(Token = "0x400067C")]
	[FieldOffset(Offset = "0x200")]
	private readonly Zombie[] targetZombies;

	[Token(Token = "0x400067D")]
	[FieldOffset(Offset = "0x208")]
	private readonly Plant[] targetPlants;

	[Token(Token = "0x400067E")]
	[FieldOffset(Offset = "0x210")]
	private readonly LineRenderer[] theLight;

	[Token(Token = "0x400067F")]
	[FieldOffset(Offset = "0x218")]
	private readonly ParticleSystem[] particleSystems;

	[Token(Token = "0x4000680")]
	[FieldOffset(Offset = "0x220")]
	private readonly SortingGroup[] sortingGroups;

	[Token(Token = "0x4000681")]
	[FieldOffset(Offset = "0x228")]
	public GameObject theLightPrefab;

	[Token(Token = "0x4000682")]
	[FieldOffset(Offset = "0x230")]
	public GameObject ballPrefab;

	[Token(Token = "0x4000683")]
	[FieldOffset(Offset = "0x238")]
	public GameObject lightBall;

	[Token(Token = "0x4000684")]
	[FieldOffset(Offset = "0x240")]
	public bool main;

	[Token(Token = "0x4000685")]
	[FieldOffset(Offset = "0x244")]
	private float explodeTimer;

	[Token(Token = "0x4000686")]
	[FieldOffset(Offset = "0x248")]
	private float healTimer;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x4C26B0", Offset = "0x4C12B0", VA = "0x1804C26B0")]
	private void HealUpdate()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x4C1790", Offset = "0x4C0390", VA = "0x1804C1790", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x4C2C60", Offset = "0x4C1860", VA = "0x1804C2C60", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x4C3680", Offset = "0x4C2280", VA = "0x1804C3680", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x4C2450", Offset = "0x4C1050", VA = "0x1804C2450")]
	private void Explode(Vector2 position, int row)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x4C2930", Offset = "0x4C1530", VA = "0x1804C2930")]
	private void SearchPlant()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x4C2240", Offset = "0x4C0E40", VA = "0x1804C2240", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x4C28C0", Offset = "0x4C14C0", VA = "0x1804C28C0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x4C2A70", Offset = "0x4C1670", VA = "0x1804C2A70")]
	private void SearchZombieUpdate()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x4C1B20", Offset = "0x4C0720", VA = "0x1804C1B20")]
	private bool CheckZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x4C1A80", Offset = "0x4C0680", VA = "0x1804C1A80")]
	private bool CheckAir(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x4C1AC0", Offset = "0x4C06C0", VA = "0x1804C1AC0")]
	private bool CheckLand(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x4C15B0", Offset = "0x4C01B0", VA = "0x1804C15B0")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x4C2C90", Offset = "0x4C1890", VA = "0x1804C2C90")]
	private void UpdateLight()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x4C1B00", Offset = "0x4C0700", VA = "0x1804C1B00")]
	private bool CheckPlant(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x4C1450", Offset = "0x4C0050", VA = "0x1804C1450")]
	private bool AddZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x4C12F0", Offset = "0x4BFEF0", VA = "0x1804C12F0")]
	private bool AddPlant(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x4C1C20", Offset = "0x4C0820", VA = "0x1804C1C20", Slot = "36")]
	public override void Connected(Plant plant)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x4C2370", Offset = "0x4C0F70", VA = "0x1804C2370", Slot = "37")]
	public override void DisConnected()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x4C3AD0", Offset = "0x4C26D0", VA = "0x1804C3AD0")]
	public LaserUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Lawnf
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003C5")]
public class Lawnf : MonoBehaviour
{
	[Token(Token = "0x6001317")]
	[Address(RVA = "0x4315C0", Offset = "0x4301C0", VA = "0x1804315C0")]
	public static float[] CalculateProjectileParameters(Vector2 startPosition, float t1, Vector2 firstPlace, float t2, Vector2 secondPlace, float flightTime)
	{
		return null;
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x431790", Offset = "0x430390", VA = "0x180431790")]
	public static float[] CalculateProjectileWithSpeed(Vector2 projetilePosition, Vector2 targetVelocity, Vector2 targetCurrentPosition, float flightTime)
	{
		return null;
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x439400", Offset = "0x438000", VA = "0x180439400")]
	public static bool ValueBetween(float min, float value, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x4367D0", Offset = "0x4353D0", VA = "0x1804367D0")]
	public static Vector2 GetRandomGrid(int column, int row, out int Row, int columnRange, int rowRange)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x435BF0", Offset = "0x4347F0", VA = "0x180435BF0")]
	public static int GetPlantCount(PlantType theSeedType, Board board)
	{
		return default(int);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x434B00", Offset = "0x433700", VA = "0x180434B00")]
	public static Plant GetCertainPlant(int theColumn, int theRow, PlantType thePlantType, Board board)
	{
		return null;
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x434230", Offset = "0x432E30", VA = "0x180434230")]
	public static List<Plant> GetAllPlants()
	{
		return null;
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x439440", Offset = "0x438040", VA = "0x180439440")]
	public static void ZombieExplode(Vector2 position, Board board, bool isMindControlled, int theRow, Plant.DamageType damageType = Plant.DamageType.JackboxExplode)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x439220", Offset = "0x437E20", VA = "0x180439220")]
	public static bool TravelUnlockedPlant(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x438E50", Offset = "0x437A50", VA = "0x180438E50")]
	public static bool TravelAdvanced(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x439130", Offset = "0x437D30", VA = "0x180439130")]
	public static bool TravelUltimate(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x438F40", Offset = "0x437B40", VA = "0x180438F40")]
	public static bool TravelDebuff(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x433580", Offset = "0x432180", VA = "0x180433580")]
	public static bool EveBalaced()
	{
		return default(bool);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x433B20", Offset = "0x432720", VA = "0x180433B20")]
	public static List<Plant> Get3x3Plants(int theColumn, int theRow)
	{
		return null;
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x4338E0", Offset = "0x4324E0", VA = "0x1804338E0")]
	public static List<Plant> Get1x1Plants(int theColumn, int theRow)
	{
		return null;
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x438270", Offset = "0x436E70", VA = "0x180438270")]
	public static DroppedCard SetDroppedCard(Vector2 position, PlantType theSeedType, int theSeedCost = 0)
	{
		return null;
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x437590", Offset = "0x436190", VA = "0x180437590")]
	public static string GetTravelMapPath(int theRound)
	{
		return null;
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x437670", Offset = "0x436270", VA = "0x180437670")]
	public static SceneType GetTravelSceneType(int theRound)
	{
		return default(SceneType);
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x437D60", Offset = "0x436960", VA = "0x180437D60")]
	public static bool IsTravelLevel(LevelType theLevelType, int theLevelNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x439410", Offset = "0x438010", VA = "0x180439410")]
	public static bool WithTravelBuff(LevelType theLevelType, int theLevelNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x433850", Offset = "0x432450", VA = "0x180433850")]
	public static void FastBuffs(TravelMgr travel)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x4387A0", Offset = "0x4373A0", VA = "0x1804387A0")]
	public static void SetWaterSplat(Vector2 position, Vector2 scale, int row)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x437260", Offset = "0x435E60", VA = "0x180437260")]
	public static List<SpriteRenderer> GetSprites(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x434D00", Offset = "0x433900", VA = "0x180434D00")]
	public static List<GameObject> GetChilds(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x438DA0", Offset = "0x4379A0", VA = "0x180438DA0")]
	public static void SetZombieHealth(Zombie zombie, float ratio)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x437C20", Offset = "0x436820", VA = "0x180437C20")]
	public static bool IsCurrentAnimationComplete(Animator animator, int layer = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x439C00", Offset = "0x438800", VA = "0x180439C00")]
	public static bool ZombieWithIron(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x4332E0", Offset = "0x431EE0", VA = "0x1804332E0")]
	public static CardUI CreateCard(PlantType theSeedType, Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x431900", Offset = "0x430500", VA = "0x180431900")]
	private static void ChangeCardSprite(PlantType theSeedType, GameObject card)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x438450", Offset = "0x437050", VA = "0x180438450")]
	public static void SetMusic(Board board)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x435920", Offset = "0x434520", VA = "0x180435920")]
	public static int GetMagnetValue(BucketType bucketType)
	{
		return default(int);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x434EE0", Offset = "0x433AE0", VA = "0x180434EE0")]
	public static float GetGloveCD()
	{
		return default(float);
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x432F70", Offset = "0x431B70", VA = "0x180432F70")]
	public static void ConnectPlant(int column)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x432CE0", Offset = "0x4318E0", VA = "0x180432CE0")]
	public static void ClearPlant(PlantType thePlantType, Board board)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x436130", Offset = "0x434D30", VA = "0x180436130")]
	public static Vector2 GetRandomBox(Board board)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x436CE0", Offset = "0x4358E0", VA = "0x180436CE0")]
	public static ZombieType GetRandomUltimateZombie([Optional] List<ZombieType> excludeTypes, [Optional] List<ZombieType> extraTypes)
	{
		return default(ZombieType);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x436190", Offset = "0x434D90", VA = "0x180436190")]
	public static ZombieType GetRandomBungiType(bool ultimate)
	{
		return default(ZombieType);
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x435D30", Offset = "0x434930", VA = "0x180435D30")]
	public static Vector2 GetPlantPosition(Board board, int theColumn, int theRow, PlantType theSeedType, Vector2 pos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x434400", Offset = "0x433000", VA = "0x180434400")]
	public static List<Plant> GetBejeweledConnect(Plant plant)
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x435F50", Offset = "0x434B50", VA = "0x180435F50")]
	public static Plant GetPlant(int theColumn, int theRow, Board board)
	{
		return null;
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x4335E0", Offset = "0x4321E0", VA = "0x1804335E0")]
	public static void ExchangePlant(Plant plant1, Plant plant2, Board board)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x437ED0", Offset = "0x436AD0", VA = "0x180437ED0")]
	public static void SetAward(Board board, Vector2 position, bool killZombie = false)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x437100", Offset = "0x435D00", VA = "0x180437100")]
	public static int GetScaryPotNum(Board board)
	{
		return default(int);
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x436A70", Offset = "0x435670", VA = "0x180436A70")]
	public static List<PlantType> GetRandomPlant()
	{
		return null;
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x435280", Offset = "0x433E80", VA = "0x180435280")]
	public static PlantType GetHappyRandomPlantType(Board board)
	{
		return default(PlantType);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x437E60", Offset = "0x436A60", VA = "0x180437E60")]
	public static bool PresentLim(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x436A20", Offset = "0x435620", VA = "0x180436A20")]
	public static int GetRandomPlantLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x432CB0", Offset = "0x4318B0", VA = "0x180432CB0")]
	public static int CheckPlantClass(PlantType thePlantType)
	{
		return default(int);
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x437CB0", Offset = "0x4368B0", VA = "0x180437CB0")]
	public static bool IsSuperPlant(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x437D90", Offset = "0x436990", VA = "0x180437D90")]
	public static bool IsUltiPlant(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x4315B0", Offset = "0x4301B0", VA = "0x1804315B0")]
	public static bool BannedInAbyss(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x433E20", Offset = "0x432A20", VA = "0x180433E20")]
	public static AbyssStatistic GetAbyssStatistic(Board board)
	{
		return default(AbyssStatistic);
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x437420", Offset = "0x436020", VA = "0x180437420")]
	public static int GetSuperPlantCount(Board board)
	{
		return default(int);
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x435A90", Offset = "0x434690", VA = "0x180435A90")]
	public static int GetPlantCount(Board board)
	{
		return default(int);
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x4376C0", Offset = "0x4362C0", VA = "0x1804376C0")]
	public static int GetUltiPlantCount(Board board)
	{
		return default(int);
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x435F20", Offset = "0x434B20", VA = "0x180435F20")]
	public static int GetPlantUpgradeCost(PlantType thePlantType, int targetLevel)
	{
		return default(int);
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x4379E0", Offset = "0x4365E0", VA = "0x1804379E0")]
	public static int GetUpgradedPlantCost(PlantType thePlantType, int targetLevel)
	{
		return default(int);
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x431BA0", Offset = "0x4307A0", VA = "0x180431BA0")]
	public static bool CheckIfPlantUnlock(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x437090", Offset = "0x435C90", VA = "0x180437090")]
	public static Quaternion GetRotateFromSpeed(Vector2 direction)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x437A30", Offset = "0x436630", VA = "0x180437A30")]
	public static Vector2 GetVectorFromQuaternion(Quaternion quaternion)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x438AB0", Offset = "0x4376B0", VA = "0x180438AB0")]
	public static GameObject SetWaterSplat(Vector2 position, Vector2 scale, Board board, int row)
	{
		return null;
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x4390B0", Offset = "0x437CB0", VA = "0x1804390B0")]
	public static bool TravelHell()
	{
		return default(bool);
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x439030", Offset = "0x437C30", VA = "0x180439030")]
	public static bool TravelEndless()
	{
		return default(bool);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x437830", Offset = "0x436430", VA = "0x180437830")]
	public static List<PlantType> GetUltimatePlants()
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x434040", Offset = "0x432C40", VA = "0x180434040")]
	public static List<PlantType> GetAllPlantTypes()
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x437B90", Offset = "0x436790", VA = "0x180437B90")]
	public static bool InDodgeStatus(ZombieStatus zombieStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x6001359")]
	public static bool TryGetType<EnumType>(int id, out EnumType value)
	{
		return default(bool);
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x437E40", Offset = "0x436A40", VA = "0x180437E40")]
	public static void LessThan(int min, ref int value)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x437E50", Offset = "0x436A50", VA = "0x180437E50")]
	public static void MoreThan(int max, ref int value)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x437E20", Offset = "0x436A20", VA = "0x180437E20")]
	public static void LessThan(float min, ref float value)
	{
	}

	[Token(Token = "0x600135D")]
	public static Dictionary<TKey, Tvalue> GetDict<TKey, Tvalue>(string path) where TKey : Enum where Tvalue : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x435990", Offset = "0x434590", VA = "0x180435990")]
	public static int GetMowerCount(Board board)
	{
		return default(int);
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x439310", Offset = "0x437F10", VA = "0x180439310")]
	public static int TryGetStrikeDamage(float dmg)
	{
		return default(int);
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Lawnf()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LayerMaskMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003C9")]
public class LayerMaskMgr : MonoBehaviour
{
	[Token(Token = "0x4001079")]
	[FieldOffset(Offset = "0x0")]
	public static LayerMask plantBulletExclude;

	[Token(Token = "0x400107A")]
	[FieldOffset(Offset = "0x4")]
	public static LayerMask zombieBulletExclude;

	[Token(Token = "0x400107B")]
	[FieldOffset(Offset = "0x8")]
	public static LayerMask dreamBulletExclude;

	[Token(Token = "0x400107C")]
	[FieldOffset(Offset = "0xC")]
	public static LayerMask plantExclude;

	[Token(Token = "0x400107D")]
	[FieldOffset(Offset = "0x10")]
	public static LayerMask zombieExclude;

	[Token(Token = "0x400107E")]
	[FieldOffset(Offset = "0x14")]
	public static LayerMask hypnoZombieExclude;

	[Token(Token = "0x400107F")]
	[FieldOffset(Offset = "0x18")]
	public static LayerMask BulletLayer;

	[Token(Token = "0x4001080")]
	[FieldOffset(Offset = "0x1C")]
	public static LayerMask ZombieBulletLayer;

	[Token(Token = "0x4001081")]
	[FieldOffset(Offset = "0x20")]
	public static LayerMask MindControlledZombie;

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x439CF0", Offset = "0x4388F0", VA = "0x180439CF0")]
	public static void InitLayer()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LayerMaskMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LegionZombie
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D6")]
public class LegionZombie : Zombie
{
	[Token(Token = "0x20002D7")]
	[CompilerGenerated]
	private sealed class <DelayExplode>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000838")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000839")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400083A")]
		[FieldOffset(Offset = "0x20")]
		public LegionZombie <>4__this;

		[Token(Token = "0x400083B")]
		[FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x400083C")]
		[FieldOffset(Offset = "0x2C")]
		private int <j>5__3;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DelayExplode>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x390490", Offset = "0x38F090", VA = "0x180390490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x390740", Offset = "0x38F340", VA = "0x180390740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000835")]
	[FieldOffset(Offset = "0x220")]
	public ParticleSystem particle;

	[Token(Token = "0x4000836")]
	[FieldOffset(Offset = "0x228")]
	private int startColumn;

	[Token(Token = "0x4000837")]
	[FieldOffset(Offset = "0x22C")]
	private int endColumn;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x37FD90", Offset = "0x37E990", VA = "0x18037FD90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x381140", Offset = "0x37FD40", VA = "0x180381140", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x381490", Offset = "0x380090", VA = "0x180381490", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x3805A0", Offset = "0x37F1A0", VA = "0x1803805A0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x3803F0", Offset = "0x37EFF0", VA = "0x1803803F0")]
	private bool CheckAllLegionFall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x37FCB0", Offset = "0x37E8B0", VA = "0x18037FCB0", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x3803C0", Offset = "0x37EFC0", VA = "0x1803803C0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x380760", Offset = "0x37F360", VA = "0x180380760", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x380A90", Offset = "0x37F690", VA = "0x180380A90", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x37FDB0", Offset = "0x37E9B0", VA = "0x18037FDB0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x380D40", Offset = "0x37F940", VA = "0x180380D40", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x380770", Offset = "0x37F370", VA = "0x180380770")]
	private void PlayEatSound2()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x37FBC0", Offset = "0x37E7C0", VA = "0x18037FBC0")]
	private void AnimQuickMove()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x37F910", Offset = "0x37E510", VA = "0x18037F910")]
	private void AnimQuickMoveOver()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x37F890", Offset = "0x37E490", VA = "0x18037F890")]
	private void AnimExplode()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x380530", Offset = "0x37F130", VA = "0x180380530")]
	[IteratorStateMachine(typeof(<DelayExplode>d__20))]
	private IEnumerator DelayExplode()
	{
		return null;
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public LegionZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LevatationZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D8")]
public class LevatationZombie : Zombie
{
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x384110", Offset = "0x382D10", VA = "0x180384110", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x384A10", Offset = "0x383610", VA = "0x180384A10", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x384140", Offset = "0x382D40", VA = "0x180384140", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x384750", Offset = "0x383350", VA = "0x180384750", Slot = "26")]
	public override void DestoryZombie()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x384860", Offset = "0x383460", VA = "0x180384860", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public LevatationZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LevelName2
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003CA")]
public class LevelName2 : MonoBehaviour
{
	[Token(Token = "0x4001082")]
	[FieldOffset(Offset = "0x0")]
	public static LevelName2 Instance;

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x43A200", Offset = "0x438E00", VA = "0x18043A200")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LevelName2()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LevelName3
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003CB")]
public class LevelName3 : MonoBehaviour
{
	[Token(Token = "0x4001083")]
	[FieldOffset(Offset = "0x0")]
	public static LevelName3 Instance;

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x43A260", Offset = "0x438E60", VA = "0x18043A260")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LevelName3()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LevelType
using Il2CppDummyDll;

[Token(Token = "0x20003AB")]
public enum LevelType
{
	[Token(Token = "0x4000E50")]
	Nothing = -1,
	[Token(Token = "0x4000E51")]
	Advanture,
	[Token(Token = "0x4000E52")]
	Challenge,
	[Token(Token = "0x4000E53")]
	IZ,
	[Token(Token = "0x4000E54")]
	Survival,
	[Token(Token = "0x4000E55")]
	Explore,
	[Token(Token = "0x4000E56")]
	TravelAdvanture,
	[Token(Token = "0x4000E57")]
	SkinLevel,
	[Token(Token = "0x4000E58")]
	AbyssLevel
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LilyPad
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001A2")]
public class LilyPad : Plant
{
	[Token(Token = "0x4000687")]
	[FieldOffset(Offset = "0x1B8")]
	private BoxCollider2D[] col;

	[Token(Token = "0x4000688")]
	[FieldOffset(Offset = "0x1C0")]
	private SpriteRenderer r;

	[Token(Token = "0x4000689")]
	[FieldOffset(Offset = "0x1C8")]
	private float growTime;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x4C41C0", Offset = "0x4C2DC0", VA = "0x1804C41C0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x4C45B0", Offset = "0x4C31B0", VA = "0x1804C45B0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x4C42A0", Offset = "0x4C2EA0", VA = "0x1804C42A0")]
	private void SummonUpdate()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x4C3DA0", Offset = "0x4C29A0", VA = "0x1804C3DA0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x4C4540", Offset = "0x4C3140", VA = "0x1804C4540", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x4C3C50", Offset = "0x4C2850", VA = "0x1804C3C50")]
	private void ChangeSprite(PlantType type)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x4C3C10", Offset = "0x4C2810", VA = "0x1804C3C10")]
	private bool AllowChange(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public LilyPad()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LittleFly
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200012B")]
public class LittleFly : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[FieldOffset(Offset = "0x20")]
	protected Zombie target;

	[Token(Token = "0x40004F0")]
	[FieldOffset(Offset = "0x28")]
	protected float shootCountDown;

	[Token(Token = "0x40004F1")]
	[FieldOffset(Offset = "0x30")]
	protected Animator anim;

	[Token(Token = "0x40004F2")]
	[FieldOffset(Offset = "0x38")]
	protected bool onTarget;

	[Token(Token = "0x40004F3")]
	[FieldOffset(Offset = "0x3C")]
	protected readonly float moveSpeed;

	[Token(Token = "0x40004F4")]
	[FieldOffset(Offset = "0x40")]
	protected readonly float rotationSpeed;

	[Token(Token = "0x40004F5")]
	[FieldOffset(Offset = "0x44")]
	protected Vector3 offset;

	[Token(Token = "0x40004F6")]
	[FieldOffset(Offset = "0x50")]
	protected Transform axis;

	[Token(Token = "0x40004F7")]
	[FieldOffset(Offset = "0x58")]
	public GameObject shoot;

	[Token(Token = "0x40004F8")]
	[FieldOffset(Offset = "0x60")]
	public int theFlyRow;

	[Token(Token = "0x40004F9")]
	[FieldOffset(Offset = "0x68")]
	public Plant parentPlant;

	[Token(Token = "0x40004FA")]
	[FieldOffset(Offset = "0x70")]
	public float positionOffset;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x486770", Offset = "0x485370", VA = "0x180486770", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x4873F0", Offset = "0x485FF0", VA = "0x1804873F0", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x487360", Offset = "0x485F60", VA = "0x180487360")]
	protected void ShootUpdate()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x486920", Offset = "0x485520", VA = "0x180486920")]
	protected void FollowingTarget(Vector3 position)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x486D30", Offset = "0x485930", VA = "0x180486D30", Slot = "6")]
	protected virtual Zombie GetZombie()
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x486610", Offset = "0x485210", VA = "0x180486610", Slot = "7")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x487030", Offset = "0x485C30", VA = "0x180487030")]
	protected void SetLayer(GameObject obj)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x486890", Offset = "0x485490", VA = "0x180486890", Slot = "8")]
	public virtual void Die()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x4879B0", Offset = "0x4865B0", VA = "0x1804879B0")]
	public LittleFly()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LittleSquash
using System;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x200012C")]
public class LittleSquash : MonoBehaviour
{
	[Token(Token = "0x200012D")]
	private enum Status
	{
		[Token(Token = "0x4000509")]
		Default,
		[Token(Token = "0x400050A")]
		Moving,
		[Token(Token = "0x400050B")]
		Waiting,
		[Token(Token = "0x400050C")]
		Crashing,
		[Token(Token = "0x400050D")]
		Crashed
	}

	[Token(Token = "0x40004FB")]
	[FieldOffset(Offset = "0x20")]
	private Transform axis;

	[Token(Token = "0x40004FC")]
	[FieldOffset(Offset = "0x28")]
	private Transform shadow;

	[Token(Token = "0x40004FD")]
	[FieldOffset(Offset = "0x30")]
	public int theRow;

	[Token(Token = "0x40004FE")]
	[FieldOffset(Offset = "0x34")]
	public int theDamage;

	[Token(Token = "0x40004FF")]
	[FieldOffset(Offset = "0x38")]
	private Status status;

	[Token(Token = "0x4000500")]
	[FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x4000501")]
	[FieldOffset(Offset = "0x40")]
	private LayerMask zombieLayer;

	[Token(Token = "0x4000502")]
	[FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x4000503")]
	[FieldOffset(Offset = "0x50")]
	private Vector3 jumpTargetPosition;

	[Token(Token = "0x4000504")]
	[FieldOffset(Offset = "0x60")]
	private SortingGroup sortingGroup;

	[Token(Token = "0x4000505")]
	[FieldOffset(Offset = "0x68")]
	private int crashCount;

	[Token(Token = "0x4000506")]
	[FieldOffset(Offset = "0x6C")]
	private readonly float moveSpeed;

	[Token(Token = "0x4000507")]
	[FieldOffset(Offset = "0x70")]
	public Action<int, int> crashAction;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x487D20", Offset = "0x486920", VA = "0x180487D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x488770", Offset = "0x487370", VA = "0x180488770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x4888D0", Offset = "0x4874D0", VA = "0x1804888D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x488090", Offset = "0x486C90", VA = "0x180488090")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x487EA0", Offset = "0x486AA0", VA = "0x180487EA0")]
	private void NextStatus()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x487D10", Offset = "0x486910", VA = "0x180487D10")]
	private void AnimJump()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x488540", Offset = "0x487140", VA = "0x180488540")]
	private Zombie SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x4879D0", Offset = "0x4865D0", VA = "0x1804879D0")]
	private void AdjustPosition(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x487AD0", Offset = "0x4866D0", VA = "0x180487AD0")]
	private void AnimCrash()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x488930", Offset = "0x487530", VA = "0x180488930")]
	public LittleSquash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LookingStar
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200011D")]
public class LookingStar : MonoBehaviour
{
	[Token(Token = "0x200011E")]
	public struct PreStar
	{
		[Token(Token = "0x4000499")]
		[FieldOffset(Offset = "0x0")]
		public int theColumn;

		[Token(Token = "0x400049A")]
		[FieldOffset(Offset = "0x4")]
		public int theRow;

		[Token(Token = "0x400049B")]
		[FieldOffset(Offset = "0x8")]
		public PlantType thePlantType;

		[Token(Token = "0x400049C")]
		[FieldOffset(Offset = "0x10")]
		public GameObject preview;
	}

	[Token(Token = "0x4000495")]
	[FieldOffset(Offset = "0x20")]
	public LookingStar Instance;

	[Token(Token = "0x4000496")]
	[FieldOffset(Offset = "0x28")]
	public readonly List<PreStar> preStars;

	[Token(Token = "0x4000497")]
	[FieldOffset(Offset = "0x30")]
	private Board board;

	[Token(Token = "0x4000498")]
	[FieldOffset(Offset = "0x38")]
	private bool over;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x488950", Offset = "0x487550", VA = "0x180488950")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x488E30", Offset = "0x487A30", VA = "0x180488E30")]
	private void Update()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x488BF0", Offset = "0x4877F0", VA = "0x180488BF0")]
	private void SetPlantPreview(int theColumn, int theRow, PlantType thePlantType)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x488B50", Offset = "0x487750", VA = "0x180488B50")]
	private bool CheckPlant(int theColumn, int theRow, PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x489140", Offset = "0x487D40", VA = "0x180489140")]
	public LookingStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LookPlant
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000075")]
public class LookPlant : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[FieldOffset(Offset = "0x20")]
	private Vector3 originPosition;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x42F2B0", Offset = "0x42DEB0", VA = "0x18042F2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x42F140", Offset = "0x42DD40", VA = "0x18042F140")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x42F190", Offset = "0x42DD90", VA = "0x18042F190")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x42F090", Offset = "0x42DC90", VA = "0x18042F090")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x42F220", Offset = "0x42DE20", VA = "0x18042F220", Slot = "4")]
	protected virtual void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LookPlant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LookZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000076")]
public class LookZombie : MonoBehaviour
{
	[Token(Token = "0x400025F")]
	[FieldOffset(Offset = "0x20")]
	private Vector3 originPosition;

	[Token(Token = "0x4000260")]
	[FieldOffset(Offset = "0x30")]
	private SpriteRenderer r;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x42F2B0", Offset = "0x42DEB0", VA = "0x18042F2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x42F3A0", Offset = "0x42DFA0", VA = "0x18042F3A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x42F2F0", Offset = "0x42DEF0", VA = "0x18042F2F0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x42F3F0", Offset = "0x42DFF0", VA = "0x18042F3F0")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LookZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LoseMenuBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000019")]
public class LoseMenuBtn : MonoBehaviour
{
	[Token(Token = "0x200001A")]
	public enum LoseBtnType
	{
		[Token(Token = "0x4000094")]
		Quit,
		[Token(Token = "0x4000095")]
		Restart,
		[Token(Token = "0x4000096")]
		TryAgain
	}

	[Token(Token = "0x4000090")]
	[FieldOffset(Offset = "0x20")]
	public LoseBtnType type;

	[Token(Token = "0x4000091")]
	[FieldOffset(Offset = "0x24")]
	private Vector3 originPosition;

	[Token(Token = "0x4000092")]
	[FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x31B0F0", Offset = "0x319CF0", VA = "0x18031B0F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x30D2C0", Offset = "0x30BEC0", VA = "0x18030D2C0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x31ADC0", Offset = "0x3199C0", VA = "0x18031ADC0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x31AE50", Offset = "0x319A50", VA = "0x18031AE50")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LoseMenuBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// LourFly
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200022E")]
public class LourFly : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	[FieldOffset(Offset = "0x20")]
	public Vector2 targetPosition;

	[Token(Token = "0x400072A")]
	[FieldOffset(Offset = "0x28")]
	public Transform shootPos;

	[Token(Token = "0x400072B")]
	[FieldOffset(Offset = "0x30")]
	public int theRow;

	[Token(Token = "0x400072C")]
	[FieldOffset(Offset = "0x38")]
	public CattailLour lour;

	[Token(Token = "0x400072D")]
	[FieldOffset(Offset = "0x40")]
	private bool arrived;

	[Token(Token = "0x400072E")]
	[FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x400072F")]
	[FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x33B800", Offset = "0x33A400", VA = "0x18033B800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x33B440", Offset = "0x33A040", VA = "0x18033B440")]
	private void ShootUpdate()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x33B240", Offset = "0x339E40", VA = "0x18033B240")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public LourFly()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MachineNut
using Il2CppDummyDll;

[Token(Token = "0x20001A3")]
public class MachineNut : WallNut
{
	[Token(Token = "0x400068A")]
	[FieldOffset(Offset = "0x1B8")]
	private int machineType;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x4C4710", Offset = "0x4C3310", VA = "0x1804C4710")]
	public void TurnStatus(int type)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x4C4650", Offset = "0x4C3250", VA = "0x1804C4650", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x4BD890", Offset = "0x4BC490", VA = "0x1804BD890", Slot = "23")]
	protected override void LimHealth()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x4C4700", Offset = "0x4C3300", VA = "0x1804C4700", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public MachineNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MachineNutZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002D9")]
public class MachineNutZombie : Zombie
{
	[Token(Token = "0x20002DA")]
	private enum MachineType
	{
		[Token(Token = "0x400083F")]
		Default,
		[Token(Token = "0x4000840")]
		Red,
		[Token(Token = "0x4000841")]
		Blue
	}

	[Token(Token = "0x400083D")]
	[FieldOffset(Offset = "0x220")]
	private MachineType machineType;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x385BE0", Offset = "0x3847E0", VA = "0x180385BE0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x3853F0", Offset = "0x383FF0", VA = "0x1803853F0", Slot = "55")]
	protected virtual void InitType()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x385340", Offset = "0x383F40", VA = "0x180385340", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x384A70", Offset = "0x383670", VA = "0x180384A70", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x35F2D0", Offset = "0x35DED0", VA = "0x18035F2D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x385870", Offset = "0x384470", VA = "0x180385870", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x384CB0", Offset = "0x3838B0", VA = "0x180384CB0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	public override void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "36")]
	public override void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "37")]
	public override void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x3858A0", Offset = "0x3844A0", VA = "0x1803858A0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public MachineNutZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetBlover
using Il2CppDummyDll;

[Token(Token = "0x20001A4")]
public class MagnetBlover : Magnetshroom
{
	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x4C5490", Offset = "0x4C4090", VA = "0x1804C5490", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x4C4E60", Offset = "0x4C3A60", VA = "0x1804C4E60")]
	private void AnimBlow()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x339B70", Offset = "0x338770", VA = "0x180339B70")]
	protected void DelayDie()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x4C4F70", Offset = "0x4C3B70", VA = "0x1804C4F70", Slot = "45")]
	protected virtual void BlowZombie()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x4C50E0", Offset = "0x4C3CE0", VA = "0x1804C50E0", Slot = "42")]
	protected override void MoveIronItem()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x4C51F0", Offset = "0x4C3DF0", VA = "0x1804C51F0", Slot = "39")]
	protected override void SearchZombieWithIron()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x4C0050", Offset = "0x4BEC50", VA = "0x1804C0050")]
	public MagnetBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetBox
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x20001A5")]
public class MagnetBox : Plant
{
	[Token(Token = "0x400068B")]
	[FieldOffset(Offset = "0x1B8")]
	public int value;

	[Token(Token = "0x400068C")]
	[FieldOffset(Offset = "0x1BC")]
	private readonly int outPutCount;

	[Token(Token = "0x400068D")]
	[FieldOffset(Offset = "0x1C0")]
	private TextMeshPro valueText;

	[Token(Token = "0x400068E")]
	[FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private List<MagnetInterface> interfaces;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x339B90", Offset = "0x338790", VA = "0x180339B90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x4C5E00", Offset = "0x4C4A00", VA = "0x1804C5E00", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x4C5C00", Offset = "0x4C4800", VA = "0x1804C5C00", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x4C55F0", Offset = "0x4C41F0", VA = "0x1804C55F0")]
	private void InitValueText()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x4C55C0", Offset = "0x4C41C0", VA = "0x1804C55C0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x4C5EA0", Offset = "0x4C4AA0", VA = "0x1804C5EA0", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x4C5500", Offset = "0x4C4100", VA = "0x1804C5500")]
	public void AddMagnet(BucketType bucketType, Bucket item)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x4C5C20", Offset = "0x4C4820", VA = "0x1804C5C20", Slot = "33")]
	public override void UpdateMagnetCount(int count)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x4C5910", Offset = "0x4C4510", VA = "0x1804C5910")]
	private void InterfaceUpdate()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x4C5EC0", Offset = "0x4C4AC0", VA = "0x1804C5EC0")]
	public MagnetBox()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetCactus
using Il2CppDummyDll;

[Token(Token = "0x200022F")]
public class MagnetCactus : Cactus
{
	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x33B820", Offset = "0x33A420", VA = "0x18033B820", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x33B970", Offset = "0x33A570", VA = "0x18033B970", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public MagnetCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetCorn
using Il2CppDummyDll;

[Token(Token = "0x2000230")]
public class MagnetCorn : Cornpult
{
	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x33BAE0", Offset = "0x33A6E0", VA = "0x18033BAE0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x33BAD0", Offset = "0x33A6D0", VA = "0x18033BAD0", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public MagnetCorn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetFume
using Il2CppDummyDll;

[Token(Token = "0x2000231")]
public class MagnetFume : FumeShroom
{
	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x33BAF0", Offset = "0x33A6F0", VA = "0x18033BAF0", Slot = "43")]
	protected override void Attack(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x33BB50", Offset = "0x33A750", VA = "0x18033BB50", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public MagnetFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetInterface
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x20001A6")]
public class MagnetInterface : Plant
{
	[Token(Token = "0x400068F")]
	[FieldOffset(Offset = "0x1B8")]
	public int energy;

	[Token(Token = "0x4000690")]
	[FieldOffset(Offset = "0x1BC")]
	public readonly int fullEnergy;

	[Token(Token = "0x4000691")]
	[FieldOffset(Offset = "0x1C0")]
	private BucketType setType;

	[Token(Token = "0x4000692")]
	[FieldOffset(Offset = "0x1C8")]
	private TextMeshPro valueText;

	[Token(Token = "0x4000693")]
	[FieldOffset(Offset = "0x1D0")]
	private GameObject theBucket;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x4C67C0", Offset = "0x4C53C0", VA = "0x1804C67C0", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x4C66F0", Offset = "0x4C52F0", VA = "0x1804C66F0")]
	public int Supply(int value)
	{
		return default(int);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x4B5BA0", Offset = "0x4B47A0", VA = "0x1804B5BA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x4C5F50", Offset = "0x4C4B50", VA = "0x1804C5F50", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x4C6720", Offset = "0x4C5320", VA = "0x1804C6720", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x4C66D0", Offset = "0x4C52D0", VA = "0x1804C66D0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x4C63B0", Offset = "0x4C4FB0", VA = "0x1804C63B0")]
	private void InitValueText()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x4C6B90", Offset = "0x4C5790", VA = "0x1804C6B90")]
	public MagnetInterface()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetLine
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000348")]
public class MagnetLine : MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	[FieldOffset(Offset = "0x20")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000AF7")]
	[FieldOffset(Offset = "0x28")]
	public int firstColumn;

	[Token(Token = "0x4000AF8")]
	[FieldOffset(Offset = "0x2C")]
	public int firstRow;

	[Token(Token = "0x4000AF9")]
	[FieldOffset(Offset = "0x30")]
	public int secondColumn;

	[Token(Token = "0x4000AFA")]
	[FieldOffset(Offset = "0x34")]
	public int secondRow;

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x3CA870", Offset = "0x3C9470", VA = "0x1803CA870")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x3CA8C0", Offset = "0x3C94C0", VA = "0x1803CA8C0")]
	public void SetLinePositions(int column0, int row0, int column1, int row1)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MagnetLine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetLineMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000349")]
public class MagnetLineMgr : MonoBehaviour
{
	[Token(Token = "0x4000AFB")]
	[FieldOffset(Offset = "0x0")]
	public static MagnetLineMgr Instance;

	[Token(Token = "0x4000AFC")]
	[FieldOffset(Offset = "0x20")]
	public List<MagnetLine> magnetLines;

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x3CA0D0", Offset = "0x3C8CD0", VA = "0x1803CA0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x3CA2D0", Offset = "0x3C8ED0", VA = "0x1803CA2D0")]
	public MagnetLine GetLine(int column0, int row0, int column1, int row1)
	{
		return null;
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x3CA790", Offset = "0x3C9390", VA = "0x1803CA790")]
	private bool SameLine(MagnetLine magnetLine, int column0, int row0, int column1, int row1)
	{
		return default(bool);
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x3CA130", Offset = "0x3C8D30", VA = "0x1803CA130")]
	public MagnetLine DestoryLine(int column0, int row0, int column1, int row1)
	{
		return null;
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x3CA7F0", Offset = "0x3C93F0", VA = "0x1803CA7F0")]
	public MagnetLineMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetPumpkin
using Il2CppDummyDll;

[Token(Token = "0x20001A8")]
public class MagnetPumpkin : Pumpkin
{
	[Token(Token = "0x6000809")]
	[Address(RVA = "0x4C7110", Offset = "0x4C5D10", VA = "0x1804C7110", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x4C6BB0", Offset = "0x4C57B0", VA = "0x1804C6BB0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public MagnetPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Magnetshroom
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001A9")]
public class Magnetshroom : Plant
{
	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <MoveObject>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069F")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A0")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A1")]
		[FieldOffset(Offset = "0x20")]
		public GameObject obj;

		[Token(Token = "0x40006A2")]
		[FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40006A3")]
		[FieldOffset(Offset = "0x2C")]
		public Vector2 targetPosition;

		[Token(Token = "0x40006A4")]
		[FieldOffset(Offset = "0x34")]
		private Vector2 <startPosition>5__2;

		[Token(Token = "0x40006A5")]
		[FieldOffset(Offset = "0x3C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveObject>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x4D2920", Offset = "0x4D1520", VA = "0x1804D2920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x4D2B90", Offset = "0x4D1790", VA = "0x1804D2B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000699")]
	[FieldOffset(Offset = "0x1B8")]
	private BucketType attrackType;

	[Token(Token = "0x400069A")]
	[FieldOffset(Offset = "0x1C0")]
	public GameObject targetItem;

	[Token(Token = "0x400069B")]
	[FieldOffset(Offset = "0x1C8")]
	protected float attrackRange;

	[Token(Token = "0x400069C")]
	[FieldOffset(Offset = "0x1CC")]
	protected float attrackMaxTime;

	[Token(Token = "0x400069D")]
	[FieldOffset(Offset = "0x1D0")]
	protected float rangeRow;

	[Token(Token = "0x400069E")]
	[FieldOffset(Offset = "0x1D4")]
	private LayerMask magnetLayer;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x4C7B80", Offset = "0x4C6780", VA = "0x1804C7B80", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x4C7F70", Offset = "0x4C6B70", VA = "0x1804C7F70", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x4C81C0", Offset = "0x4C6DC0", VA = "0x1804C81C0", Slot = "39")]
	protected virtual void SearchZombieWithIron()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x4C8710", Offset = "0x4C7310", VA = "0x1804C8710")]
	protected bool TryAttrackZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x4C7130", Offset = "0x4C5D30", VA = "0x1804C7130", Slot = "40")]
	protected virtual void AttrackItem(GameObject item, int theRow)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x4C7C50", Offset = "0x4C6850", VA = "0x1804C7C50", Slot = "41")]
	protected virtual void ChangeLayer()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x4C8020", Offset = "0x4C6C20", VA = "0x1804C8020", Slot = "42")]
	protected virtual void MoveIronItem()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x4C86A0", Offset = "0x4C72A0", VA = "0x1804C86A0", Slot = "43")]
	protected virtual void SetItemUseable(GameObject obj)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x4C8120", Offset = "0x4C6D20", VA = "0x1804C8120", Slot = "44")]
	[IteratorStateMachine(typeof(<MoveObject>d__14))]
	protected virtual IEnumerator MoveObject(GameObject obj, Vector2 targetPosition, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x4C7770", Offset = "0x4C6370", VA = "0x1804C7770", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x4C7DF0", Offset = "0x4C69F0", VA = "0x1804C7DF0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x4C0050", Offset = "0x4BEC50", VA = "0x1804C0050")]
	public Magnetshroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MagnetSystem
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200034A")]
public class MagnetSystem : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[FieldOffset(Offset = "0x0")]
	public static List<Plant> plants;

	[Token(Token = "0x4000AFE")]
	[FieldOffset(Offset = "0x8")]
	private static readonly List<List<Plant>> systems;

	[Token(Token = "0x4000AFF")]
	[FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<Plant, List<Plant>> adjacencyList;

	[Token(Token = "0x4000B00")]
	[FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<(Plant, Plant), MagnetLine> edgeLines;

	[Token(Token = "0x4000B01")]
	[FieldOffset(Offset = "0x20")]
	private static readonly HashSet<(Plant, Plant)> activeEdges;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x3CB860", Offset = "0x3CA460", VA = "0x1803CB860")]
	public static List<Plant> GetPlants(Plant plant)
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x3CBDB0", Offset = "0x3CA9B0", VA = "0x1803CBDB0")]
	public static void MagnetSystemUpdate()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x3CAF50", Offset = "0x3C9B50", VA = "0x1803CAF50")]
	private static void BuildAdjacencyList()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x3CBB60", Offset = "0x3CA760", VA = "0x1803CBB60")]
	private static void GroupMushroomsIntoSystems()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x3CAA80", Offset = "0x3C9680", VA = "0x1803CAA80")]
	private static void BFS(Plant start, List<Plant> system, HashSet<Plant> visited)
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x3CB400", Offset = "0x3CA000", VA = "0x1803CB400")]
	private static void DestroyUnusedLines(HashSet<Plant> visited)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MagnetSystem()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Main
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003DA")]
public class Main : MonoBehaviour
{
	[Token(Token = "0x40010BD")]
	[FieldOffset(Offset = "0x20")]
	public GameObject playerPrefab;

	[Token(Token = "0x40010BE")]
	[FieldOffset(Offset = "0x28")]
	public BasePlayer myPlayer;

	[Token(Token = "0x40010BF")]
	[FieldOffset(Offset = "0x30")]
	public Dictionary<string, BasePlayer> otherPlayer;

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x43A520", Offset = "0x439120", VA = "0x18043A520")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x43AA70", Offset = "0x439670", VA = "0x18043AA70")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x43A2C0", Offset = "0x438EC0", VA = "0x18043A2C0")]
	private void OnEnter(string msgValue)
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x43AAB0", Offset = "0x4396B0", VA = "0x18043AAB0")]
	public Main()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MainMenu
using Il2CppDummyDll;

[Token(Token = "0x2000022")]
public class MainMenu : BaseMenu
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x31B8C0", Offset = "0x31A4C0", VA = "0x18031B8C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x31B180", Offset = "0x319D80", VA = "0x18031B180")]
	private void AnimOver()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public MainMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MainMenu_Btn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000023")]
public class MainMenu_Btn : MonoBehaviour
{
	[Token(Token = "0x40000AA")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x40000AB")]
	[FieldOffset(Offset = "0x28")]
	public int buttonNumber;

	[Token(Token = "0x40000AC")]
	[FieldOffset(Offset = "0x30")]
	public GameObject thisMenu;

	[Token(Token = "0x40000AD")]
	[FieldOffset(Offset = "0x38")]
	private Sprite originSprite;

	[Token(Token = "0x40000AE")]
	[FieldOffset(Offset = "0x40")]
	private Image image;

	[Token(Token = "0x40000AF")]
	[FieldOffset(Offset = "0x48")]
	private Vector3 originPosition;

	[Token(Token = "0x40000B0")]
	[FieldOffset(Offset = "0x58")]
	private RectTransform rectTransform;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x31B7F0", Offset = "0x31A3F0", VA = "0x18031B7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x31B2C0", Offset = "0x319EC0", VA = "0x18031B2C0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x31B340", Offset = "0x319F40", VA = "0x18031B340")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x31B1F0", Offset = "0x319DF0", VA = "0x18031B1F0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x31B3A0", Offset = "0x319FA0", VA = "0x18031B3A0")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MainMenu_Btn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MapConfig
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000393")]
public class MapConfig : MonoBehaviour
{
	[Token(Token = "0x4000C73")]
	[FieldOffset(Offset = "0x0")]
	public static MapConfig Instance;

	[Token(Token = "0x4000C74")]
	[FieldOffset(Offset = "0x20")]
	public List<Vector3> pathPointList;

	[Token(Token = "0x4000C75")]
	[FieldOffset(Offset = "0x28")]
	public readonly float minDistance;

	[Token(Token = "0x1700007C")]
	public float EndPoint
	{
		[Token(Token = "0x600127A")]
		[Address(RVA = "0x3E9EC0", Offset = "0x3E8AC0", VA = "0x1803E9EC0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x3E9ED0", Offset = "0x3E8AD0", VA = "0x1803E9ED0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x3E9C00", Offset = "0x3E8800", VA = "0x1803E9C00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x3E9C90", Offset = "0x3E8890", VA = "0x1803E9C90")]
	public Vector3 GetPosition(float progress)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x3E9DF0", Offset = "0x3E89F0", VA = "0x1803E9DF0")]
	public void InitMapConfig()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x3E9E40", Offset = "0x3E8A40", VA = "0x1803E9E40")]
	public MapConfig()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Marigold
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x20001EE")]
public class Marigold : Plant
{
	[Token(Token = "0x20001EF")]
	[CompilerGenerated]
	private sealed class <SunBright>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FB")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FC")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FD")]
		[FieldOffset(Offset = "0x20")]
		public Marigold <>4__this;

		[Token(Token = "0x40006FE")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x4E0ED0", Offset = "0x4DFAD0", VA = "0x1804E0ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x4E11F0", Offset = "0x4DFDF0", VA = "0x1804E11F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x4D7840", Offset = "0x4D6440", VA = "0x1804D7840", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x4D7410", Offset = "0x4D6010", VA = "0x1804D7410")]
	private void MarigoldUpdate()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x4D77D0", Offset = "0x4D63D0", VA = "0x1804D77D0")]
	[IteratorStateMachine(typeof(<SunBright>d__2))]
	private IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x4D7680", Offset = "0x4D6280", VA = "0x1804D7680")]
	private void Produce()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x4D7540", Offset = "0x4D6140", VA = "0x1804D7540", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Marigold()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MelonCannon
using Il2CppDummyDll;

[Token(Token = "0x20001AB")]
public class MelonCannon : CobCannon
{
	[Token(Token = "0x600081E")]
	[Address(RVA = "0x4C8C90", Offset = "0x4C7890", VA = "0x1804C8C90", Slot = "40")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x4C8EA0", Offset = "0x4C7AA0", VA = "0x1804C8EA0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public MelonCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MelonFume
using Il2CppDummyDll;

[Token(Token = "0x2000232")]
public class MelonFume : Melonpult
{
	[Token(Token = "0x4000730")]
	[FieldOffset(Offset = "0x1D0")]
	protected float timer;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x33BD40", Offset = "0x33A940", VA = "0x18033BD40", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x33BE30", Offset = "0x33AA30", VA = "0x18033BE30", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x33BCD0", Offset = "0x33A8D0", VA = "0x18033BCD0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x33BED0", Offset = "0x33AAD0", VA = "0x18033BED0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x33BE40", Offset = "0x33AA40", VA = "0x18033BE40", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x33BE70", Offset = "0x33AA70", VA = "0x18033BE70", Slot = "46")]
	protected override void UniqueEffect(Bullet bullet)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x33BD60", Offset = "0x33A960", VA = "0x18033BD60", Slot = "43")]
	protected override bool CheckRange(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public MelonFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Melonpult
using Il2CppDummyDll;

[Token(Token = "0x2000233")]
public class Melonpult : Thrower
{
	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x33BF20", Offset = "0x33AB20", VA = "0x18033BF20", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x33BF40", Offset = "0x33AB40", VA = "0x18033BF40", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x33BF30", Offset = "0x33AB30", VA = "0x18033BF30", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public Melonpult()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MelonUmbrella
using Il2CppDummyDll;

[Token(Token = "0x20001AC")]
public class MelonUmbrella : CornUmbrella
{
	[Token(Token = "0x40006A6")]
	[FieldOffset(Offset = "0x1C8")]
	public int storgedDamage;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x4C9260", Offset = "0x4C7E60", VA = "0x1804C9260", Slot = "39")]
	public override void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x4C8EF0", Offset = "0x4C7AF0", VA = "0x1804C8EF0", Slot = "41")]
	protected override void BlockZombies()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public MelonUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MenuMaker
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200039F")]
public class MenuMaker : MonoBehaviour
{
	[Token(Token = "0x4000CB9")]
	[FieldOffset(Offset = "0x20")]
	public Sprite topLeft;

	[Token(Token = "0x4000CBA")]
	[FieldOffset(Offset = "0x28")]
	public Sprite topRight;

	[Token(Token = "0x4000CBB")]
	[FieldOffset(Offset = "0x30")]
	public Sprite top;

	[Token(Token = "0x4000CBC")]
	[FieldOffset(Offset = "0x38")]
	public Sprite leftMid;

	[Token(Token = "0x4000CBD")]
	[FieldOffset(Offset = "0x40")]
	public Sprite mid;

	[Token(Token = "0x4000CBE")]
	[FieldOffset(Offset = "0x48")]
	public Sprite rightMid;

	[Token(Token = "0x4000CBF")]
	[FieldOffset(Offset = "0x50")]
	public Sprite bottomLeft;

	[Token(Token = "0x4000CC0")]
	[FieldOffset(Offset = "0x58")]
	public Sprite bottomRight;

	[Token(Token = "0x4000CC1")]
	[FieldOffset(Offset = "0x60")]
	public Sprite bottom;

	[Token(Token = "0x4000CC2")]
	[FieldOffset(Offset = "0x68")]
	public List<Image> clips;

	[Token(Token = "0x4000CC3")]
	[FieldOffset(Offset = "0x70")]
	public bool set;

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x412E80", Offset = "0x411A80", VA = "0x180412E80")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x413060", Offset = "0x411C60", VA = "0x180413060")]
	public void SetMenu(int x, int y)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x413210", Offset = "0x411E10", VA = "0x180413210")]
	public void SetPosition(int x, int y)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x412620", Offset = "0x411220", VA = "0x180412620")]
	public void CreateObjects(int x, int y)
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x413870", Offset = "0x412470", VA = "0x180413870")]
	public MenuMaker()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MindControl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000007")]
public class MindControl : MonoBehaviour
{
	[Token(Token = "0x6000014")]
	[Address(RVA = "0x31B980", Offset = "0x31A580", VA = "0x18031B980")]
	private void Die()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MindControl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MinerZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002DB")]
public class MinerZombie : Zombie
{
	[Token(Token = "0x4000842")]
	[FieldOffset(Offset = "0x220")]
	public AudioSource audioSource;

	[Token(Token = "0x4000843")]
	[FieldOffset(Offset = "0x228")]
	public bool audioSourcePlaying;

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x3865D0", Offset = "0x3851D0", VA = "0x1803865D0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x385C60", Offset = "0x384860", VA = "0x180385C60")]
	private bool AvaliableToPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x3865C0", Offset = "0x3851C0", VA = "0x1803865C0", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x3865B0", Offset = "0x3851B0", VA = "0x1803865B0", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x3867C0", Offset = "0x3853C0", VA = "0x1803867C0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x385F60", Offset = "0x384B60", VA = "0x180385F60")]
	private void MinerUpdate()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x3861F0", Offset = "0x384DF0", VA = "0x1803861F0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x386730", Offset = "0x385330", VA = "0x180386730")]
	private void Surprised()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x385EA0", Offset = "0x384AA0", VA = "0x180385EA0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x385F50", Offset = "0x384B50", VA = "0x180385F50")]
	private void ChangeStatus()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x386420", Offset = "0x385020", VA = "0x180386420")]
	public void Rise()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public MinerZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MiniMapMask
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000309")]
public class MiniMapMask : MonoBehaviour
{
	[Token(Token = "0x4000961")]
	[FieldOffset(Offset = "0x20")]
	private Camera mainCamera;

	[Token(Token = "0x4000962")]
	[FieldOffset(Offset = "0x28")]
	private readonly Vector3[] frustumCorners;

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x3BA970", Offset = "0x3B9570", VA = "0x1803BA970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x3BA9A0", Offset = "0x3B95A0", VA = "0x1803BA9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x3BAC30", Offset = "0x3B9830", VA = "0x1803BAC30")]
	public MiniMapMask()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MixBomb
using Il2CppDummyDll;

[Token(Token = "0x20001AD")]
public class MixBomb : Plant
{
	[Token(Token = "0x6000824")]
	[Address(RVA = "0x4C9D00", Offset = "0x4C8900", VA = "0x1804C9D00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x4C9420", Offset = "0x4C8020", VA = "0x1804C9420", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public MixBomb()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MixData
using Il2CppDummyDll;

[Token(Token = "0x200014F")]
public class MixData
{
	[Token(Token = "0x2000150")]
	public class DisMixData
	{
		[Token(Token = "0x4000623")]
		[FieldOffset(Offset = "0x10")]
		public PlantType theFirstParent;

		[Token(Token = "0x4000624")]
		[FieldOffset(Offset = "0x14")]
		public PlantType theSecondParent;

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public DisMixData()
		{
		}
	}

	[Token(Token = "0x4000620")]
	[FieldOffset(Offset = "0x0")]
	public static int[,] data;

	[Token(Token = "0x4000621")]
	[FieldOffset(Offset = "0x8")]
	public static int[,] randomData;

	[Token(Token = "0x4000622")]
	[FieldOffset(Offset = "0x10")]
	public static DisMixData[] disMixDatas;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x493060", Offset = "0x491C60", VA = "0x180493060")]
	public static void InitDisMixData()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x4933D0", Offset = "0x491FD0", VA = "0x1804933D0")]
	public static void InitMixData()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x48E760", Offset = "0x48D360", VA = "0x18048E760")]
	public static void FirstMix()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x494690", Offset = "0x493290", VA = "0x180494690")]
	public static void PuffMix()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x4923A0", Offset = "0x490FA0", VA = "0x1804923A0")]
	private static void FogPlant()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x494CA0", Offset = "0x4938A0", VA = "0x180494CA0")]
	private static void RoofPlant()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x4935D0", Offset = "0x4921D0", VA = "0x1804935D0")]
	private static void InitTravel()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x49A8A0", Offset = "0x4994A0", VA = "0x18049A8A0")]
	private static void SubInit()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x49A700", Offset = "0x499300", VA = "0x18049A700")]
	private static void SpecialPlant()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x499480", Offset = "0x498080", VA = "0x180499480")]
	public static void SetPlants(int level)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x498590", Offset = "0x497190", VA = "0x180498590")]
	private static void SetPlantsInLv27()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x498350", Offset = "0x496F50", VA = "0x180498350")]
	private static void SetPlantsInLv26()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x498020", Offset = "0x496C20", VA = "0x180498020")]
	private static void SetPlantsInLv25()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x497DB0", Offset = "0x4969B0", VA = "0x180497DB0")]
	private static void SetPlantsInLv24()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x497B50", Offset = "0x496750", VA = "0x180497B50")]
	private static void SetPlantsInLv23()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x4978F0", Offset = "0x4964F0", VA = "0x1804978F0")]
	private static void SetPlantsInLv22()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x497690", Offset = "0x496290", VA = "0x180497690")]
	private static void SetPlantsInLv21()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x497430", Offset = "0x496030", VA = "0x180497430")]
	private static void SetPlantsInLv20()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x4971D0", Offset = "0x495DD0", VA = "0x1804971D0")]
	private static void SetPlantsInLv19()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x492FD0", Offset = "0x491BD0", VA = "0x180492FD0")]
	private static PlantType GetRandomNumberInNumbers(PlantType[] numbers)
	{
		return default(PlantType);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x4988B0", Offset = "0x4974B0", VA = "0x1804988B0")]
	private static void SetPlantsInLv2()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x4989E0", Offset = "0x4975E0", VA = "0x1804989E0")]
	private static void SetPlantsInLv3()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x498B30", Offset = "0x497730", VA = "0x180498B30")]
	private static void SetPlantsInLv4()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x498CB0", Offset = "0x4978B0", VA = "0x180498CB0")]
	private static void SetPlantsInLv5()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x498DE0", Offset = "0x4979E0", VA = "0x180498DE0")]
	private static void SetPlantsInLv6()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x498F10", Offset = "0x497B10", VA = "0x180498F10")]
	private static void SetPlantsInLv7()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x4990E0", Offset = "0x497CE0", VA = "0x1804990E0")]
	private static void SetPlantsInLv8()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x4992B0", Offset = "0x497EB0", VA = "0x1804992B0")]
	private static void SetPlantsInLv9()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x495D70", Offset = "0x494970", VA = "0x180495D70")]
	private static void SetPlantsInLv10()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x495F40", Offset = "0x494B40", VA = "0x180495F40")]
	private static void SetPlantsInLv11()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x496110", Offset = "0x494D10", VA = "0x180496110")]
	private static void SetPlantsInLv12()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x4962E0", Offset = "0x494EE0", VA = "0x1804962E0")]
	private static void SetPlantsInLv13()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x496540", Offset = "0x495140", VA = "0x180496540")]
	private static void SetPlantsInLv14()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x4967D0", Offset = "0x4953D0", VA = "0x1804967D0")]
	private static void SetPlantsInLv15()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x496A50", Offset = "0x495650", VA = "0x180496A50")]
	private static void SetPlantsInLv16()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x496CE0", Offset = "0x4958E0", VA = "0x180496CE0")]
	private static void SetPlantsInLv17()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x496F70", Offset = "0x495B70", VA = "0x180496F70")]
	private static void SetPlantsInLv18()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public MixData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Money
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x200012E")]
public class Money : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[FieldOffset(Offset = "0x0")]
	public static Money Instance;

	[Token(Token = "0x400050F")]
	[FieldOffset(Offset = "0x20")]
	public Transform moneyPos;

	[Token(Token = "0x4000510")]
	[FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x4000511")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI beanCount;

	[Token(Token = "0x4000512")]
	[FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI beanCount2;

	[Token(Token = "0x4000513")]
	[FieldOffset(Offset = "0x40")]
	public GameObject count;

	[Token(Token = "0x4000514")]
	[FieldOffset(Offset = "0x48")]
	private Board board;

	[Token(Token = "0x4000515")]
	[FieldOffset(Offset = "0x50")]
	private readonly Dictionary<PlantType, PlantType> plantUpgrades;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x49B0E0", Offset = "0x499CE0", VA = "0x18049B0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x49C190", Offset = "0x49AD90", VA = "0x18049C190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x49B160", Offset = "0x499D60", VA = "0x18049B160")]
	public void EnableMoneyBank()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x49BA60", Offset = "0x49A660", VA = "0x18049BA60")]
	public void ReinforcePlant(Plant plant)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x49C330", Offset = "0x49AF30", VA = "0x18049C330")]
	private void UsedEvent(int theColumn, int theRow, int cost)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x49B380", Offset = "0x499F80", VA = "0x18049B380")]
	private void OtherSuperSkill(Plant originalPlant)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x49B220", Offset = "0x499E20", VA = "0x18049B220")]
	private int GetUpgradeCost(PlantType thePlantType)
	{
		return default(int);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x49B190", Offset = "0x499D90", VA = "0x18049B190")]
	private int GetSuperSkillCost(PlantType thePlantType)
	{
		return default(int);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x49C460", Offset = "0x49B060", VA = "0x18049C460")]
	public Money()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyCabbage
using Il2CppDummyDll;

[Token(Token = "0x2000234")]
public class MoneyCabbage : Cabbage
{
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x33C0C0", Offset = "0x33ACC0", VA = "0x18033C0C0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x33BF50", Offset = "0x33AB50", VA = "0x18033BF50", Slot = "30")]
	protected override void AnimSuperShoot()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x33C0E0", Offset = "0x33ACE0", VA = "0x18033C0E0", Slot = "45")]
	protected override void ShootZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public MoneyCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyCorn
using Il2CppDummyDll;

[Token(Token = "0x2000235")]
public class MoneyCorn : Cornpult
{
	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x33C390", Offset = "0x33AF90", VA = "0x18033C390", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x33C370", Offset = "0x33AF70", VA = "0x18033C370", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x33C2F0", Offset = "0x33AEF0", VA = "0x18033C2F0", Slot = "30")]
	protected override void AnimSuperShoot()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x33C830", Offset = "0x33B430", VA = "0x18033C830", Slot = "45")]
	protected override void ShootZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x33C3B0", Offset = "0x33AFB0", VA = "0x18033C3B0")]
	private Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public MoneyCorn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyInGarden
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000337")]
public class MoneyInGarden : MonoBehaviour
{
	[Token(Token = "0x4000A9F")]
	[FieldOffset(Offset = "0x20")]
	public ItemType theCoinType;

	[Token(Token = "0x4000AA0")]
	[FieldOffset(Offset = "0x24")]
	private Color color;

	[Token(Token = "0x4000AA1")]
	[FieldOffset(Offset = "0x38")]
	private SpriteRenderer r;

	[Token(Token = "0x4000AA2")]
	[FieldOffset(Offset = "0x40")]
	private readonly float moveSpeed;

	[Token(Token = "0x4000AA3")]
	[FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x4000AA4")]
	[FieldOffset(Offset = "0x48")]
	private float x;

	[Token(Token = "0x4000AA5")]
	[FieldOffset(Offset = "0x4C")]
	private float y;

	[Token(Token = "0x4000AA6")]
	[FieldOffset(Offset = "0x50")]
	private float startY;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x3CC570", Offset = "0x3CB170", VA = "0x1803CC570")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x3CC8C0", Offset = "0x3CB4C0", VA = "0x1803CC8C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x3CC980", Offset = "0x3CB580", VA = "0x1803CC980")]
	private void Update()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x3CC600", Offset = "0x3CB200", VA = "0x1803CC600")]
	private void PositionUpdate(float distance)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x3CCCF0", Offset = "0x3CB8F0", VA = "0x1803CCCF0")]
	public MoneyInGarden()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyMelon
using Il2CppDummyDll;

[Token(Token = "0x2000236")]
public class MoneyMelon : Melonpult
{
	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x33CC30", Offset = "0x33B830", VA = "0x18033CC30", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x33CA30", Offset = "0x33B630", VA = "0x18033CA30", Slot = "30")]
	protected override void AnimSuperShoot()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public MoneyMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyPot
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x20001F0")]
public class MoneyPot : Pot
{
	[Token(Token = "0x20001F1")]
	[CompilerGenerated]
	private sealed class <Bright>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FF")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000700")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000701")]
		[FieldOffset(Offset = "0x20")]
		public MoneyPot <>4__this;

		[Token(Token = "0x4000702")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Bright>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x4E0650", Offset = "0x4DF250", VA = "0x1804E0650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x4E07C0", Offset = "0x4DF3C0", VA = "0x1804E07C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x4D7C30", Offset = "0x4D6830", VA = "0x1804D7C30", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x4D7A30", Offset = "0x4D6630", VA = "0x1804D7A30", Slot = "39")]
	protected virtual void MarigoldUpdate()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x4D79C0", Offset = "0x4D65C0", VA = "0x1804D79C0")]
	[IteratorStateMachine(typeof(<Bright>d__2))]
	protected IEnumerator Bright()
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x4D7B40", Offset = "0x4D6740", VA = "0x1804D7B40", Slot = "40")]
	protected virtual void Produce()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public MoneyPot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyUmbrella
using Il2CppDummyDll;

[Token(Token = "0x20001AE")]
public class MoneyUmbrella : CornUmbrella
{
	[Token(Token = "0x6000827")]
	[Address(RVA = "0x4CA3B0", Offset = "0x4C8FB0", VA = "0x1804CA3B0", Slot = "39")]
	public override void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x4CA2D0", Offset = "0x4C8ED0", VA = "0x1804CA2D0", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x4CA680", Offset = "0x4C9280", VA = "0x1804CA680", Slot = "25")]
	public override bool SuperSkill()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x4C9D20", Offset = "0x4C8920", VA = "0x1804C9D20", Slot = "30")]
	protected override void AnimSuperShoot()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "42")]
	protected virtual void ConvertZombie(Zombie zombie, float goldRatio, float silverRatio)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x4CA540", Offset = "0x4C9140", VA = "0x1804CA540", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public MoneyUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoneyZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002B6")]
public class MoneyZombie : Zombie
{
	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x3818A0", Offset = "0x3804A0", VA = "0x1803818A0", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x3818E0", Offset = "0x3804E0", VA = "0x1803818E0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x3817F0", Offset = "0x3803F0", VA = "0x1803817F0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x381800", Offset = "0x380400", VA = "0x180381800", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x381500", Offset = "0x380100", VA = "0x180381500", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	public override void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "37")]
	public override void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public MoneyZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Mouse
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000355")]
public class Mouse : MonoBehaviour
{
	[Token(Token = "0x4000B6A")]
	[FieldOffset(Offset = "0x0")]
	public static Mouse Instance;

	[Token(Token = "0x4000B6B")]
	[FieldOffset(Offset = "0x20")]
	public Renderer r;

	[Token(Token = "0x4000B6C")]
	[FieldOffset(Offset = "0x28")]
	public int theMouseRow;

	[Token(Token = "0x4000B6D")]
	[FieldOffset(Offset = "0x2C")]
	public int theMouseColumn;

	[Token(Token = "0x4000B6E")]
	[FieldOffset(Offset = "0x30")]
	public float theBoxXofMouse;

	[Token(Token = "0x4000B6F")]
	[FieldOffset(Offset = "0x34")]
	public float theBoxYofMouse;

	[Token(Token = "0x4000B70")]
	[FieldOffset(Offset = "0x38")]
	public PlantType thePlantTypeOnMouse;

	[Token(Token = "0x4000B71")]
	[FieldOffset(Offset = "0x3C")]
	public ZombieType theZombieTypeOnMouse;

	[Token(Token = "0x4000B72")]
	[FieldOffset(Offset = "0x40")]
	public GameObject preview;

	[Token(Token = "0x4000B73")]
	[FieldOffset(Offset = "0x48")]
	public GameObject theItemOnMouse;

	[Token(Token = "0x4000B74")]
	[FieldOffset(Offset = "0x50")]
	public CardUI theCardOnMouse;

	[Token(Token = "0x4000B75")]
	[FieldOffset(Offset = "0x58")]
	public MouseItemType mouseItemType;

	[Token(Token = "0x4000B76")]
	[FieldOffset(Offset = "0x60")]
	public IZECard theIZECardOnMouse;

	[Token(Token = "0x4000B77")]
	[FieldOffset(Offset = "0x68")]
	public Plant thePlantOnGlove;

	[Token(Token = "0x4000B78")]
	[FieldOffset(Offset = "0x70")]
	public Zombie theZombieOnGlove;

	[Token(Token = "0x4000B79")]
	[FieldOffset(Offset = "0x78")]
	public GardenPlant theGardenPlantOnGlove;

	[Token(Token = "0x4000B7A")]
	[FieldOffset(Offset = "0x80")]
	public CobCannon cobCannon;

	[Token(Token = "0x4000B7B")]
	[FieldOffset(Offset = "0x88")]
	public Plant plantSelected;

	[Token(Token = "0x4000B7C")]
	[FieldOffset(Offset = "0x90")]
	public Vector2 lastClickPosition;

	[Token(Token = "0x4000B7D")]
	[FieldOffset(Offset = "0x98")]
	private float mouseX;

	[Token(Token = "0x4000B7E")]
	[FieldOffset(Offset = "0x9C")]
	private float mouseY;

	[Token(Token = "0x4000B7F")]
	[FieldOffset(Offset = "0xA0")]
	private Board board;

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x3CCDE0", Offset = "0x3CB9E0", VA = "0x1803CCDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x3D8140", Offset = "0x3D6D40", VA = "0x1803D8140")]
	private void Start()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x3DB7F0", Offset = "0x3DA3F0", VA = "0x1803DB7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x3D9DC0", Offset = "0x3D89C0", VA = "0x1803D9DC0")]
	private void TryToSetPlantByCard()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x3CF850", Offset = "0x3CE450", VA = "0x1803CF850")]
	public float GetLandY(float x, int theRow)
	{
		return default(float);
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x3CF7C0", Offset = "0x3CE3C0", VA = "0x1803CF7C0")]
	public int GetColumnFromX(float x)
	{
		return default(int);
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x3CFF60", Offset = "0x3CEB60", VA = "0x1803CFF60")]
	public int GetRowFromY(float x, float y)
	{
		return default(int);
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x3CF710", Offset = "0x3CE310", VA = "0x1803CF710")]
	public float GetBoxXFromColumn(int theColumn)
	{
		return default(float);
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x3CF730", Offset = "0x3CE330", VA = "0x1803CF730")]
	public float GetBoxYFromRow(int theRow)
	{
		return default(float);
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x3CE6D0", Offset = "0x3CD2D0", VA = "0x1803CE6D0")]
	private void CreatePlantOnMouse(PlantType theSeedType)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x3CE9E0", Offset = "0x3CD5E0", VA = "0x1803CE9E0")]
	private void CreateZombieOnMouse(ZombieType theZombieType)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x3CEE90", Offset = "0x3CDA90", VA = "0x1803CEE90")]
	private void DrawItemOnMouse()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x3D2BB0", Offset = "0x3D17B0", VA = "0x1803D2BB0")]
	private void PlantPreviewUpdate()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x3D31E0", Offset = "0x3D1DE0", VA = "0x1803D31E0")]
	private void PreviewPositionUpdate()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x3D88E0", Offset = "0x3D74E0", VA = "0x1803D88E0")]
	private GameObject TryRepairPlant()
	{
		return null;
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x3D8B00", Offset = "0x3D7700", VA = "0x1803D8B00")]
	private GameObject TrySubmarinePlant()
	{
		return null;
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x3D82D0", Offset = "0x3D6ED0", VA = "0x1803D82D0")]
	private GameObject TryHamburgerPlant(PlantType thePlantType)
	{
		return null;
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x3D2910", Offset = "0x3D1510", VA = "0x1803D2910")]
	private bool MoveZombie(Zombie zombie, float x, int row)
	{
		return default(bool);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x3DA900", Offset = "0x3D9500", VA = "0x1803DA900")]
	private void TryToSetZombieByCard()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x3DA5A0", Offset = "0x3D91A0", VA = "0x1803DA5A0")]
	private void TryToSetPlantByGlove()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x3D4680", Offset = "0x3D3280", VA = "0x1803D4680")]
	private void SetPlantLevel(Plant plant)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x3CEB20", Offset = "0x3CD720", VA = "0x1803CEB20")]
	private bool DisassemblePlant(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x3CCDB0", Offset = "0x3CB9B0", VA = "0x1803CCDB0")]
	private void AdditionCard(PlantType type, Vector2 position, PlantType baseType)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x3D3610", Offset = "0x3D2210", VA = "0x1803D3610")]
	private void PutDownItem()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x3D2790", Offset = "0x3D1390", VA = "0x1803D2790")]
	private void MouseClick()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x3D21F0", Offset = "0x3D0DF0", VA = "0x1803D21F0")]
	private void LeftUp()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x3D2170", Offset = "0x3D0D70", VA = "0x1803D2170")]
	private void LeftEvent()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x3D0280", Offset = "0x3CEE80", VA = "0x1803D0280")]
	private void LeftClickWithNothing()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x3D1700", Offset = "0x3D0300", VA = "0x1803D1700")]
	private void LeftClickWithSomeThing()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x3D3920", Offset = "0x3D2520", VA = "0x1803D3920")]
	private void ReinforcePlant()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x3CF2E0", Offset = "0x3CDEE0", VA = "0x1803CF2E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x3D2460", Offset = "0x3D1060", VA = "0x1803D2460")]
	private void LightUpPlantUnderMouse()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x3D96F0", Offset = "0x3D82F0", VA = "0x1803D96F0")]
	private void TryToRemovePlant()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x3D2AA0", Offset = "0x3D16A0", VA = "0x1803D2AA0")]
	private void PayBackSun(Plant plant)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x3D43C0", Offset = "0x3D2FC0", VA = "0x1803D43C0")]
	private void ReturnPlantToGarden(Plant plant)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x3D8D40", Offset = "0x3D7940", VA = "0x1803D8D40")]
	private void TryToPickPlant()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x3CF900", Offset = "0x3CE500", VA = "0x1803CF900")]
	private List<Plant> GetPlantsOnMouse(RaycastHit2D[] hits)
	{
		return null;
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x3D0090", Offset = "0x3CEC90", VA = "0x1803D0090")]
	private List<Zombie> GetZombiesOnMouse(RaycastHit2D[] hits)
	{
		return null;
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x3D8510", Offset = "0x3D7110", VA = "0x1803D8510")]
	private void TryHammerZombie()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x3CE460", Offset = "0x3CD060", VA = "0x1803CE460")]
	public void ClickOnCard(CardUI card)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x3CE5B0", Offset = "0x3CD1B0", VA = "0x1803CE5B0")]
	public void ClickOnIZECard(IZECard card)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x3CE030", Offset = "0x3CCC30", VA = "0x1803CE030")]
	public void ClearItemOnMouse(bool clearItem = false)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x3D01E0", Offset = "0x3CEDE0", VA = "0x1803D01E0")]
	private bool HammerClick(CardUI card)
	{
		return default(bool);
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x3CE110", Offset = "0x3CCD10", VA = "0x1803CE110")]
	private bool ClickCard(CardUI card)
	{
		return default(bool);
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x3D6B30", Offset = "0x3D5730", VA = "0x1803D6B30")]
	private bool Shooting5(CardUI card)
	{
		return default(bool);
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x3CD700", Offset = "0x3CC300", VA = "0x1803CD700")]
	private bool BilliardBall2(CardUI card)
	{
		return default(bool);
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x3D64F0", Offset = "0x3D50F0", VA = "0x1803D64F0")]
	private void Shooting4(CardUI card)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x3CCE40", Offset = "0x3CBA40", VA = "0x1803CCE40")]
	private void Bejeweled1(CardUI card)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x3D70D0", Offset = "0x3D5CD0", VA = "0x1803D70D0")]
	private void Single(CardUI card)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x3D4A50", Offset = "0x3D3650", VA = "0x1803D4A50")]
	private void Shooting1(CardUI card)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x3D5430", Offset = "0x3D4030", VA = "0x1803D5430")]
	private void Shooting2(CardUI card)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x3D5C20", Offset = "0x3D4820", VA = "0x1803D5C20")]
	private void Shooting3(CardUI card)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x3DAEB0", Offset = "0x3D9AB0", VA = "0x1803DAEB0")]
	private Plant[] TurnPlantsToNewPlants(CardUI card, PlantType newType, PlantType nextType)
	{
		return null;
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x3CDBF0", Offset = "0x3CC7F0", VA = "0x1803CDBF0")]
	private void ChangeCost(PlantType theSeedType, CardUI card)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x3CD990", Offset = "0x3CC590", VA = "0x1803CD990")]
	private void ChangeCardSprite(PlantType theSeedType, CardUI card)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x3D3B20", Offset = "0x3D2720", VA = "0x1803D3B20")]
	private void ResurrectionPlant(CardUI card)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x3CCD10", Offset = "0x3CB910", VA = "0x1803CCD10")]
	private void AddNewCard(PlantType theSeedType)
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x3D8190", Offset = "0x3D6D90", VA = "0x1803D8190")]
	private void TryExchangePlant(Plant plant1, Plant plant2)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x3DBD10", Offset = "0x3DA910", VA = "0x1803DBD10")]
	public Mouse()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MouseItemType
using Il2CppDummyDll;

[Token(Token = "0x20003B5")]
public enum MouseItemType
{
	[Token(Token = "0x400100B")]
	Nothing,
	[Token(Token = "0x400100C")]
	Plant_preview,
	[Token(Token = "0x400100D")]
	Zombie_preview,
	[Token(Token = "0x400100E")]
	Shovel,
	[Token(Token = "0x400100F")]
	Glove,
	[Token(Token = "0x4001010")]
	Hammer,
	[Token(Token = "0x4001011")]
	Cannon,
	[Token(Token = "0x4001012")]
	Bucket,
	[Token(Token = "0x4001013")]
	Bean
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MoveWay_jump
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000E7")]
public class MoveWay_jump : MonoBehaviour
{
	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MoveWay_jump()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Mower
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200011F")]
public class Mower : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[FieldOffset(Offset = "0x20")]
	public int theMowerRow;

	[Token(Token = "0x400049E")]
	[FieldOffset(Offset = "0x24")]
	public int theMowerType;

	[Token(Token = "0x400049F")]
	[FieldOffset(Offset = "0x28")]
	public Transform axis;

	[Token(Token = "0x40004A0")]
	[FieldOffset(Offset = "0x30")]
	public bool isStart;

	[Token(Token = "0x40004A1")]
	[FieldOffset(Offset = "0x34")]
	private readonly float speed;

	[Token(Token = "0x40004A2")]
	[FieldOffset(Offset = "0x38")]
	private Rigidbody2D rb;

	[Token(Token = "0x40004A3")]
	[FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x40004A4")]
	[FieldOffset(Offset = "0x48")]
	private int theBoxX;

	[Token(Token = "0x40004A5")]
	[FieldOffset(Offset = "0x4C")]
	private bool inWater;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x4891C0", Offset = "0x487DC0", VA = "0x1804891C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x489BB0", Offset = "0x4887B0", VA = "0x180489BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x489680", Offset = "0x488280", VA = "0x180489680")]
	private void PoolCleanerUpdate()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x489420", Offset = "0x488020", VA = "0x180489420")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x4894D0", Offset = "0x4880D0", VA = "0x1804894D0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x489B00", Offset = "0x488700", VA = "0x180489B00")]
	private void StartMove()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x489280", Offset = "0x487E80", VA = "0x180489280")]
	public void Die()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x489EA0", Offset = "0x488AA0", VA = "0x180489EA0")]
	public Mower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MusicType
using Il2CppDummyDll;

[Token(Token = "0x2000347")]
public enum MusicType
{
	[Token(Token = "0x4000AE0")]
	MainMenu,
	[Token(Token = "0x4000AE1")]
	SelectCard,
	[Token(Token = "0x4000AE2")]
	Day,
	[Token(Token = "0x4000AE3")]
	Day_drum,
	[Token(Token = "0x4000AE4")]
	Night,
	[Token(Token = "0x4000AE5")]
	Night_drum,
	[Token(Token = "0x4000AE6")]
	Pool,
	[Token(Token = "0x4000AE7")]
	Pool_drum,
	[Token(Token = "0x4000AE8")]
	Fog,
	[Token(Token = "0x4000AE9")]
	Fog_drum,
	[Token(Token = "0x4000AEA")]
	Roof,
	[Token(Token = "0x4000AEB")]
	Roof_drum,
	[Token(Token = "0x4000AEC")]
	Roof_pre,
	[Token(Token = "0x4000AED")]
	Loon,
	[Token(Token = "0x4000AEE")]
	UltimateBattle,
	[Token(Token = "0x4000AEF")]
	WinMusic,
	[Token(Token = "0x4000AF0")]
	IZ,
	[Token(Token = "0x4000AF1")]
	Garden,
	[Token(Token = "0x4000AF2")]
	Boss,
	[Token(Token = "0x4000AF3")]
	Boss2,
	[Token(Token = "0x4000AF4")]
	Snow,
	[Token(Token = "0x4000AF5")]
	Snow_drum
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MusicVolume
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000043")]
public class MusicVolume : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x42F480", Offset = "0x42E080", VA = "0x18042F480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x42F530", Offset = "0x42E130", VA = "0x18042F530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public MusicVolume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NetManager
using System;
using System.Collections.Generic;
using System.Net.Sockets;
using Il2CppDummyDll;

[Token(Token = "0x20003DB")]
public static class NetManager
{
	[Token(Token = "0x20003DC")]
	public delegate void MsgListener(string str);

	[Token(Token = "0x40010C0")]
	[FieldOffset(Offset = "0x0")]
	private static Socket socket;

	[Token(Token = "0x40010C1")]
	[FieldOffset(Offset = "0x8")]
	public static byte[] readBuff;

	[Token(Token = "0x40010C2")]
	[FieldOffset(Offset = "0x10")]
	private static Dictionary<string, MsgListener> listeners;

	[Token(Token = "0x40010C3")]
	[FieldOffset(Offset = "0x18")]
	private static List<string> msgList;

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x43AD30", Offset = "0x439930", VA = "0x18043AD30")]
	public static void AddListener(string msgName, MsgListener msgListener)
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x43B120", Offset = "0x439D20", VA = "0x18043B120")]
	public static string GetIPEndPoint()
	{
		return null;
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x43AFD0", Offset = "0x439BD0", VA = "0x18043AFD0")]
	public static void Connect(string ip, int port)
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x43ADC0", Offset = "0x4399C0", VA = "0x18043ADC0")]
	private static void ConnectCallback(IAsyncResult ar)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x43B200", Offset = "0x439E00", VA = "0x18043B200")]
	private static void ReceiveCallback(IAsyncResult ar)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x43B680", Offset = "0x43A280", VA = "0x18043B680")]
	public static void Send(string sendStr)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x43B4D0", Offset = "0x43A0D0", VA = "0x18043B4D0")]
	private static void SendCallback(IAsyncResult ar)
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x43B800", Offset = "0x43A400", VA = "0x18043B800")]
	public static void Update()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NewYearSnowZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002B7")]
public class NewYearSnowZombie : ConeZombie
{
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x381A40", Offset = "0x380640", VA = "0x180381A40", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x3819A0", Offset = "0x3805A0", VA = "0x1803819A0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public NewYearSnowZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NormalBtn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Events;

[Token(Token = "0x2000382")]
public class NormalBtn : MonoBehaviour
{
	[Token(Token = "0x4000C38")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x4000C39")]
	[FieldOffset(Offset = "0x28")]
	public ButtonSoundType buttonSoundType;

	[Token(Token = "0x4000C3A")]
	[FieldOffset(Offset = "0x30")]
	private Sprite originSprite;

	[Token(Token = "0x4000C3B")]
	[FieldOffset(Offset = "0x38")]
	private Vector3 originPosition;

	[Token(Token = "0x4000C3C")]
	[FieldOffset(Offset = "0x48")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000C3D")]
	[FieldOffset(Offset = "0x50")]
	public UnityEvent clickEvent;

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x3EA0C0", Offset = "0x3E8CC0", VA = "0x1803EA0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x3E9FC0", Offset = "0x3E8BC0", VA = "0x1803E9FC0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x3E9FF0", Offset = "0x3E8BF0", VA = "0x1803E9FF0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x3E9EE0", Offset = "0x3E8AE0", VA = "0x1803E9EE0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x3EA050", Offset = "0x3E8C50", VA = "0x1803EA050", Slot = "4")]
	protected virtual void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public NormalBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NoticeMenu
using Il2CppDummyDll;

[Token(Token = "0x2000120")]
public class NoticeMenu : BaseMenu
{
	[Token(Token = "0x40004A6")]
	[FieldOffset(Offset = "0x0")]
	public static NoticeMenu Instance;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x489EB0", Offset = "0x488AB0", VA = "0x180489EB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x48A010", Offset = "0x488C10", VA = "0x18048A010")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public NoticeMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NutChomper
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000154")]
public class NutChomper : Chomper
{
	[Token(Token = "0x4000625")]
	[FieldOffset(Offset = "0x1E0")]
	private Sprite backCrack1;

	[Token(Token = "0x4000626")]
	[FieldOffset(Offset = "0x1E8")]
	private Sprite backCrack2;

	[Token(Token = "0x4000627")]
	[FieldOffset(Offset = "0x1F0")]
	private Sprite headCrack1;

	[Token(Token = "0x4000628")]
	[FieldOffset(Offset = "0x1F8")]
	private Sprite headCrack2;

	[Token(Token = "0x4000629")]
	[FieldOffset(Offset = "0x200")]
	private Sprite originBack;

	[Token(Token = "0x400062A")]
	[FieldOffset(Offset = "0x208")]
	private Sprite originHead;

	[Token(Token = "0x400062B")]
	[FieldOffset(Offset = "0x210")]
	private GameObject back;

	[Token(Token = "0x400062C")]
	[FieldOffset(Offset = "0x218")]
	private GameObject head;

	[Token(Token = "0x400062D")]
	[FieldOffset(Offset = "0x220")]
	private bool cracked1;

	[Token(Token = "0x400062E")]
	[FieldOffset(Offset = "0x221")]
	private bool cracked2;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x4B9F50", Offset = "0x4B8B50", VA = "0x1804B9F50", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x4BA680", Offset = "0x4B9280", VA = "0x1804BA680", Slot = "40")]
	protected override void Swallow()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x33D060", Offset = "0x33BC60", VA = "0x18033D060", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x4BA1B0", Offset = "0x4B8DB0", VA = "0x1804BA1B0", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public NutChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NutShooter
using Il2CppDummyDll;

[Token(Token = "0x2000237")]
public class NutShooter : Shooter
{
	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x33CF00", Offset = "0x33BB00", VA = "0x18033CF00", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x33CC50", Offset = "0x33B850", VA = "0x18033CC50", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x33D060", Offset = "0x33BC60", VA = "0x18033D060", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public NutShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// NutUmbrella
using Il2CppDummyDll;

[Token(Token = "0x20001AF")]
public class NutUmbrella : CornUmbrella
{
	[Token(Token = "0x600082E")]
	[Address(RVA = "0x4CA810", Offset = "0x4C9410", VA = "0x1804CA810", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x33D060", Offset = "0x33BC60", VA = "0x18033D060", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x4CA8F0", Offset = "0x4C94F0", VA = "0x1804CA8F0", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public NutUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ObsidianImpZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002B8")]
public class ObsidianImpZombie : Zombie
{
	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x381D20", Offset = "0x380920", VA = "0x180381D20")]
	private void SetParticle()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x35F0F0", Offset = "0x35DCF0", VA = "0x18035F0F0", Slot = "51")]
	public override void BeSmall(float scale = 0.5f)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x381CF0", Offset = "0x3808F0", VA = "0x180381CF0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x3768F0", Offset = "0x3754F0", VA = "0x1803768F0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x381D10", Offset = "0x380910", VA = "0x180381D10", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ObsidianImpZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ObsidianJalapeno
using Il2CppDummyDll;

[Token(Token = "0x20001B0")]
public class ObsidianJalapeno : Plant
{
	[Token(Token = "0x6000832")]
	[Address(RVA = "0x339B90", Offset = "0x338790", VA = "0x180339B90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x4CADF0", Offset = "0x4C99F0", VA = "0x1804CADF0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x4CAEE0", Offset = "0x4C9AE0", VA = "0x1804CAEE0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x4CAE50", Offset = "0x4C9A50", VA = "0x1804CAE50", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public ObsidianJalapeno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ObsidianPotatoNut
using Il2CppDummyDll;

[Token(Token = "0x20001B1")]
public class ObsidianPotatoNut : UltimateTallNut
{
	[Token(Token = "0x40006A7")]
	[FieldOffset(Offset = "0x1B8")]
	private float storgedDamage;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x4CB1D0", Offset = "0x4C9DD0", VA = "0x1804CB1D0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x4CAF50", Offset = "0x4C9B50", VA = "0x1804CAF50")]
	private void Storge(int damage)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public ObsidianPotatoNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ObsidianSpike
using Il2CppDummyDll;

[Token(Token = "0x20001B2")]
public class ObsidianSpike : SpikeRock
{
	[Token(Token = "0x600083B")]
	[Address(RVA = "0x4CB490", Offset = "0x4CA090", VA = "0x1804CB490", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x4CB470", Offset = "0x4CA070", VA = "0x1804CB470", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x4CB4B0", Offset = "0x4CA0B0", VA = "0x1804CB4B0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x4CB220", Offset = "0x4C9E20", VA = "0x1804CB220", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public ObsidianSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ObsidianWallNut
using Il2CppDummyDll;

[Token(Token = "0x20001B3")]
public class ObsidianWallNut : WallNut
{
	[Token(Token = "0x6000840")]
	[Address(RVA = "0x4CB490", Offset = "0x4CA090", VA = "0x1804CB490", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x4CB520", Offset = "0x4CA120", VA = "0x1804CB520", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x4CB540", Offset = "0x4CA140", VA = "0x1804CB540", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public ObsidianWallNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Obstacle
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A7")]
public class Obstacle : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	public enum ObstacleType
	{
		[Token(Token = "0x40007D4")]
		FireBall,
		[Token(Token = "0x40007D5")]
		IceBall,
		[Token(Token = "0x40007D6")]
		SilverZombie,
		[Token(Token = "0x40007D7")]
		GoldZombie,
		[Token(Token = "0x40007D8")]
		BigWeapon
	}

	[Token(Token = "0x40007CF")]
	[FieldOffset(Offset = "0x20")]
	public ObstacleType obstacleType;

	[Token(Token = "0x40007D0")]
	[FieldOffset(Offset = "0x24")]
	public int theBallRow;

	[Token(Token = "0x40007D1")]
	[FieldOffset(Offset = "0x28")]
	protected float flashTime;

	[Token(Token = "0x40007D2")]
	[FieldOffset(Offset = "0x30")]
	private readonly List<SpriteRenderer> spriteRenderers;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x361F40", Offset = "0x360B40", VA = "0x180361F40", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x361D40", Offset = "0x360940", VA = "0x180361D40", Slot = "5")]
	protected virtual void AddToList()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x362010", Offset = "0x360C10", VA = "0x180362010")]
	private void GetSpriteRenderers(GameObject obj)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x361F80", Offset = "0x360B80", VA = "0x180361F80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x361F80", Offset = "0x360B80", VA = "0x180361F80")]
	private void FlashUpdate()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x362290", Offset = "0x360E90", VA = "0x180362290")]
	protected void SetBrightness(float b)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "6")]
	public virtual void Die()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x362170", Offset = "0x360D70", VA = "0x180362170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x362470", Offset = "0x361070", VA = "0x180362470")]
	public Obstacle()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OpenUrl
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000357")]
public class OpenUrl : MonoBehaviour
{
	[Token(Token = "0x2000358")]
	[CompilerGenerated]
	private sealed class <OpenURLCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8B")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8C")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8D")]
		[FieldOffset(Offset = "0x20")]
		public OpenUrl <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <OpenURLCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x3F2ED0", Offset = "0x3F1AD0", VA = "0x1803F2ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x3F2F80", Offset = "0x3F1B80", VA = "0x1803F2F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B88")]
	[FieldOffset(Offset = "0x20")]
	private readonly string url;

	[Token(Token = "0x4000B89")]
	[FieldOffset(Offset = "0x28")]
	private readonly string url2;

	[Token(Token = "0x4000B8A")]
	[FieldOffset(Offset = "0x30")]
	public int type;

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x3EA160", Offset = "0x3E8D60", VA = "0x1803EA160")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x3EA1E0", Offset = "0x3E8DE0", VA = "0x1803EA1E0")]
	[IteratorStateMachine(typeof(<OpenURLCoroutine>d__4))]
	private IEnumerator OpenURLCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x3EA250", Offset = "0x3E8E50", VA = "0x1803EA250")]
	public OpenUrl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OppositeBuffBtn
using Il2CppDummyDll;

[Token(Token = "0x2000280")]
public class OppositeBuffBtn : UIBtn
{
	[Token(Token = "0x4000789")]
	[FieldOffset(Offset = "0x60")]
	public OppositeBuffManager manager;

	[Token(Token = "0x400078A")]
	[FieldOffset(Offset = "0x68")]
	public bool A;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x348800", Offset = "0x347400", VA = "0x180348800", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public OppositeBuffBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OppositeBuffManager
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000281")]
public class OppositeBuffManager : BaseMenu
{
	[Token(Token = "0x2000282")]
	public struct OppositeBuff
	{
		[Token(Token = "0x4000794")]
		[FieldOffset(Offset = "0x0")]
		public BuffType theOptionType;

		[Token(Token = "0x4000795")]
		[FieldOffset(Offset = "0x4")]
		public int theOptionID;

		[Token(Token = "0x4000796")]
		[FieldOffset(Offset = "0x8")]
		public int theDebuffID;
	}

	[Token(Token = "0x400078B")]
	[FieldOffset(Offset = "0x30")]
	private readonly List<int> advancedPool;

	[Token(Token = "0x400078C")]
	[FieldOffset(Offset = "0x38")]
	private readonly List<int> ultimatePool;

	[Token(Token = "0x400078D")]
	[FieldOffset(Offset = "0x40")]
	private readonly List<int> debuffPool;

	[Token(Token = "0x400078E")]
	[FieldOffset(Offset = "0x48")]
	public OppositeBuff buffA;

	[Token(Token = "0x400078F")]
	[FieldOffset(Offset = "0x54")]
	public OppositeBuff buffB;

	[Token(Token = "0x4000790")]
	[FieldOffset(Offset = "0x60")]
	public List<TextMeshProUGUI> textA_good;

	[Token(Token = "0x4000791")]
	[FieldOffset(Offset = "0x68")]
	public List<TextMeshProUGUI> textA_bad;

	[Token(Token = "0x4000792")]
	[FieldOffset(Offset = "0x70")]
	public List<TextMeshProUGUI> textB_good;

	[Token(Token = "0x4000793")]
	[FieldOffset(Offset = "0x78")]
	public List<TextMeshProUGUI> textB_bad;

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x3488F0", Offset = "0x3474F0", VA = "0x1803488F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x349230", Offset = "0x347E30", VA = "0x180349230")]
	public void SelectA()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x349260", Offset = "0x347E60", VA = "0x180349260")]
	public void SelectB()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x349440", Offset = "0x348040", VA = "0x180349440")]
	private void Select(OppositeBuff buff)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x349530", Offset = "0x348130", VA = "0x180349530")]
	private void SetText(TextMeshProUGUI text, BuffType type, int id)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x349290", Offset = "0x347E90", VA = "0x180349290")]
	private OppositeBuff SelectBuff()
	{
		return default(OppositeBuff);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x348F10", Offset = "0x347B10", VA = "0x180348F10")]
	private void InitBuffPool()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x349630", Offset = "0x348230", VA = "0x180349630")]
	public OppositeBuffManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OppsiteBuffGroup
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000283")]
public class OppsiteBuffGroup : MonoBehaviour
{
	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public OppsiteBuffGroup()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OptionBtn
using Il2CppDummyDll;

[Token(Token = "0x2000383")]
public class OptionBtn : UIBtn
{
	[Token(Token = "0x4000C3E")]
	[FieldOffset(Offset = "0x60")]
	public int optionType;

	[Token(Token = "0x4000C3F")]
	[FieldOffset(Offset = "0x64")]
	private bool realReset;

	[Token(Token = "0x4000C40")]
	[FieldOffset(Offset = "0x68")]
	private float resetTime;

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x3EA720", Offset = "0x3E9320", VA = "0x1803EA720", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x3EAE50", Offset = "0x3E9A50", VA = "0x1803EAE50", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x3EB690", Offset = "0x3EA290", VA = "0x1803EB690")]
	private void PassAdvantureLevel()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x3EB800", Offset = "0x3EA400", VA = "0x1803EB800")]
	private void PassAllLevel()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x3EBB00", Offset = "0x3EA700", VA = "0x1803EBB00")]
	private void ResetAllLevel()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x3EA2D0", Offset = "0x3E8ED0", VA = "0x1803EA2D0")]
	private void AdjustCameraSize()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x3EA4A0", Offset = "0x3E90A0", VA = "0x1803EA4A0")]
	private void AdjustCanvasSize()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x3EBE40", Offset = "0x3EAA40", VA = "0x1803EBE40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public OptionBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// OtherMenu
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000359")]
public class OtherMenu : BaseMenu
{
	[Token(Token = "0x4000B8E")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text1;

	[Token(Token = "0x4000B8F")]
	[FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI text2;

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x3EBEE0", Offset = "0x3EAAE0", VA = "0x1803EBEE0")]
	public void UpdateText(string text)
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public OtherMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PageBtn
using Il2CppDummyDll;

[Token(Token = "0x2000380")]
public class PageBtn : UIBtn
{
	[Token(Token = "0x4000C34")]
	[FieldOffset(Offset = "0x60")]
	public bool next;

	[Token(Token = "0x4000C35")]
	[FieldOffset(Offset = "0x64")]
	public int maxPage;

	[Token(Token = "0x4000C36")]
	[FieldOffset(Offset = "0x68")]
	public ClgLevelMgr clgLevel;

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x3EC7F0", Offset = "0x3EB3F0", VA = "0x1803EC7F0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x3EC8A0", Offset = "0x3EB4A0", VA = "0x1803EC8A0")]
	public PageBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Paper_beAngry
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000058")]
public class Paper_beAngry : StateMachineBehaviour
{
	[Token(Token = "0x600015F")]
	[Address(RVA = "0x42F5C0", Offset = "0x42E1C0", VA = "0x18042F5C0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Paper_beAngry()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PaperCherryZ
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002DC")]
public class PaperCherryZ : ArmorZombie
{
	[Token(Token = "0x4000844")]
	[FieldOffset(Offset = "0x220")]
	public float theZombieAttackInterval;

	[Token(Token = "0x4000845")]
	[FieldOffset(Offset = "0x224")]
	private float theZombieAttackCountDown;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x387460", Offset = "0x386060", VA = "0x180387460", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x3875E0", Offset = "0x3861E0", VA = "0x1803875E0", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x3873C0", Offset = "0x385FC0", VA = "0x1803873C0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x387150", Offset = "0x385D50", VA = "0x180387150")]
	public void AngrySound()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x3879D0", Offset = "0x3865D0", VA = "0x1803879D0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x387AF0", Offset = "0x3866F0", VA = "0x180387AF0")]
	private void ZombieShootUpdate()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x3871E0", Offset = "0x385DE0", VA = "0x1803871E0", Slot = "55")]
	public virtual Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x362580", Offset = "0x361180", VA = "0x180362580")]
	private void Angry()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x387130", Offset = "0x385D30", VA = "0x180387130")]
	public PaperCherryZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PaperCherryZ95
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002DD")]
public class PaperCherryZ95 : PaperZombie
{
	[Token(Token = "0x4000846")]
	[FieldOffset(Offset = "0x220")]
	public float theZombieAttackInterval;

	[Token(Token = "0x4000847")]
	[FieldOffset(Offset = "0x224")]
	private float theZombieAttackCountDown;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x386ED0", Offset = "0x385AD0", VA = "0x180386ED0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x386B20", Offset = "0x385720", VA = "0x180386B20", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x35FF70", Offset = "0x35EB70", VA = "0x18035FF70", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x35FCB0", Offset = "0x35E8B0", VA = "0x18035FCB0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x35FD90", Offset = "0x35E990", VA = "0x18035FD90", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x386C60", Offset = "0x385860", VA = "0x180386C60", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x386F40", Offset = "0x385B40", VA = "0x180386F40", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x387040", Offset = "0x385C40", VA = "0x180387040")]
	private void ZombieShootUpdate()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x3868F0", Offset = "0x3854F0", VA = "0x1803868F0", Slot = "55")]
	public virtual Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x386AD0", Offset = "0x3856D0", VA = "0x180386AD0", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x386E20", Offset = "0x385A20", VA = "0x180386E20", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x386E60", Offset = "0x385A60", VA = "0x180386E60", Slot = "32")]
	public override void SetJalaed()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x386E90", Offset = "0x385A90", VA = "0x180386E90", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x3868C0", Offset = "0x3854C0", VA = "0x1803868C0", Slot = "36")]
	public override void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x386DE0", Offset = "0x3859E0", VA = "0x180386DE0", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x386BD0", Offset = "0x3857D0", VA = "0x180386BD0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x387130", Offset = "0x385D30", VA = "0x180387130")]
	public PaperCherryZ95()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PaperZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200029B")]
public class PaperZombie : ArmorZombie
{
	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x362BB0", Offset = "0x3617B0", VA = "0x180362BB0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x362630", Offset = "0x361230", VA = "0x180362630", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x3627B0", Offset = "0x3613B0", VA = "0x1803627B0", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x362590", Offset = "0x361190", VA = "0x180362590", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x3624F0", Offset = "0x3610F0", VA = "0x1803624F0")]
	public void AngrySound()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x362580", Offset = "0x361180", VA = "0x180362580")]
	private void Angry()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public PaperZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Parameter
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000084")]
public class Parameter
{
	[Token(Token = "0x400033C")]
	[FieldOffset(Offset = "0x10")]
	public ZombieBoss boss;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public Parameter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Particle
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000133")]
public class Particle : MonoBehaviour
{
	[Token(Token = "0x4000527")]
	[FieldOffset(Offset = "0x20")]
	public ParticleType theParticleType;

	[Token(Token = "0x4000528")]
	[FieldOffset(Offset = "0x24")]
	private float existTimer;

	[Token(Token = "0x4000529")]
	[FieldOffset(Offset = "0x28")]
	private float maxTimer;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x49CDB0", Offset = "0x49B9B0", VA = "0x18049CDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x49CEE0", Offset = "0x49BAE0", VA = "0x18049CEE0")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x49CED0", Offset = "0x49BAD0", VA = "0x18049CED0")]
	public void InitParticle()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x49CEF0", Offset = "0x49BAF0", VA = "0x18049CEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x49CE40", Offset = "0x49BA40", VA = "0x18049CE40")]
	private void Die()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Particle()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ParticleManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Pool;

[Token(Token = "0x2000135")]
public class ParticleManager : MonoBehaviour
{
	[Token(Token = "0x4000591")]
	[FieldOffset(Offset = "0x20")]
	public Dictionary<ParticleType, ObjectPool<Particle>> pools;

	[Token(Token = "0x4000592")]
	[FieldOffset(Offset = "0x0")]
	public static ParticleManager Instance;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x49C5B0", Offset = "0x49B1B0", VA = "0x18049C5B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x49CB60", Offset = "0x49B760", VA = "0x18049CB60")]
	public Particle SetParticle(ParticleType particleType, Vector2 position, int layerRow = 11)
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x49C910", Offset = "0x49B510", VA = "0x18049C910")]
	private Particle CreateParticle(ParticleType particleType)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x3BEFB0", Offset = "0x3BDBB0", VA = "0x1803BEFB0")]
	private void GetParticle(Particle obj)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x3BEFF0", Offset = "0x3BDBF0", VA = "0x1803BEFF0")]
	private void ReleaseParticle(Particle obj)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x49CAF0", Offset = "0x49B6F0", VA = "0x18049CAF0")]
	private void DestoryParticle(Particle obj)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x49CD30", Offset = "0x49B930", VA = "0x18049CD30")]
	public ParticleManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ParticleType
using Il2CppDummyDll;

[Token(Token = "0x2000134")]
public enum ParticleType
{
	[Token(Token = "0x400052B")]
	PeaSplat,
	[Token(Token = "0x400052C")]
	Dirt,
	[Token(Token = "0x400052D")]
	BombCloud,
	[Token(Token = "0x400052E")]
	SunBombCloud,
	[Token(Token = "0x400052F")]
	CherrySplat,
	[Token(Token = "0x4000530")]
	NutPartical,
	[Token(Token = "0x4000531")]
	CherryNutPartical,
	[Token(Token = "0x4000532")]
	NutSplat,
	[Token(Token = "0x4000533")]
	PotaoParticle,
	[Token(Token = "0x4000534")]
	PotatoRise,
	[Token(Token = "0x4000535")]
	GreenCherrySplat,
	[Token(Token = "0x4000536")]
	RandomCloud,
	[Token(Token = "0x4000537")]
	ZombieBlockSplat,
	[Token(Token = "0x4000538")]
	PurpleNutDust,
	[Token(Token = "0x4000539")]
	BombCloudSmall,
	[Token(Token = "0x400053A")]
	PotatoSplat,
	[Token(Token = "0x400053B")]
	Health,
	[Token(Token = "0x400053C")]
	PuffSplat,
	[Token(Token = "0x400053D")]
	IronPeaSplat,
	[Token(Token = "0x400053E")]
	Fume,
	[Token(Token = "0x400053F")]
	MindControl,
	[Token(Token = "0x4000540")]
	FumeColorful,
	[Token(Token = "0x4000541")]
	FumeColorful2,
	[Token(Token = "0x4000542")]
	Star,
	[Token(Token = "0x4000543")]
	SnowPeaSplat,
	[Token(Token = "0x4000544")]
	Doom,
	[Token(Token = "0x4000545")]
	PuffBlackSplat,
	[Token(Token = "0x4000546")]
	DoomSplat,
	[Token(Token = "0x4000547")]
	IceDoomSplat,
	[Token(Token = "0x4000548")]
	IceDoom,
	[Token(Token = "0x4000549")]
	FumeIce,
	[Token(Token = "0x400054A")]
	FumeDoom,
	[Token(Token = "0x400054B")]
	WaterSplats,
	[Token(Token = "0x400054C")]
	Fire,
	[Token(Token = "0x400054D")]
	MachineExplode,
	[Token(Token = "0x400054E")]
	FireFree,
	[Token(Token = "0x400054F")]
	MachineExplodeRed,
	[Token(Token = "0x4000550")]
	Gloom,
	[Token(Token = "0x4000551")]
	GloomFire,
	[Token(Token = "0x4000552")]
	GloomIce,
	[Token(Token = "0x4000553")]
	LanternShine,
	[Token(Token = "0x4000554")]
	BombKirov,
	[Token(Token = "0x4000555")]
	BombJackbox,
	[Token(Token = "0x4000556")]
	LanternLaser,
	[Token(Token = "0x4000557")]
	StarSplat,
	[Token(Token = "0x4000558")]
	PickaxeStarSplat,
	[Token(Token = "0x4000559")]
	MagnetStarSplat,
	[Token(Token = "0x400055A")]
	JackboxStarSplat,
	[Token(Token = "0x400055B")]
	MagnetLight,
	[Token(Token = "0x400055C")]
	BombStarCloud,
	[Token(Token = "0x400055D")]
	UltimateStarSplat,
	[Token(Token = "0x400055E")]
	UltimateStarCloud,
	[Token(Token = "0x400055F")]
	SuperGloom,
	[Token(Token = "0x4000560")]
	LightningArcExplosion,
	[Token(Token = "0x4000561")]
	MachineExplodeBrown,
	[Token(Token = "0x4000562")]
	MelonSplat,
	[Token(Token = "0x4000563")]
	WinterMelonSplat,
	[Token(Token = "0x4000564")]
	Splat_white,
	[Token(Token = "0x4000565")]
	Splat_white_big,
	[Token(Token = "0x4000566")]
	CannonSplat,
	[Token(Token = "0x4000567")]
	MelonSplat_kernal,
	[Token(Token = "0x4000568")]
	MelonSplat_butter,
	[Token(Token = "0x4000569")]
	PrizeSplat,
	[Token(Token = "0x400056A")]
	BallFire,
	[Token(Token = "0x400056B")]
	BallIce,
	[Token(Token = "0x400056C")]
	ZumaSplat,
	[Token(Token = "0x400056D")]
	CannonMelonSplat,
	[Token(Token = "0x400056E")]
	SilverCoinSplat,
	[Token(Token = "0x400056F")]
	SmallCannonSplat,
	[Token(Token = "0x4000570")]
	SuperKillEffect,
	[Token(Token = "0x4000571")]
	MelonSplat_silver,
	[Token(Token = "0x4000572")]
	MelonSplat_gold,
	[Token(Token = "0x4000573")]
	Flame,
	[Token(Token = "0x4000574")]
	JalaedCloudSmall,
	[Token(Token = "0x4000575")]
	MelonSplat_fire,
	[Token(Token = "0x4000576")]
	BossExplosion,
	[Token(Token = "0x4000577")]
	SummonFireBall,
	[Token(Token = "0x4000578")]
	SummonIceBall,
	[Token(Token = "0x4000579")]
	GarlicCloud,
	[Token(Token = "0x400057A")]
	Fume_magnet,
	[Token(Token = "0x400057B")]
	Fume_iron,
	[Token(Token = "0x400057C")]
	Fume_helmet,
	[Token(Token = "0x400057D")]
	Fume_garlic,
	[Token(Token = "0x400057E")]
	SteelPeaSplat,
	[Token(Token = "0x400057F")]
	Splat_sun,
	[Token(Token = "0x4000580")]
	IceBallExplode,
	[Token(Token = "0x4000581")]
	Doom_solar,
	[Token(Token = "0x4000582")]
	ElectricSplat,
	[Token(Token = "0x4000583")]
	LanternCloud,
	[Token(Token = "0x4000584")]
	Fume_fire,
	[Token(Token = "0x4000585")]
	EmberedCloudSmall,
	[Token(Token = "0x4000586")]
	AttackEnergy,
	[Token(Token = "0x4000587")]
	DirtSplat,
	[Token(Token = "0x4000588")]
	BombCloud_vision,
	[Token(Token = "0x4000589")]
	FireOcean,
	[Token(Token = "0x400058A")]
	Pow,
	[Token(Token = "0x400058B")]
	ShootCloud,
	[Token(Token = "0x400058C")]
	ProtalPeaSplat,
	[Token(Token = "0x400058D")]
	ProtalGlow,
	[Token(Token = "0x400058E")]
	HypnoEmperorSkinCloud,
	[Token(Token = "0x400058F")]
	BombCloud_blue,
	[Token(Token = "0x4000590")]
	DirtSplat2
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PassiveStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200001F")]
public class PassiveStar : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[FieldOffset(Offset = "0x20")]
	private GameObject mask;

	[Token(Token = "0x40000A6")]
	[FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x31B9E0", Offset = "0x31A5E0", VA = "0x18031B9E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x31BA70", Offset = "0x31A670", VA = "0x18031BA70")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PassiveStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PasueMenuRecheck
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000024")]
public class PasueMenuRecheck : MonoBehaviour
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PasueMenuRecheck()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PauseMenu
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000025")]
public class PauseMenu : BaseMenu
{
	[Token(Token = "0x40000B1")]
	[FieldOffset(Offset = "0x0")]
	public static PauseMenu Instance;

	[Token(Token = "0x40000B2")]
	[FieldOffset(Offset = "0x30")]
	public GameObject checkQuit;

	[Token(Token = "0x40000B3")]
	[FieldOffset(Offset = "0x38")]
	public GameObject checkRestart;

	[Token(Token = "0x40000B4")]
	[FieldOffset(Offset = "0x40")]
	public GameObject btnLookAlmanac;

	[Token(Token = "0x40000B5")]
	[FieldOffset(Offset = "0x48")]
	public GameObject btnRestart;

	[Token(Token = "0x40000B6")]
	[FieldOffset(Offset = "0x50")]
	public GameObject btnQuit;

	[Token(Token = "0x40000B7")]
	[FieldOffset(Offset = "0x58")]
	public GameObject backToGame;

	[Token(Token = "0x40000B8")]
	[FieldOffset(Offset = "0x60")]
	public GameObject travelBuff;

	[Token(Token = "0x40000B9")]
	[FieldOffset(Offset = "0x68")]
	public GameObject lookBuff;

	[Token(Token = "0x40000BA")]
	[FieldOffset(Offset = "0x70")]
	public GameObject save;

	[Token(Token = "0x40000BB")]
	[FieldOffset(Offset = "0x78")]
	public bool isRecheck;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x31BB10", Offset = "0x31A710", VA = "0x18031BB10", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x31C470", Offset = "0x31B070", VA = "0x18031C470")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public PauseMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PauseMenu_Btn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000026")]
public class PauseMenu_Btn : MonoBehaviour
{
	[Token(Token = "0x40000BC")]
	[FieldOffset(Offset = "0x20")]
	public int buttonNumber;

	[Token(Token = "0x40000BD")]
	[FieldOffset(Offset = "0x28")]
	public GameObject thisMenu;

	[Token(Token = "0x40000BE")]
	[FieldOffset(Offset = "0x30")]
	private Vector3 originPosition;

	[Token(Token = "0x40000BF")]
	[FieldOffset(Offset = "0x40")]
	private RectTransform rectTransform;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x31C3E0", Offset = "0x31AFE0", VA = "0x18031C3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x31BD70", Offset = "0x31A970", VA = "0x18031BD70")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x31BCE0", Offset = "0x31A8E0", VA = "0x18031BCE0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x31BDB0", Offset = "0x31A9B0", VA = "0x18031BDB0")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x31C2D0", Offset = "0x31AED0", VA = "0x18031C2D0")]
	private void Restart()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PauseMenu_Btn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaChomper
using Il2CppDummyDll;

[Token(Token = "0x2000155")]
public class PeaChomper : Chomper
{
	[Token(Token = "0x6000668")]
	[Address(RVA = "0x4BA810", Offset = "0x4B9410", VA = "0x1804BA810", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x4BA6B0", Offset = "0x4B92B0", VA = "0x1804BA6B0")]
	public Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public PeaChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaDolphinriderZombie
using Il2CppDummyDll;

[Token(Token = "0x20002DE")]
public class PeaDolphinriderZombie : SnowDolphinrider
{
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x387DF0", Offset = "0x3869F0", VA = "0x180387DF0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x387D80", Offset = "0x386980", VA = "0x180387D80", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x387BA0", Offset = "0x3867A0", VA = "0x180387BA0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x387E10", Offset = "0x386A10", VA = "0x180387E10", Slot = "57")]
	protected virtual int GetDamage()
	{
		return default(int);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "58")]
	protected virtual BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x3756F0", Offset = "0x3742F0", VA = "0x1803756F0")]
	public PeaDolphinriderZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaMine
using Il2CppDummyDll;

[Token(Token = "0x2000238")]
public class PeaMine : PotatoMine
{
	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x33D530", Offset = "0x33C130", VA = "0x18033D530", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x33D090", Offset = "0x33BC90", VA = "0x18033D090")]
	public Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x33D3D0", Offset = "0x33BFD0", VA = "0x18033D3D0")]
	private void SetInterval()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x33D200", Offset = "0x33BE00", VA = "0x18033D200", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x33D710", Offset = "0x33C310", VA = "0x18033D710")]
	public PeaMine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaShooter
using Il2CppDummyDll;

[Token(Token = "0x2000239")]
public class PeaShooter : Shooter
{
	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x33D720", Offset = "0x33C320", VA = "0x18033D720", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public PeaShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaShooterZ
using Il2CppDummyDll;

[Token(Token = "0x20002DF")]
public class PeaShooterZ : Zombie
{
	[Token(Token = "0x4000848")]
	[FieldOffset(Offset = "0x220")]
	public float theZombieAttackInterval;

	[Token(Token = "0x4000849")]
	[FieldOffset(Offset = "0x224")]
	protected float theZombieAttackCountDown;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x388010", Offset = "0x386C10", VA = "0x180388010", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x388140", Offset = "0x386D40", VA = "0x180388140")]
	private void ZombieShootUpdate()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x387E20", Offset = "0x386A20", VA = "0x180387E20", Slot = "55")]
	public virtual Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x388270", Offset = "0x386E70", VA = "0x180388270")]
	public PeaShooterZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaSmallPuff
using Il2CppDummyDll;

[Token(Token = "0x200023A")]
public class PeaSmallPuff : Shooter
{
	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x33D840", Offset = "0x33C440", VA = "0x18033D840", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public PeaSmallPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PeaSunFlower
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x2000156")]
public class PeaSunFlower : Shooter
{
	[Token(Token = "0x2000157")]
	[CompilerGenerated]
	private sealed class <SunBright>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400062F")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000630")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000631")]
		[FieldOffset(Offset = "0x20")]
		public PeaSunFlower <>4__this;

		[Token(Token = "0x4000632")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x4BE4C0", Offset = "0x4BD0C0", VA = "0x1804BE4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x4BE630", Offset = "0x4BD230", VA = "0x1804BE630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x4BA870", Offset = "0x4B9470", VA = "0x1804BA870", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x4BAC40", Offset = "0x4B9840", VA = "0x1804BAC40", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x4BAAB0", Offset = "0x4B96B0", VA = "0x1804BAAB0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x4BA8C0", Offset = "0x4B94C0", VA = "0x1804BA8C0")]
	private void PeaSunProduceUpdate()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x4BABD0", Offset = "0x4B97D0", VA = "0x1804BABD0")]
	[IteratorStateMachine(typeof(<SunBright>d__4))]
	private IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x4BA9D0", Offset = "0x4B95D0", VA = "0x1804BA9D0", Slot = "42")]
	protected virtual void ProduceSun()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public PeaSunFlower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Plant
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000137")]
public class Plant : Entity
{
	[Token(Token = "0x2000138")]
	public enum DamageType
	{
		[Token(Token = "0x40005E2")]
		Default,
		[Token(Token = "0x40005E3")]
		CherryExplode,
		[Token(Token = "0x40005E4")]
		JackboxExplode,
		[Token(Token = "0x40005E5")]
		UltimateTallNutAll,
		[Token(Token = "0x40005E6")]
		EndlessFire
	}

	[Serializable]
	[Token(Token = "0x2000139")]
	public struct PlantTag
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool flyingPlant;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool hardLandPlant;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool waterPlant;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool pumpkinPlant;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool lanternPlant;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool smallLanternPlant;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool puffPlant;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool nutPlant;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool tallNutPlant;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool potatoPlant;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool caltropPlant;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool tanglekelpPlant;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool magnetPlant;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool potPlant;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool doubleBoxPlant;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool spickRockPlant;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool icePlant;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool firePlant;
	}

	[Token(Token = "0x200013A")]
	public enum DieReason
	{
		[Token(Token = "0x40005FA")]
		Default,
		[Token(Token = "0x40005FB")]
		ByWheat,
		[Token(Token = "0x40005FC")]
		ByMix,
		[Token(Token = "0x40005FD")]
		ByDisMix,
		[Token(Token = "0x40005FE")]
		ByLevelUp,
		[Token(Token = "0x40005FF")]
		BySteal,
		[Token(Token = "0x4000600")]
		ByBejeweled,
		[Token(Token = "0x4000601")]
		ByShovel
	}

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider2D mouseCollider;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int thePlantMaxHealth;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int thePlantHealth;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int attackDamage;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float thePlantAttackInterval;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float thePlantProduceInterval;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isLily;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool invincible;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool isShort;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 startPos;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int thePlantColumn;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int thePlantRow;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int magnetCount;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int theLevel;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float thePlantSpeed;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float thePlantAttackCountDown;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float thePlantProduceCountDown;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float attributeCountdown;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float lightCountDown;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float flashCountDown;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float wheatTime;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float brightness;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float lastTakeDamgeTime;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float disappearTime;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool isFlashing;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int wheatType;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool alwaysLightUp;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool isCrashed;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	public bool melonSputter;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	public bool dieMeansLose;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isGray;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool isConnected;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool keepShooting;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	public bool waitingDestory;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isGhost;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2 targetBox;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float moveTime;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float[] timers;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int disableCount;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int attributeCount;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int puffPlace;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int baseLayer;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int currentLightLevel;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int p;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int thePlantStage;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public PlantType thePlantType;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public PlantType theLilyType;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public PlantType firstParent;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PlantType secondParent;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public LayerMask zombieLayer;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LayerMask plantLayer;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public LayerMask bulletLayer;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LayerMask potLayer;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public PlantStatus theStatus;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Plant next;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Plant pre;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public PlantTag plantTag;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro healthText;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro healthTextShadow;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject levelIcon;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Plant targetPlant;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Zombie targetZombie;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool freeMoving;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	protected bool dying;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected List<Zombie> zombieList;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected float theOriginSpeed;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	protected float vision;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected Rigidbody2D rb;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private readonly Dictionary<PlantDamageAdder, float> damageAdder;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private readonly float exchangeSpeed;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float fallSpeed;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float defence;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool falling;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform shoot;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform shoot2;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Plant connectPlant;

	[Token(Token = "0x17000028")]
	public bool WithGoldPot
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x4A7350", Offset = "0x4A5F50", VA = "0x1804A7350")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public PlantType PotType
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x4A6390", Offset = "0x4A4F90", VA = "0x1804A6390")]
		get
		{
			return default(PlantType);
		}
	}

	[Token(Token = "0x1700002A")]
	public Plant Pumpkin
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x4A68A0", Offset = "0x4A54A0", VA = "0x1804A68A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public PlantType PumpkinType
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x4A6560", Offset = "0x4A5160", VA = "0x1804A6560")]
		get
		{
			return default(PlantType);
		}
	}

	[Token(Token = "0x1700002C")]
	public GridItem Ladder
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x4A6200", Offset = "0x4A4E00", VA = "0x1804A6200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public Plant SameUpper
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x4A7170", Offset = "0x4A5D70", VA = "0x1804A7170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public Plant SameLower
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x4A6DB0", Offset = "0x4A59B0", VA = "0x1804A6DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public Plant SameLeft
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x4A6BD0", Offset = "0x4A57D0", VA = "0x1804A6BD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public Plant SameRight
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x4A6F90", Offset = "0x4A5B90", VA = "0x1804A6F90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x49D640", Offset = "0x49C240", VA = "0x18049D640", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
	protected virtual void FirstMeet()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x4A3690", Offset = "0x4A2290", VA = "0x1804A3690", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x4A4A90", Offset = "0x4A3690", VA = "0x1804A4A90", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x49F090", Offset = "0x49DC90", VA = "0x18049F090", Slot = "8")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x4A4380", Offset = "0x4A2F80", VA = "0x1804A4380")]
	public void TryBeDisable(float timer = 0f)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x49EF60", Offset = "0x49DB60", VA = "0x18049EF60")]
	private bool FindPineFunrce()
	{
		return default(bool);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x4A3F40", Offset = "0x4A2B40", VA = "0x1804A3F40")]
	public void TryBeActive()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x49D980", Offset = "0x49C580", VA = "0x18049D980")]
	private bool CheckOrActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x4A0DC0", Offset = "0x49F9C0", VA = "0x1804A0DC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x4A30F0", Offset = "0x4A1CF0", VA = "0x1804A30F0")]
	public void SetGray()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x4A3450", Offset = "0x4A2050", VA = "0x1804A3450")]
	public void SetWheat()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x49F2B0", Offset = "0x49DEB0", VA = "0x18049F2B0")]
	private void FlashUpdate()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x4A0FD0", Offset = "0x49FBD0", VA = "0x1804A0FD0")]
	private void PlantUpdate()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x4A1680", Offset = "0x4A0280", VA = "0x1804A1680")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x4A0B60", Offset = "0x49F760", VA = "0x1804A0B60")]
	private void MoveTowards(Vector2 position)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x4A0560", Offset = "0x49F160", VA = "0x1804A0560")]
	private void MovePosition(Vector2 position)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x4A3840", Offset = "0x4A2440", VA = "0x1804A3840")]
	private void SupplyPlantsInBejaw()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x4A0950", Offset = "0x49F550", VA = "0x1804A0950")]
	private void MoveRestPlantsInBejaw()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x49D9C0", Offset = "0x49C5C0", VA = "0x18049D9C0")]
	private void ClearInBejaw()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x4A0D30", Offset = "0x49F930", VA = "0x1804A0D30")]
	private bool Near(Vector2 startPosition, Vector2 endPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x4A0400", Offset = "0x49F000", VA = "0x1804A0400")]
	public void MoveBox(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "9")]
	protected virtual void AttributeEvent()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x49F8A0", Offset = "0x49E4A0", VA = "0x18049F8A0", Slot = "10")]
	public virtual GameObject InitText()
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x4A3250", Offset = "0x4A1E50", VA = "0x1804A3250")]
	protected TextMeshPro SetPlantText(string name, Color color, Vector2 localPosition, Transform parent, string str, int order = 0)
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x4A46F0", Offset = "0x4A32F0", VA = "0x1804A46F0", Slot = "11")]
	public virtual void UpdateText()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x4A3B80", Offset = "0x4A2780", VA = "0x1804A3B80", Slot = "12")]
	public virtual void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x49F420", Offset = "0x49E020", VA = "0x18049F420", Slot = "13")]
	protected virtual int GetDamage(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x49FEB0", Offset = "0x49EAB0", VA = "0x18049FEB0", Slot = "14")]
	protected virtual bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x4A5CC0", Offset = "0x4A48C0", VA = "0x1804A5CC0")]
	private void WheatUpdate()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x49F290", Offset = "0x49DE90", VA = "0x18049F290")]
	public void FlashOnce()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x49E890", Offset = "0x49D490", VA = "0x18049E890", Slot = "15")]
	public virtual void Die(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x49DE00", Offset = "0x49CA00", VA = "0x18049DE00", Slot = "16")]
	public virtual void Crashed(int level = 0, int soundID = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x4A1CB0", Offset = "0x4A08B0", VA = "0x1804A1CB0")]
	protected void RemoveFromList()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x4A2870", Offset = "0x4A1470", VA = "0x1804A2870", Slot = "17")]
	protected virtual GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x4A0E60", Offset = "0x49FA60", VA = "0x1804A0E60", Slot = "18")]
	protected virtual void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x4A45B0", Offset = "0x4A31B0", VA = "0x1804A45B0")]
	protected void UpdateAttackCountDown()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x4A35B0", Offset = "0x4A21B0", VA = "0x1804A35B0", Slot = "19")]
	protected virtual bool Shootable()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x4A22D0", Offset = "0x4A0ED0", VA = "0x1804A22D0")]
	protected bool SearchGoldMagnet()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "20")]
	public virtual void ProducerUpdate()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x4A2AB0", Offset = "0x4A16B0", VA = "0x1804A2AB0", Slot = "21")]
	public virtual void SetBrightness(float b)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x4A1990", Offset = "0x4A0590", VA = "0x1804A1990", Slot = "22")]
	public virtual void Recover(int health)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x49FCA0", Offset = "0x49E8A0", VA = "0x18049FCA0")]
	private bool InsteadRecover()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x4A03F0", Offset = "0x49EFF0", VA = "0x1804A03F0", Slot = "23")]
	protected virtual void LimHealth()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "24")]
	protected virtual void ReplaceSprite()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x4A3700", Offset = "0x4A2300", VA = "0x1804A3700", Slot = "25")]
	public virtual bool SuperSkill()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "26")]
	protected virtual void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x49F6B0", Offset = "0x49E2B0", VA = "0x18049F6B0")]
	private void GiveSunInIZ()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x4A2670", Offset = "0x4A1270", VA = "0x1804A2670", Slot = "27")]
	protected virtual bool SearchUniqueZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x49D580", Offset = "0x49C180", VA = "0x18049D580")]
	protected bool AttackLandZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x4A2DB0", Offset = "0x4A19B0", VA = "0x1804A2DB0")]
	public void SetColor(GameObject obj, Color color)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "28")]
	public virtual void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "29")]
	public virtual void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x49D430", Offset = "0x49C030", VA = "0x18049D430")]
	public void AdjustPositionY(float y)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x49D4E0", Offset = "0x49C0E0", VA = "0x18049D4E0")]
	public void AdjustY(float y)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	protected virtual void AnimSuperShoot()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x4A2130", Offset = "0x4A0D30", VA = "0x1804A2130", Slot = "31")]
	protected virtual GameObject SearchBoss()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x4A5230", Offset = "0x4A3E30", VA = "0x1804A5230", Slot = "32")]
	public virtual bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x4A4690", Offset = "0x4A3290", VA = "0x1804A4690", Slot = "33")]
	public virtual void UpdateMagnetCount(int count)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x49CF40", Offset = "0x49BB40", VA = "0x18049CF40")]
	public void AdjustDamage(PlantDamageAdder index, float value, PlantType thePlantType)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x49D250", Offset = "0x49BE50", VA = "0x18049D250")]
	public void AdjustDamage()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x49F4D0", Offset = "0x49E0D0", VA = "0x18049F4D0", Slot = "34")]
	public virtual int GetMaxHealth(PlantType thePlantType)
	{
		return default(int);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public virtual void InitPlant()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x49DDA0", Offset = "0x49C9A0", VA = "0x18049DDA0", Slot = "36")]
	public virtual void Connected(Plant plant)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x49EF10", Offset = "0x49DB10", VA = "0x18049EF10", Slot = "37")]
	public virtual void DisConnected()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x4A4B00", Offset = "0x4A3700", VA = "0x1804A4B00")]
	public bool Upgrade(int targetLevel, bool free = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	protected virtual void UpgradeEvent(int theCurrentLevel)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x4A60A0", Offset = "0x4A4CA0", VA = "0x1804A60A0")]
	public Plant()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantDamageAdder
using Il2CppDummyDll;

[Token(Token = "0x20003B8")]
public enum PlantDamageAdder
{
	[Token(Token = "0x400101B")]
	TravelNormalBuff,
	[Token(Token = "0x400101C")]
	Connect,
	[Token(Token = "0x400101D")]
	Level,
	[Token(Token = "0x400101E")]
	PointEffect,
	[Token(Token = "0x400101F")]
	AbyssBuff,
	[Token(Token = "0x4001020")]
	Abyss_loseHealth
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantDataLoader
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x2000320")]
public class PlantDataLoader
{
	[Serializable]
	[Token(Token = "0x2000321")]
	public class PlantData_
	{
		[Token(Token = "0x40009D6")]
		[FieldOffset(Offset = "0x10")]
		public PlantType 植物类型;

		[Token(Token = "0x40009D7")]
		[FieldOffset(Offset = "0x14")]
		public float 攻击间隔;

		[Token(Token = "0x40009D8")]
		[FieldOffset(Offset = "0x18")]
		public float 生产间隔;

		[Token(Token = "0x40009D9")]
		[FieldOffset(Offset = "0x1C")]
		public int attackDamage;

		[Token(Token = "0x40009DA")]
		[FieldOffset(Offset = "0x20")]
		public int 最大生命值;

		[Token(Token = "0x40009DB")]
		[FieldOffset(Offset = "0x24")]
		public float 冷却;

		[Token(Token = "0x40009DC")]
		[FieldOffset(Offset = "0x28")]
		public int 价格;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public PlantData_()
		{
		}
	}

	[Token(Token = "0x40009D4")]
	[FieldOffset(Offset = "0x0")]
	public static PlantData_[] plantData;

	[Token(Token = "0x40009D5")]
	[FieldOffset(Offset = "0x8")]
	public static Dictionary<PlantType, PlantData_> plantDatas;

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x3BAC90", Offset = "0x3B9890", VA = "0x1803BAC90")]
	public static void LoadPlantData()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public PlantDataLoader()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantDieReason
using Il2CppDummyDll;

[Token(Token = "0x20003B6")]
public enum PlantDieReason
{
	[Token(Token = "0x4001015")]
	Default = 0,
	[Token(Token = "0x4001016")]
	ByMix = 2
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Plantern
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001B4")]
public class Plantern : Plant
{
	[Token(Token = "0x40006A8")]
	[FieldOffset(Offset = "0x1B8")]
	protected GameObject lanternLight;

	[Token(Token = "0x40006A9")]
	[FieldOffset(Offset = "0x1C0")]
	private Vector3 lightPos;

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x4CB7B0", Offset = "0x4CA3B0", VA = "0x1804CB7B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x4CB9A0", Offset = "0x4CA5A0", VA = "0x1804CB9A0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x4CB5C0", Offset = "0x4CA1C0", VA = "0x1804CB5C0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x4CB6F0", Offset = "0x4CA2F0", VA = "0x1804CB6F0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x4CB660", Offset = "0x4CA260", VA = "0x1804CB660", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Plantern()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantSkinData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200035E")]
public class PlantSkinData
{
	[Token(Token = "0x4000BBB")]
	[FieldOffset(Offset = "0x10")]
	public PlantType thePlantType;

	[Token(Token = "0x4000BBC")]
	[FieldOffset(Offset = "0x14")]
	public int skinIndex;

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public PlantSkinData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantStatistics
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200007D")]
public struct PlantStatistics
{
	[Token(Token = "0x4000273")]
	[FieldOffset(Offset = "0x0")]
	public PlantType thePlantType;

	[Token(Token = "0x4000274")]
	[FieldOffset(Offset = "0x4")]
	public int useTimes;
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantStatus
using Il2CppDummyDll;

[Token(Token = "0x20003A9")]
public enum PlantStatus
{
	[Token(Token = "0x4000E37")]
	Defalut,
	[Token(Token = "0x4000E38")]
	GoldMagnet_attrack,
	[Token(Token = "0x4000E39")]
	HypnoMagnet_summon,
	[Token(Token = "0x4000E3A")]
	MagnetInterface_active,
	[Token(Token = "0x4000E3B")]
	UltimateHypno_Charge1,
	[Token(Token = "0x4000E3C")]
	UltimateHypno_Charge2,
	[Token(Token = "0x4000E3D")]
	BigGatling_moving,
	[Token(Token = "0x4000E3E")]
	BigGatling_raised,
	[Token(Token = "0x4000E3F")]
	Blover_blow,
	[Token(Token = "0x4000E40")]
	Shulkflower_shooting,
	[Token(Token = "0x4000E41")]
	Prism_shoot,
	[Token(Token = "0x4000E42")]
	CherryJalapeno_fly,
	[Token(Token = "0x4000E43")]
	UltimateCactus_superskill,
	[Token(Token = "0x4000E44")]
	Solar_super,
	[Token(Token = "0x4000E45")]
	Rest,
	[Token(Token = "0x4000E46")]
	Fume_shooting,
	[Token(Token = "0x4000E47")]
	Melonfume_charge,
	[Token(Token = "0x4000E48")]
	DoomTorch_active,
	[Token(Token = "0x4000E49")]
	Umbrella_blocking,
	[Token(Token = "0x4000E4A")]
	Kelp_grab,
	[Token(Token = "0x4000E4B")]
	AbyssSwordStar_attacking
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantTimer
using Il2CppDummyDll;

[Token(Token = "0x20003A6")]
public enum PlantTimer
{
	[Token(Token = "0x4000E08")]
	RecoverLess,
	[Token(Token = "0x4000E09")]
	MoreDamage,
	[Token(Token = "0x4000E0A")]
	BloodTimer
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlantType
using Il2CppDummyDll;

[Token(Token = "0x20003A5")]
public enum PlantType
{
	[Token(Token = "0x4000CCB")]
	Nothing = -1,
	[Token(Token = "0x4000CCC")]
	Peashooter = 0,
	[Token(Token = "0x4000CCD")]
	SunFlower = 1,
	[Token(Token = "0x4000CCE")]
	CherryBomb = 2,
	[Token(Token = "0x4000CCF")]
	WallNut = 3,
	[Token(Token = "0x4000CD0")]
	PotatoMine = 4,
	[Token(Token = "0x4000CD1")]
	Chomper = 5,
	[Token(Token = "0x4000CD2")]
	SmallPuff = 6,
	[Token(Token = "0x4000CD3")]
	FumeShroom = 7,
	[Token(Token = "0x4000CD4")]
	HypnoShroom = 8,
	[Token(Token = "0x4000CD5")]
	ScaredyShroom = 9,
	[Token(Token = "0x4000CD6")]
	IceShroom = 10,
	[Token(Token = "0x4000CD7")]
	DoomShroom = 11,
	[Token(Token = "0x4000CD8")]
	LilyPad = 12,
	[Token(Token = "0x4000CD9")]
	Squash = 13,
	[Token(Token = "0x4000CDA")]
	ThreePeater = 14,
	[Token(Token = "0x4000CDB")]
	Tanglekelp = 15,
	[Token(Token = "0x4000CDC")]
	Jalapeno = 16,
	[Token(Token = "0x4000CDD")]
	Caltrop = 17,
	[Token(Token = "0x4000CDE")]
	TorchWood = 18,
	[Token(Token = "0x4000CDF")]
	SeaShroom = 19,
	[Token(Token = "0x4000CE0")]
	Plantern = 20,
	[Token(Token = "0x4000CE1")]
	Cactus = 21,
	[Token(Token = "0x4000CE2")]
	Blover = 22,
	[Token(Token = "0x4000CE3")]
	StarFruit = 23,
	[Token(Token = "0x4000CE4")]
	Pumpkin = 24,
	[Token(Token = "0x4000CE5")]
	Magnetshroom = 25,
	[Token(Token = "0x4000CE6")]
	Cabbagepult = 26,
	[Token(Token = "0x4000CE7")]
	Pot = 27,
	[Token(Token = "0x4000CE8")]
	Cornpult = 28,
	[Token(Token = "0x4000CE9")]
	Garlic = 29,
	[Token(Token = "0x4000CEA")]
	Umbrellaleaf = 30,
	[Token(Token = "0x4000CEB")]
	Marigold = 31,
	[Token(Token = "0x4000CEC")]
	Melonpult = 32,
	[Token(Token = "0x4000CED")]
	Shulkflower = 33,
	[Token(Token = "0x4000CEE")]
	ElectricOnion = 34,
	[Token(Token = "0x4000CEF")]
	PineFurnace = 35,
	[Token(Token = "0x4000CF0")]
	Gravebuster = 239,
	[Token(Token = "0x4000CF1")]
	ObsidianWheat = 240,
	[Token(Token = "0x4000CF2")]
	IceBean = 241,
	[Token(Token = "0x4000CF3")]
	EndoFlameGirl = 242,
	[Token(Token = "0x4000CF4")]
	Hamburger = 243,
	[Token(Token = "0x4000CF5")]
	MixBomb = 244,
	[Token(Token = "0x4000CF6")]
	Imitater = 245,
	[Token(Token = "0x4000CF7")]
	MagnetBox = 246,
	[Token(Token = "0x4000CF8")]
	MagnetInterface = 247,
	[Token(Token = "0x4000CF9")]
	Squalour = 248,
	[Token(Token = "0x4000CFA")]
	SwordStar = 249,
	[Token(Token = "0x4000CFB")]
	PresentZombie = 250,
	[Token(Token = "0x4000CFC")]
	BigSunNut = 251,
	[Token(Token = "0x4000CFD")]
	CattailGirl = 252,
	[Token(Token = "0x4000CFE")]
	Wheat = 253,
	[Token(Token = "0x4000CFF")]
	EndoFlame = 254,
	[Token(Token = "0x4000D00")]
	BigWallNut = 255,
	[Token(Token = "0x4000D01")]
	Present = 256,
	[Token(Token = "0x4000D02")]
	Pit = 257,
	[Token(Token = "0x4000D03")]
	Refrash = 258,
	[Token(Token = "0x4000D04")]
	AbyssSwordStar = 300,
	[Token(Token = "0x4000D05")]
	HypnoEmperor = 900,
	[Token(Token = "0x4000D06")]
	UltimateGatling = 901,
	[Token(Token = "0x4000D07")]
	UltimateTorch = 902,
	[Token(Token = "0x4000D08")]
	UltimateChomper = 903,
	[Token(Token = "0x4000D09")]
	UltimateFume = 904,
	[Token(Token = "0x4000D0A")]
	SuperSunNut = 905,
	[Token(Token = "0x4000D0B")]
	ObsidianSpike = 906,
	[Token(Token = "0x4000D0C")]
	DoomGatling = 907,
	[Token(Token = "0x4000D0D")]
	SnowGatlingPuff = 908,
	[Token(Token = "0x4000D0E")]
	UltimateStar = 909,
	[Token(Token = "0x4000D0F")]
	UltimateGloom = 910,
	[Token(Token = "0x4000D10")]
	UltimatePumpkin = 911,
	[Token(Token = "0x4000D11")]
	UltimateFly = 912,
	[Token(Token = "0x4000D12")]
	UltimateTallNut = 913,
	[Token(Token = "0x4000D13")]
	UltimateMelon = 914,
	[Token(Token = "0x4000D14")]
	UltimateCannon = 915,
	[Token(Token = "0x4000D15")]
	EmeraldUmbrella = 916,
	[Token(Token = "0x4000D16")]
	HypnoQueen = 917,
	[Token(Token = "0x4000D17")]
	AshThreePeater = 918,
	[Token(Token = "0x4000D18")]
	SuperThreePeater = 919,
	[Token(Token = "0x4000D19")]
	UltimateBlover = 920,
	[Token(Token = "0x4000D1A")]
	GarlicUltimateChomper = 921,
	[Token(Token = "0x4000D1B")]
	CherryUltimatePumpkin = 922,
	[Token(Token = "0x4000D1C")]
	RedEmeraldUmbrella = 923,
	[Token(Token = "0x4000D1D")]
	UltimateHypno = 924,
	[Token(Token = "0x4000D1E")]
	UltimatePotatoNut = 925,
	[Token(Token = "0x4000D1F")]
	CattailLour = 926,
	[Token(Token = "0x4000D20")]
	UltimateBigGatling = 927,
	[Token(Token = "0x4000D21")]
	SuperHypnoDoom = 928,
	[Token(Token = "0x4000D22")]
	SunGatlingPuff = 929,
	[Token(Token = "0x4000D23")]
	GatlingDoomScaredy = 930,
	[Token(Token = "0x4000D24")]
	ObsidianWallNut = 931,
	[Token(Token = "0x4000D25")]
	GoldThreeTorch = 932,
	[Token(Token = "0x4000D26")]
	UltimateCactus = 933,
	[Token(Token = "0x4000D27")]
	SolarCabbage = 934,
	[Token(Token = "0x4000D28")]
	IFVPumpkin = 935,
	[Token(Token = "0x4000D29")]
	SolarPot = 936,
	[Token(Token = "0x4000D2A")]
	LaserUmbrella = 937,
	[Token(Token = "0x4000D2B")]
	GoldHypnoDoom = 938,
	[Token(Token = "0x4000D2C")]
	UltimateGatlingBlover = 939,
	[Token(Token = "0x4000D2D")]
	UltimateSpring = 940,
	[Token(Token = "0x4000D2E")]
	UltimateKelp = 941,
	[Token(Token = "0x4000D2F")]
	IFVIronPuff = 942,
	[Token(Token = "0x4000D30")]
	PeaSunFlower = 1000,
	[Token(Token = "0x4000D31")]
	Cherryshooter = 1001,
	[Token(Token = "0x4000D32")]
	SunBomb = 1002,
	[Token(Token = "0x4000D33")]
	CherryNut = 1003,
	[Token(Token = "0x4000D34")]
	PeaNut = 1004,
	[Token(Token = "0x4000D35")]
	SuperCherryShooter = 1005,
	[Token(Token = "0x4000D36")]
	SunNut = 1006,
	[Token(Token = "0x4000D37")]
	PeaMine = 1007,
	[Token(Token = "0x4000D38")]
	DoubleCherry = 1008,
	[Token(Token = "0x4000D39")]
	SunMine = 1009,
	[Token(Token = "0x4000D3A")]
	PotatoNut = 1010,
	[Token(Token = "0x4000D3B")]
	PeaChomper = 1011,
	[Token(Token = "0x4000D3C")]
	NutChomper = 1012,
	[Token(Token = "0x4000D3D")]
	SuperChomper = 1013,
	[Token(Token = "0x4000D3E")]
	SunChomper = 1014,
	[Token(Token = "0x4000D3F")]
	PotatoChomper = 1015,
	[Token(Token = "0x4000D40")]
	CherryChomper = 1016,
	[Token(Token = "0x4000D41")]
	CherryGatling = 1017,
	[Token(Token = "0x4000D42")]
	PeaPuff = 1018,
	[Token(Token = "0x4000D43")]
	DoublePuff = 1019,
	[Token(Token = "0x4000D44")]
	IronPea = 1020,
	[Token(Token = "0x4000D45")]
	PuffNut = 1021,
	[Token(Token = "0x4000D46")]
	HypnoPuff = 1022,
	[Token(Token = "0x4000D47")]
	HypnoFume = 1023,
	[Token(Token = "0x4000D48")]
	ScaredyHypno = 1024,
	[Token(Token = "0x4000D49")]
	ScaredFume = 1025,
	[Token(Token = "0x4000D4A")]
	SuperHypno = 1026,
	[Token(Token = "0x4000D4B")]
	TallNut = 1027,
	[Token(Token = "0x4000D4C")]
	TallNutFootball = 1028,
	[Token(Token = "0x4000D4D")]
	IronNut = 1029,
	[Token(Token = "0x4000D4E")]
	DoubleShooer = 1030,
	[Token(Token = "0x4000D4F")]
	SunShroom = 1031,
	[Token(Token = "0x4000D50")]
	GatlingPea = 1032,
	[Token(Token = "0x4000D51")]
	TwinFlower = 1033,
	[Token(Token = "0x4000D52")]
	SnowPeaShooter = 1034,
	[Token(Token = "0x4000D53")]
	IcePuff = 1035,
	[Token(Token = "0x4000D54")]
	SmallIceShroom = 1036,
	[Token(Token = "0x4000D55")]
	IceFumeShroom = 1037,
	[Token(Token = "0x4000D56")]
	IceScaredyShroom = 1038,
	[Token(Token = "0x4000D57")]
	TallIceNut = 1039,
	[Token(Token = "0x4000D58")]
	IceDoom = 1040,
	[Token(Token = "0x4000D59")]
	IceHypno = 1041,
	[Token(Token = "0x4000D5A")]
	ScaredyDoom = 1042,
	[Token(Token = "0x4000D5B")]
	DoomFume = 1043,
	[Token(Token = "0x4000D5C")]
	PuffDoom = 1044,
	[Token(Token = "0x4000D5D")]
	HypnoDoom = 1045,
	[Token(Token = "0x4000D5E")]
	SuperFume = 1046,
	[Token(Token = "0x4000D5F")]
	ThreeSquash = 1047,
	[Token(Token = "0x4000D60")]
	CaltropNut = 1048,
	[Token(Token = "0x4000D61")]
	Jalakelp = 1049,
	[Token(Token = "0x4000D62")]
	Squashkelp = 1050,
	[Token(Token = "0x4000D63")]
	Threekelp = 1051,
	[Token(Token = "0x4000D64")]
	SuperTorch = 1052,
	[Token(Token = "0x4000D65")]
	JalaTorch = 1053,
	[Token(Token = "0x4000D66")]
	JalaSquash = 1054,
	[Token(Token = "0x4000D67")]
	ThreeTorch = 1055,
	[Token(Token = "0x4000D68")]
	KelpTorch = 1056,
	[Token(Token = "0x4000D69")]
	FireSquash = 1057,
	[Token(Token = "0x4000D6A")]
	DarkThreePeater = 1058,
	[Token(Token = "0x4000D6B")]
	SquashTorch = 1059,
	[Token(Token = "0x4000D6C")]
	SpikeRock = 1060,
	[Token(Token = "0x4000D6D")]
	TorchSpike = 1061,
	[Token(Token = "0x4000D6E")]
	JalaSpike = 1062,
	[Token(Token = "0x4000D6F")]
	SquashSpike = 1063,
	[Token(Token = "0x4000D70")]
	ThreeSpike = 1064,
	[Token(Token = "0x4000D71")]
	GatlingPuff = 1065,
	[Token(Token = "0x4000D72")]
	SuperKelp = 1066,
	[Token(Token = "0x4000D73")]
	CattailPlant = 1067,
	[Token(Token = "0x4000D74")]
	IceCattail = 1068,
	[Token(Token = "0x4000D75")]
	FireCattail = 1069,
	[Token(Token = "0x4000D76")]
	GloomShroom = 1070,
	[Token(Token = "0x4000D77")]
	FireGloom = 1071,
	[Token(Token = "0x4000D78")]
	IceGloom = 1072,
	[Token(Token = "0x4000D79")]
	TallFireNut = 1073,
	[Token(Token = "0x4000D7A")]
	IceSpikeRock = 1074,
	[Token(Token = "0x4000D7B")]
	FireSpikeRock = 1075,
	[Token(Token = "0x4000D7C")]
	SeaCactus = 1076,
	[Token(Token = "0x4000D7D")]
	SeaSunShroom = 1077,
	[Token(Token = "0x4000D7E")]
	SeaLantern = 1078,
	[Token(Token = "0x4000D7F")]
	LanternCactus = 1079,
	[Token(Token = "0x4000D80")]
	LanternBlover = 1080,
	[Token(Token = "0x4000D81")]
	LanternStar = 1081,
	[Token(Token = "0x4000D82")]
	CactusBlover = 1082,
	[Token(Token = "0x4000D83")]
	SeaStarfruit = 1083,
	[Token(Token = "0x4000D84")]
	StarBlover = 1084,
	[Token(Token = "0x4000D85")]
	CacstusStar = 1085,
	[Token(Token = "0x4000D86")]
	SeaBlover = 1086,
	[Token(Token = "0x4000D87")]
	LanternPumpkin = 1087,
	[Token(Token = "0x4000D88")]
	CactusPumpkin = 1088,
	[Token(Token = "0x4000D89")]
	StarPumpkin = 1089,
	[Token(Token = "0x4000D8A")]
	SplitPea = 1090,
	[Token(Token = "0x4000D8B")]
	BlowerPumpkin = 1091,
	[Token(Token = "0x4000D8C")]
	MagnetPumpkin = 1092,
	[Token(Token = "0x4000D8D")]
	MagnetStar = 1093,
	[Token(Token = "0x4000D8E")]
	JackboxStar = 1094,
	[Token(Token = "0x4000D8F")]
	PickaxeStar = 1095,
	[Token(Token = "0x4000D90")]
	IronStar = 1096,
	[Token(Token = "0x4000D91")]
	IronPumpkin = 1097,
	[Token(Token = "0x4000D92")]
	JackboxPumpkin = 1098,
	[Token(Token = "0x4000D93")]
	PickaxePumpkin = 1099,
	[Token(Token = "0x4000D94")]
	LanternMagnet = 1100,
	[Token(Token = "0x4000D95")]
	SeaMagnet = 1101,
	[Token(Token = "0x4000D96")]
	MagnetBlover = 1102,
	[Token(Token = "0x4000D97")]
	MagnetCactus = 1103,
	[Token(Token = "0x4000D98")]
	SuperStar = 1104,
	[Token(Token = "0x4000D99")]
	DoubleSnow = 1105,
	[Token(Token = "0x4000D9A")]
	SnowGatling = 1106,
	[Token(Token = "0x4000D9B")]
	SnowSplit = 1107,
	[Token(Token = "0x4000D9C")]
	CherrySplit = 1108,
	[Token(Token = "0x4000D9D")]
	SniperPea = 1109,
	[Token(Token = "0x4000D9E")]
	SuperPumpkin = 1110,
	[Token(Token = "0x4000D9F")]
	SunCabbage = 1111,
	[Token(Token = "0x4000DA0")]
	CabbagePot = 1112,
	[Token(Token = "0x4000DA1")]
	CornCabbage = 1113,
	[Token(Token = "0x4000DA2")]
	CornPot = 1114,
	[Token(Token = "0x4000DA3")]
	CornUmbrella = 1115,
	[Token(Token = "0x4000DA4")]
	WinterMelon = 1116,
	[Token(Token = "0x4000DA5")]
	GarlicCorn = 1117,
	[Token(Token = "0x4000DA6")]
	GarlicCabbage = 1118,
	[Token(Token = "0x4000DA7")]
	GarlicMelon = 1119,
	[Token(Token = "0x4000DA8")]
	CobCannon = 1120,
	[Token(Token = "0x4000DA9")]
	CornMelon = 1121,
	[Token(Token = "0x4000DAA")]
	FireCannon = 1122,
	[Token(Token = "0x4000DAB")]
	IceCannon = 1123,
	[Token(Token = "0x4000DAC")]
	CabbageMelon = 1124,
	[Token(Token = "0x4000DAD")]
	MelonPot = 1125,
	[Token(Token = "0x4000DAE")]
	SuperMelon = 1126,
	[Token(Token = "0x4000DAF")]
	GarlicUmbrella = 1127,
	[Token(Token = "0x4000DB0")]
	CabbageUmbrella = 1128,
	[Token(Token = "0x4000DB1")]
	MachineNut = 1129,
	[Token(Token = "0x4000DB2")]
	GarlicPot = 1130,
	[Token(Token = "0x4000DB3")]
	MelonUmbrella = 1131,
	[Token(Token = "0x4000DB4")]
	MelonCannon = 1132,
	[Token(Token = "0x4000DB5")]
	UmbrellaPot = 1133,
	[Token(Token = "0x4000DB6")]
	SilverCabbage = 1134,
	[Token(Token = "0x4000DB7")]
	GoldCabbage = 1135,
	[Token(Token = "0x4000DB8")]
	SilverPot = 1136,
	[Token(Token = "0x4000DB9")]
	GoldPot = 1137,
	[Token(Token = "0x4000DBA")]
	SilverCorn = 1138,
	[Token(Token = "0x4000DBB")]
	GoldCorn = 1139,
	[Token(Token = "0x4000DBC")]
	TwinMarigold = 1140,
	[Token(Token = "0x4000DBD")]
	SilverMelon = 1141,
	[Token(Token = "0x4000DBE")]
	GoldMelon = 1142,
	[Token(Token = "0x4000DBF")]
	SilverUmbrella = 1143,
	[Token(Token = "0x4000DC0")]
	GoldUmbrella = 1144,
	[Token(Token = "0x4000DC1")]
	SilverGarlic = 1145,
	[Token(Token = "0x4000DC2")]
	GoldGarlic = 1146,
	[Token(Token = "0x4000DC3")]
	HypnoNut = 1147,
	[Token(Token = "0x4000DC4")]
	SuperUmbrella = 1148,
	[Token(Token = "0x4000DC5")]
	FireMelon = 1149,
	[Token(Token = "0x4000DC6")]
	GoldMagnet = 1150,
	[Token(Token = "0x4000DC7")]
	SuperMachineNut = 1151,
	[Token(Token = "0x4000DC8")]
	IronPuff = 1152,
	[Token(Token = "0x4000DC9")]
	SplitPuff = 1153,
	[Token(Token = "0x4000DCA")]
	SunMagnet = 1154,
	[Token(Token = "0x4000DCB")]
	FireCaltrop = 1155,
	[Token(Token = "0x4000DCC")]
	Firekelp = 1156,
	[Token(Token = "0x4000DCD")]
	HypnoMagnet = 1157,
	[Token(Token = "0x4000DCE")]
	MagnetFume = 1158,
	[Token(Token = "0x4000DCF")]
	IronFume = 1159,
	[Token(Token = "0x4000DD0")]
	HelmetFume = 1160,
	[Token(Token = "0x4000DD1")]
	BigGatling = 1161,
	[Token(Token = "0x4000DD2")]
	CherryMine = 1162,
	[Token(Token = "0x4000DD3")]
	JalaMine = 1163,
	[Token(Token = "0x4000DD4")]
	CherryPumpkin = 1164,
	[Token(Token = "0x4000DD5")]
	SuperSnowGatling = 1165,
	[Token(Token = "0x4000DD6")]
	CherryMagnet = 1166,
	[Token(Token = "0x4000DD7")]
	FireSniper = 1167,
	[Token(Token = "0x4000DD8")]
	SuperGatling = 1168,
	[Token(Token = "0x4000DD9")]
	BigPumpkin = 1169,
	[Token(Token = "0x4000DDA")]
	PotatoPuff = 1170,
	[Token(Token = "0x4000DDB")]
	ScaredyPotato = 1171,
	[Token(Token = "0x4000DDC")]
	GarlicFume = 1172,
	[Token(Token = "0x4000DDD")]
	ObsidianJalapeno = 1173,
	[Token(Token = "0x4000DDE")]
	BigChomper = 1174,
	[Token(Token = "0x4000DDF")]
	BigSeaShroom = 1175,
	[Token(Token = "0x4000DE0")]
	HypnoBlover = 1176,
	[Token(Token = "0x4000DE1")]
	Twinshulk = 1177,
	[Token(Token = "0x4000DE2")]
	CherryTorch = 1178,
	[Token(Token = "0x4000DE3")]
	CherryJalapeno = 1179,
	[Token(Token = "0x4000DE4")]
	IceCaltrop = 1180,
	[Token(Token = "0x4000DE5")]
	GarlicBlover = 1181,
	[Token(Token = "0x4000DE6")]
	IceTorch = 1182,
	[Token(Token = "0x4000DE7")]
	StarPuff = 1183,
	[Token(Token = "0x4000DE8")]
	SunPot = 1184,
	[Token(Token = "0x4000DE9")]
	LanternUmbrella = 1185,
	[Token(Token = "0x4000DEA")]
	CactusUmbrella = 1186,
	[Token(Token = "0x4000DEB")]
	SilverSunflower = 1187,
	[Token(Token = "0x4000DEC")]
	GoldSunflower = 1188,
	[Token(Token = "0x4000DED")]
	IceNut = 1189,
	[Token(Token = "0x4000DEE")]
	PotatoPumpkin = 1190,
	[Token(Token = "0x4000DEF")]
	DoomCactus = 1191,
	[Token(Token = "0x4000DF0")]
	DoomChomper = 1192,
	[Token(Token = "0x4000DF1")]
	FireFume = 1193,
	[Token(Token = "0x4000DF2")]
	DoomPeashooter = 1194,
	[Token(Token = "0x4000DF3")]
	LanternPot = 1195,
	[Token(Token = "0x4000DF4")]
	MelonFume = 1196,
	[Token(Token = "0x4000DF5")]
	StarTorch = 1197,
	[Token(Token = "0x4000DF6")]
	JalaStar = 1198,
	[Token(Token = "0x4000DF7")]
	DoomTorch = 1199,
	[Token(Token = "0x4000DF8")]
	ScaredyPumpkin = 1200,
	[Token(Token = "0x4000DF9")]
	ScaredyStar = 1201,
	[Token(Token = "0x4000DFA")]
	SquashPumpkin = 1202,
	[Token(Token = "0x4000DFB")]
	CornPuff = 1203,
	[Token(Token = "0x4000DFC")]
	BloverUmbrella = 1204,
	[Token(Token = "0x4000DFD")]
	HypnoPumpkin = 1205,
	[Token(Token = "0x4000DFE")]
	NutUmbrella = 1206,
	[Token(Token = "0x4000DFF")]
	CherryUmbrella = 1207,
	[Token(Token = "0x4000E00")]
	PortalPea = 1208,
	[Token(Token = "0x4000E01")]
	MagnetCorn = 1209,
	[Token(Token = "0x4000E02")]
	PortalCorn = 1210,
	[Token(Token = "0x4000E03")]
	IronCorn = 1211,
	[Token(Token = "0x4000E04")]
	IceCherry = 1212,
	[Token(Token = "0x4000E05")]
	MagnetDoom = 1213,
	[Token(Token = "0x4000E06")]
	PortalDoom = 1214
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlatyerSettings
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200035D")]
public class PlatyerSettings
{
	[Token(Token = "0x4000B98")]
	[FieldOffset(Offset = "0x10")]
	public bool isSaved;

	[Token(Token = "0x4000B99")]
	[FieldOffset(Offset = "0x18")]
	public bool[] advLevelCompleted;

	[Token(Token = "0x4000B9A")]
	[FieldOffset(Offset = "0x20")]
	public bool[] clgLevelCompleted;

	[Token(Token = "0x4000B9B")]
	[FieldOffset(Offset = "0x28")]
	public bool[] gameLevelCompleted;

	[Token(Token = "0x4000B9C")]
	[FieldOffset(Offset = "0x30")]
	public int difficulty;

	[Token(Token = "0x4000B9D")]
	[FieldOffset(Offset = "0x34")]
	public float gameMusicVolume;

	[Token(Token = "0x4000B9E")]
	[FieldOffset(Offset = "0x38")]
	public float gameSoundVolume;

	[Token(Token = "0x4000B9F")]
	[FieldOffset(Offset = "0x3C")]
	public float gameSpeed;

	[Token(Token = "0x4000BA0")]
	[FieldOffset(Offset = "0x40")]
	public bool[] survivalLevelCompleted;

	[Token(Token = "0x4000BA1")]
	[FieldOffset(Offset = "0x48")]
	public float cameraSize;

	[Token(Token = "0x4000BA2")]
	[FieldOffset(Offset = "0x4C")]
	public float canvasMatch;

	[Token(Token = "0x4000BA3")]
	[FieldOffset(Offset = "0x50")]
	public bool shootingWithoutGlove;

	[Token(Token = "0x4000BA4")]
	[FieldOffset(Offset = "0x51")]
	public bool levelTutor;

	[Token(Token = "0x4000BA5")]
	[FieldOffset(Offset = "0x58")]
	public List<int> tutorLevelCompleted;

	[Token(Token = "0x4000BA6")]
	[FieldOffset(Offset = "0x60")]
	public List<int> travelLevelCompleted;

	[Token(Token = "0x4000BA7")]
	[FieldOffset(Offset = "0x68")]
	public List<int> skinLevelCompleted;

	[Token(Token = "0x4000BA8")]
	[FieldOffset(Offset = "0x70")]
	public List<string> nameLevelCompleted;

	[Token(Token = "0x4000BA9")]
	[FieldOffset(Offset = "0x78")]
	public bool wheatColor;

	[Token(Token = "0x4000BAA")]
	[FieldOffset(Offset = "0x80")]
	public List<Achievement> achievements;

	[Token(Token = "0x4000BAB")]
	[FieldOffset(Offset = "0x88")]
	public int advLevel;

	[Token(Token = "0x4000BAC")]
	[FieldOffset(Offset = "0x8C")]
	public int advZhouMu;

	[Token(Token = "0x4000BAD")]
	[FieldOffset(Offset = "0x90")]
	public List<PlantType> randomPlantInZhouMu;

	[Token(Token = "0x4000BAE")]
	[FieldOffset(Offset = "0x98")]
	public bool disablePreSelectInAdv;

	[Token(Token = "0x4000BAF")]
	[FieldOffset(Offset = "0x99")]
	public bool distablexplodeFlash;

	[Token(Token = "0x4000BB0")]
	[FieldOffset(Offset = "0xA0")]
	public long theMoneyCount;

	[Token(Token = "0x4000BB1")]
	[FieldOffset(Offset = "0xA8")]
	public List<PlantSkinData> plantSkinData;

	[Token(Token = "0x4000BB2")]
	[FieldOffset(Offset = "0xB0")]
	public List<PlantType> bannedInPVPScaryPot;

	[Token(Token = "0x4000BB3")]
	[FieldOffset(Offset = "0xB8")]
	public List<AbyssData> abyssDatas;

	[Token(Token = "0x4000BB4")]
	[FieldOffset(Offset = "0xC0")]
	public List<AbyssData> abyssBagDatas;

	[Token(Token = "0x4000BB5")]
	[FieldOffset(Offset = "0xC8")]
	public List<AbyssPlantLevel> abyssPlantLevels;

	[Token(Token = "0x4000BB6")]
	[FieldOffset(Offset = "0xD0")]
	public List<AbyssBuff> sbyssBuffs;

	[Token(Token = "0x4000BB7")]
	[FieldOffset(Offset = "0xD8")]
	public bool[] buffsSold;

	[Token(Token = "0x4000BB8")]
	[FieldOffset(Offset = "0xE0")]
	public int abyssLevel;

	[Token(Token = "0x4000BB9")]
	[FieldOffset(Offset = "0xE4")]
	public int abyssRefreshCount;

	[Token(Token = "0x4000BBA")]
	[FieldOffset(Offset = "0xE8")]
	public int abyssMoney;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x3EC8B0", Offset = "0x3EB4B0", VA = "0x1803EC8B0")]
	public PlatyerSettings()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PlayerName
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000027")]
public class PlayerName : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x31C4C0", Offset = "0x31B0C0", VA = "0x18031C4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PlayerName()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PogoZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E0")]
public class PogoZombie : Zombie
{
	[Token(Token = "0x400084A")]
	[FieldOffset(Offset = "0x220")]
	private Vector2 jumpPos2;

	[Token(Token = "0x400084B")]
	[FieldOffset(Offset = "0x228")]
	private Vector2 range;

	[Token(Token = "0x400084C")]
	[FieldOffset(Offset = "0x230")]
	private bool pause;

	[Token(Token = "0x400084D")]
	[FieldOffset(Offset = "0x231")]
	private bool startJump;

	[Token(Token = "0x400084E")]
	[FieldOffset(Offset = "0x234")]
	[SerializeField]
	private int wait;

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x388290", Offset = "0x386E90", VA = "0x180388290", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x388EF0", Offset = "0x387AF0", VA = "0x180388EF0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x388870", Offset = "0x387470", VA = "0x180388870")]
	private void LandSound()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x3882B0", Offset = "0x386EB0", VA = "0x1803882B0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x3768F0", Offset = "0x3754F0", VA = "0x1803768F0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x388420", Offset = "0x387020", VA = "0x180388420", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x388AA0", Offset = "0x3876A0", VA = "0x180388AA0")]
	private void PoloUpdate()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x388910", Offset = "0x387510", VA = "0x180388910", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x388460", Offset = "0x387060", VA = "0x180388460")]
	private void JumpFail()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x388940", Offset = "0x387540", VA = "0x180388940", Slot = "55")]
	public virtual void LoseJumper(int reason = 0)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x388D00", Offset = "0x387900", VA = "0x180388D00", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x37AE30", Offset = "0x379A30", VA = "0x18037AE30", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x388EC0", Offset = "0x387AC0", VA = "0x180388EC0", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x388F60", Offset = "0x387B60", VA = "0x180388F60")]
	public PogoZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PolevaulterZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E1")]
public class PolevaulterZombie : Zombie
{
	[Token(Token = "0x400084F")]
	[FieldOffset(Offset = "0x220")]
	protected Vector2 jumpPos2;

	[Token(Token = "0x4000850")]
	[FieldOffset(Offset = "0x228")]
	protected Vector2 range;

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x388F80", Offset = "0x387B80", VA = "0x180388F80", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x389030", Offset = "0x387C30", VA = "0x180389030", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x389690", Offset = "0x388290", VA = "0x180389690", Slot = "55")]
	protected virtual void PolUpdate()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x389510", Offset = "0x388110", VA = "0x180389510", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x3894C0", Offset = "0x3880C0", VA = "0x1803894C0", Slot = "56")]
	public virtual void JumpOver()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x3895D0", Offset = "0x3881D0", VA = "0x1803895D0")]
	public void PlayJumpSound1()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x389630", Offset = "0x388230", VA = "0x180389630")]
	public void PlayJumpSound2()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x388FA0", Offset = "0x387BA0", VA = "0x180388FA0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x389080", Offset = "0x387C80", VA = "0x180389080")]
	private void JumpFail()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x376A00", Offset = "0x375600", VA = "0x180376A00")]
	public PolevaulterZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Portal
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200033E")]
public class Portal : MonoBehaviour
{
	[Token(Token = "0x4000ABA")]
	[FieldOffset(Offset = "0x20")]
	public int thePortalRow;

	[Token(Token = "0x4000ABB")]
	[FieldOffset(Offset = "0x28")]
	public Portal next;

	[Token(Token = "0x4000ABC")]
	[FieldOffset(Offset = "0x30")]
	public Portal pre;

	[Token(Token = "0x4000ABD")]
	[FieldOffset(Offset = "0x38")]
	private Transform axis;

	[Token(Token = "0x4000ABE")]
	[FieldOffset(Offset = "0x40")]
	public Towards Towards;

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x3DBD20", Offset = "0x3DA920", VA = "0x1803DBD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x3DC430", Offset = "0x3DB030", VA = "0x1803DC430")]
	private void Start()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x3DC070", Offset = "0x3DAC70", VA = "0x1803DC070")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x3DC010", Offset = "0x3DAC10", VA = "0x1803DC010")]
	public void Die()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x3DBD90", Offset = "0x3DA990", VA = "0x1803DBD90")]
	public static Portal CreatePortal(int theColumn, int theRow)
	{
		return null;
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Portal()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PortalCorn
using Il2CppDummyDll;

[Token(Token = "0x200023B")]
public class PortalCorn : Cornpult
{
	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x33D9A0", Offset = "0x33C5A0", VA = "0x18033D9A0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x33D9D0", Offset = "0x33C5D0", VA = "0x18033D9D0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x33D9C0", Offset = "0x33C5C0", VA = "0x18033D9C0", Slot = "47")]
	protected override BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "42")]
	protected override void SetShoot()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public PortalCorn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PortalDoom
using Il2CppDummyDll;

[Token(Token = "0x2000148")]
public class PortalDoom : DoomShroom
{
	[Token(Token = "0x600060D")]
	[Address(RVA = "0x4A7520", Offset = "0x4A6120", VA = "0x1804A7520", Slot = "39")]
	public override void AnimExplode()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public PortalDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Pot
using Il2CppDummyDll;

[Token(Token = "0x20001B5")]
public class Pot : Plant
{
	[Token(Token = "0x40006AA")]
	[FieldOffset(Offset = "0x1B8")]
	public bool carry;

	[Token(Token = "0x40006AB")]
	[FieldOffset(Offset = "0x1B9")]
	public bool lowerPot;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x4CBC80", Offset = "0x4CA880", VA = "0x1804CBC80", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x4CC790", Offset = "0x4CB390", VA = "0x1804CC790", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x4CC050", Offset = "0x4CAC50", VA = "0x1804CC050", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x4CC2D0", Offset = "0x4CAED0", VA = "0x1804CC2D0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x4CBA40", Offset = "0x4CA640", VA = "0x1804CBA40", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x4CC7B0", Offset = "0x4CB3B0", VA = "0x1804CC7B0")]
	private void UniqueEffect(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Pot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotatoChomper
using Il2CppDummyDll;

[Token(Token = "0x2000158")]
public class PotatoChomper : Chomper
{
	[Token(Token = "0x6000678")]
	[Address(RVA = "0x4BAEE0", Offset = "0x4B9AE0", VA = "0x1804BAEE0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x4BB1C0", Offset = "0x4B9DC0", VA = "0x1804BB1C0")]
	private void Explode()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x4BB2B0", Offset = "0x4B9EB0", VA = "0x1804BB2B0", Slot = "40")]
	protected override void Swallow()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x4BADD0", Offset = "0x4B99D0", VA = "0x1804BADD0")]
	private void CreateMine()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x4BB230", Offset = "0x4B9E30", VA = "0x1804BB230", Slot = "39")]
	protected override void SetAttackRange()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public PotatoChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotatoMine
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000149")]
public class PotatoMine : Plant
{
	[Token(Token = "0x400060C")]
	[FieldOffset(Offset = "0x1B8")]
	public bool isAready;

	[Token(Token = "0x400060D")]
	[FieldOffset(Offset = "0x1C0")]
	private GameObject nearestZombie;

	[Token(Token = "0x400060E")]
	[FieldOffset(Offset = "0x1C8")]
	private float flashInterval;

	[Token(Token = "0x400060F")]
	[FieldOffset(Offset = "0x1CC")]
	private float flashTime;

	[Token(Token = "0x4000610")]
	[FieldOffset(Offset = "0x1D0")]
	private bool isActive;

	[Token(Token = "0x4000611")]
	[FieldOffset(Offset = "0x1D1")]
	private bool explode;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x4A77D0", Offset = "0x4A63D0", VA = "0x1804A77D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x4A8040", Offset = "0x4A6C40", VA = "0x1804A8040", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x4A7E10", Offset = "0x4A6A10", VA = "0x1804A7E10")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x339B70", Offset = "0x338770", VA = "0x180339B70")]
	private void DelayDie()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x4A75A0", Offset = "0x4A61A0", VA = "0x1804A75A0")]
	public void AnimStartRise()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x4A7590", Offset = "0x4A6190", VA = "0x1804A7590")]
	public void AnimRiseOver()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x4A7810", Offset = "0x4A6410", VA = "0x1804A7810")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x4A7EF0", Offset = "0x4A6AF0", VA = "0x1804A7EF0")]
	private void SetFlash()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x4A7B20", Offset = "0x4A6720", VA = "0x1804A7B20", Slot = "39")]
	protected virtual GameObject GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x4A8260", Offset = "0x4A6E60", VA = "0x1804A8260")]
	public PotatoMine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotatoNut
using Il2CppDummyDll;

[Token(Token = "0x2000159")]
public class PotatoNut : WallNut
{
	[Token(Token = "0x4000633")]
	[FieldOffset(Offset = "0x1B8")]
	private bool isExplode1;

	[Token(Token = "0x4000634")]
	[FieldOffset(Offset = "0x1B9")]
	private bool isExplode2;

	[Token(Token = "0x4000635")]
	[FieldOffset(Offset = "0x1BC")]
	private float flashInterval;

	[Token(Token = "0x4000636")]
	[FieldOffset(Offset = "0x1C0")]
	private float flashTime;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x4BBA60", Offset = "0x4BA660", VA = "0x1804BBA60", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x4BB670", Offset = "0x4BA270", VA = "0x1804BB670", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x4BB370", Offset = "0x4B9F70", VA = "0x1804BB370", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x4BB380", Offset = "0x4B9F80", VA = "0x1804BB380")]
	private void Explode(int dmg, bool isShake)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x4BB9C0", Offset = "0x4BA5C0", VA = "0x1804BB9C0")]
	private void SetFlash()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x4BBB90", Offset = "0x4BA790", VA = "0x1804BBB90")]
	public PotatoNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotatoPuff
using Il2CppDummyDll;

[Token(Token = "0x200023C")]
public class PotatoPuff : SmallPuff
{
	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x33DB50", Offset = "0x33C750", VA = "0x18033DB50", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x33D9E0", Offset = "0x33C5E0", VA = "0x18033D9E0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x33DE00", Offset = "0x33CA00", VA = "0x18033DE00", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x33DBC0", Offset = "0x33C7C0", VA = "0x18033DBC0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public PotatoPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotatoPumpkin
using Il2CppDummyDll;

[Token(Token = "0x20001B6")]
public class PotatoPumpkin : Pumpkin
{
	[Token(Token = "0x6000851")]
	[Address(RVA = "0x4CCDC0", Offset = "0x4CB9C0", VA = "0x1804CCDC0", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x4CCB40", Offset = "0x4CB740", VA = "0x1804CCB40")]
	private void Explode(int damage)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x4CCB30", Offset = "0x4CB730", VA = "0x1804CCB30", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public PotatoPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PotEffects
using Il2CppDummyDll;

[Token(Token = "0x20003CC")]
public class PotEffects
{
	[Token(Token = "0x600136E")]
	[Address(RVA = "0x43BB30", Offset = "0x43A730", VA = "0x18043BB30")]
	public static void CabbagePotEffect(Plant cabbage, int theColumn, int theRow, float originalValue, float targetValue)
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x43BD60", Offset = "0x43A960", VA = "0x18043BD60")]
	public static void CornPotEffect(Plant corn, int theColumn, int theRow, int originalValue, int targetValue)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x43BF70", Offset = "0x43AB70", VA = "0x18043BF70")]
	public static void MelonPotEffect(Plant melon, int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public PotEffects()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PreludeMusic
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200035A")]
public class PreludeMusic : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[CompilerGenerated]
	private sealed class <PreludeOver>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B91")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B92")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B93")]
		[FieldOffset(Offset = "0x20")]
		public PreludeMusic <>4__this;

		[Token(Token = "0x4000B94")]
		[FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4000B95")]
		[FieldOffset(Offset = "0x2C")]
		private float <duringTime>5__3;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <PreludeOver>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x3F2FC0", Offset = "0x3F1BC0", VA = "0x1803F2FC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x3F3150", Offset = "0x3F1D50", VA = "0x1803F3150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B90")]
	[FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x3ECA00", Offset = "0x3EB600", VA = "0x1803ECA00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x3ECA50", Offset = "0x3EB650", VA = "0x1803ECA50")]
	public void OnActive(MusicType musicType)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x3ECBF0", Offset = "0x3EB7F0", VA = "0x1803ECBF0")]
	[IteratorStateMachine(typeof(<PreludeOver>d__3))]
	private IEnumerator PreludeOver()
	{
		return null;
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PreludeMusic()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Present
using Il2CppDummyDll;

[Token(Token = "0x20001B7")]
public class Present : Plant
{
	[Token(Token = "0x40006AC")]
	[FieldOffset(Offset = "0x1B8")]
	public bool buff;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x4CDE50", Offset = "0x4CCA50", VA = "0x1804CDE50", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x4CD380", Offset = "0x4CBF80", VA = "0x1804CD380")]
	public void AnimEvent()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x4CD6F0", Offset = "0x4CC2F0", VA = "0x1804CD6F0")]
	protected void RandomPlant()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x4CD440", Offset = "0x4CC040", VA = "0x1804CD440")]
	private void HappyRandomPlant()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x4CDD30", Offset = "0x4CC930", VA = "0x1804CDD30")]
	private bool SetLevelPlant(int theColumn, int theRow, PlantType theSeedType, int level)
	{
		return default(bool);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x4CDEC0", Offset = "0x4CCAC0", VA = "0x1804CDEC0")]
	protected void SuperRandomPlant()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x4CE3F0", Offset = "0x4CCFF0", VA = "0x1804CE3F0")]
	protected bool TowerLim(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Present()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PresentCard
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000EE")]
public class PresentCard : MonoBehaviour
{
	[Token(Token = "0x6000409")]
	[Address(RVA = "0x477B80", Offset = "0x476780", VA = "0x180477B80")]
	private void Start()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PresentCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PresentZombie
using Il2CppDummyDll;

[Token(Token = "0x20001B9")]
public class PresentZombie : Plant
{
	[Token(Token = "0x6000861")]
	[Address(RVA = "0x4CD320", Offset = "0x4CBF20", VA = "0x1804CD320", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x4CD120", Offset = "0x4CBD20", VA = "0x1804CD120")]
	public void AnimEvent()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public PresentZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Preview
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000270")]
public class Preview : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[FieldOffset(Offset = "0x20")]
	public Transform axis;

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Preview()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Prismflower
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001BA")]
public class Prismflower : Attacker
{
	[Token(Token = "0x40006AF")]
	[FieldOffset(Offset = "0x1B8")]
	public GameObject prism;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x4B5BA0", Offset = "0x4B47A0", VA = "0x1804B5BA0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x4CF6D0", Offset = "0x4CE2D0", VA = "0x1804CF6D0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x4D0000", Offset = "0x4CEC00", VA = "0x1804D0000", Slot = "21")]
	public override void SetBrightness(float b)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x4CF360", Offset = "0x4CDF60", VA = "0x1804CF360")]
	private void AttackOtherZombie(Zombie basicZombie, Vector2 center, int damage)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x4CF710", Offset = "0x4CE310", VA = "0x1804CF710")]
	private GameObject CreateLine(Vector2 startPosition, Vector2 endPosition, float width = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x4CE500", Offset = "0x4CD100", VA = "0x1804CE500")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x4CFB90", Offset = "0x4CE790", VA = "0x1804CFB90")]
	private void SearchZombieUpdate()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x4CF960", Offset = "0x4CE560", VA = "0x1804CF960")]
	private List<Plant> GetOtherPrismflowers()
	{
		return null;
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public Prismflower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PrismLight
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200012F")]
public class PrismLight : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[FieldOffset(Offset = "0x20")]
	private LineRenderer r;

	[Token(Token = "0x4000517")]
	[FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000518")]
	[FieldOffset(Offset = "0x2C")]
	private Color startColor;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x4A8280", Offset = "0x4A6E80", VA = "0x1804A8280")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x4A82F0", Offset = "0x4A6EF0", VA = "0x1804A82F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PrismLight()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PrizeMgr
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000271")]
public class PrizeMgr : MonoBehaviour
{
	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <LightOutT>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000755")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000756")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000757")]
		[FieldOffset(Offset = "0x20")]
		public PrizeMgr <>4__this;

		[Token(Token = "0x4000758")]
		[FieldOffset(Offset = "0x28")]
		private Vector3 <initialScale>5__2;

		[Token(Token = "0x4000759")]
		[FieldOffset(Offset = "0x34")]
		private Vector3 <targetScale>5__3;

		[Token(Token = "0x400075A")]
		[FieldOffset(Offset = "0x40")]
		private float <speed>5__4;

		[Token(Token = "0x400075B")]
		[FieldOffset(Offset = "0x44")]
		private Color <col>5__5;

		[Token(Token = "0x400075C")]
		[FieldOffset(Offset = "0x54")]
		private float <t>5__6;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <LightOutT>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x357760", Offset = "0x356360", VA = "0x180357760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x3579F0", Offset = "0x3565F0", VA = "0x1803579F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[CompilerGenerated]
	private sealed class <MoveAndScaleObject>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075D")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400075E")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400075F")]
		[FieldOffset(Offset = "0x20")]
		public PrizeMgr <>4__this;

		[Token(Token = "0x4000760")]
		[FieldOffset(Offset = "0x28")]
		private Vector3 <initialPosition>5__2;

		[Token(Token = "0x4000761")]
		[FieldOffset(Offset = "0x34")]
		private Vector3 <initialScale>5__3;

		[Token(Token = "0x4000762")]
		[FieldOffset(Offset = "0x40")]
		private Vector3 <targetPosition>5__4;

		[Token(Token = "0x4000763")]
		[FieldOffset(Offset = "0x4C")]
		private Vector3 <targetScale>5__5;

		[Token(Token = "0x4000764")]
		[FieldOffset(Offset = "0x58")]
		private float <moveSpeed>5__6;

		[Token(Token = "0x4000765")]
		[FieldOffset(Offset = "0x5C")]
		private float <t>5__7;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveAndScaleObject>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x357A30", Offset = "0x356630", VA = "0x180357A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x357DF0", Offset = "0x3569F0", VA = "0x180357DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074C")]
	[FieldOffset(Offset = "0x20")]
	protected readonly float horizontalSpeed;

	[Token(Token = "0x400074D")]
	[FieldOffset(Offset = "0x24")]
	protected readonly float verticalSpeed;

	[Token(Token = "0x400074E")]
	[FieldOffset(Offset = "0x28")]
	protected readonly float gravity;

	[Token(Token = "0x400074F")]
	[FieldOffset(Offset = "0x2C")]
	protected Vector2 velocity;

	[Token(Token = "0x4000750")]
	[FieldOffset(Offset = "0x34")]
	protected Vector2 startPosition;

	[Token(Token = "0x4000751")]
	[FieldOffset(Offset = "0x3C")]
	protected bool isLand;

	[Token(Token = "0x4000752")]
	[FieldOffset(Offset = "0x3D")]
	protected bool isClicked;

	[Token(Token = "0x4000753")]
	[FieldOffset(Offset = "0x3E")]
	protected bool selectAdv;

	[Token(Token = "0x4000754")]
	[FieldOffset(Offset = "0x3F")]
	public bool fake;

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x34B060", Offset = "0x349C60", VA = "0x18034B060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x34B560", Offset = "0x34A160", VA = "0x18034B560", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x34A800", Offset = "0x349400", VA = "0x18034A800")]
	private void PostionUpdate()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x349AC0", Offset = "0x3486C0", VA = "0x180349AC0", Slot = "5")]
	protected virtual void Click()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x349780", Offset = "0x348380", VA = "0x180349780")]
	private void AdvantureSettings()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x34B0D0", Offset = "0x349CD0", VA = "0x18034B0D0")]
	private void TravelAchievement()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x34A430", Offset = "0x349030", VA = "0x18034A430", Slot = "6")]
	public virtual void GoBack()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x34A790", Offset = "0x349390", VA = "0x18034A790")]
	[IteratorStateMachine(typeof(<MoveAndScaleObject>d__16))]
	protected IEnumerator MoveAndScaleObject()
	{
		return null;
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x34AA20", Offset = "0x349620", VA = "0x18034AA20")]
	private void RestartBoss2()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x34A720", Offset = "0x349320", VA = "0x18034A720")]
	[IteratorStateMachine(typeof(<LightOutT>d__18))]
	protected IEnumerator LightOutT()
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x34A1E0", Offset = "0x348DE0", VA = "0x18034A1E0")]
	private void CompleteAbyssLevel()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x34B5B0", Offset = "0x34A1B0", VA = "0x18034B5B0")]
	public PrizeMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Producer
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x20001E9")]
public class Producer : Plant
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <SunBright>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F4")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F5")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F6")]
		[FieldOffset(Offset = "0x20")]
		public Producer <>4__this;

		[Token(Token = "0x40006F7")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x4E1040", Offset = "0x4DFC40", VA = "0x1804E1040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x4E11B0", Offset = "0x4DFDB0", VA = "0x1804E11B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x4D7FA0", Offset = "0x4D6BA0", VA = "0x1804D7FA0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x4D7E20", Offset = "0x4D6A20", VA = "0x1804D7E20", Slot = "20")]
	public override void ProducerUpdate()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x4D7F30", Offset = "0x4D6B30", VA = "0x1804D7F30")]
	[IteratorStateMachine(typeof(<SunBright>d__2))]
	protected IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x4D7D40", Offset = "0x4D6940", VA = "0x1804D7D40", Slot = "39")]
	protected virtual void ProduceSun()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x4D7CB0", Offset = "0x4D68B0", VA = "0x1804D7CB0", Slot = "40")]
	protected virtual void ProduceSunWithNoSound()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Producer()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ProgressMgr
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200001B")]
public class ProgressMgr : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[FieldOffset(Offset = "0x0")]
	public static Slider slider;

	[Token(Token = "0x4000098")]
	[FieldOffset(Offset = "0x8")]
	public static Board board;

	[Token(Token = "0x4000099")]
	[FieldOffset(Offset = "0x20")]
	private Zombie zombie;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x31C540", Offset = "0x31B140", VA = "0x18031C540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x31C790", Offset = "0x31B390", VA = "0x18031C790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x31C600", Offset = "0x31B200", VA = "0x18031C600")]
	private Zombie GetBoss()
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ProgressMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ProtalPea
using Il2CppDummyDll;

[Token(Token = "0x200023D")]
public class ProtalPea : Shooter
{
	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x33DF50", Offset = "0x33CB50", VA = "0x18033DF50", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ProtalPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ProtalZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200029C")]
public class ProtalZombie : DoorZombie
{
	[Token(Token = "0x40007CB")]
	[FieldOffset(Offset = "0x238")]
	private int shootCount;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x363040", Offset = "0x361C40", VA = "0x180363040", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x363090", Offset = "0x361C90", VA = "0x180363090", Slot = "43")]
	public override GameObject DropArmor()
	{
		return null;
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x35C0E0", Offset = "0x35ACE0", VA = "0x18035C0E0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x362D60", Offset = "0x361960", VA = "0x180362D60", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x362BD0", Offset = "0x3617D0", VA = "0x180362BD0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ProtalZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Pumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001BB")]
public class Pumpkin : WallNut
{
	[Token(Token = "0x600086E")]
	[Address(RVA = "0x4D01C0", Offset = "0x4CEDC0", VA = "0x1804D01C0", Slot = "39")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public Pumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PVPPotBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000384")]
public class PVPPotBtn : NormalBtn
{
	[Token(Token = "0x4000C41")]
	[FieldOffset(Offset = "0x58")]
	public int id;

	[Token(Token = "0x4000C42")]
	[FieldOffset(Offset = "0x60")]
	public GameObject text1;

	[Token(Token = "0x4000C43")]
	[FieldOffset(Offset = "0x68")]
	public GameObject text2;

	[Token(Token = "0x4000C44")]
	[FieldOffset(Offset = "0x70")]
	private Collider2D col;

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x3EBF40", Offset = "0x3EAB40", VA = "0x1803EBF40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x3EC710", Offset = "0x3EB310", VA = "0x1803EC710")]
	private void Update()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x3EBF90", Offset = "0x3EAB90", VA = "0x1803EBF90", Slot = "4")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PVPPotBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// PVPScareyPot
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000275")]
public class PVPScareyPot : MonoBehaviour
{
	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x349710", Offset = "0x348310", VA = "0x180349710")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public PVPScareyPot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// QingZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E2")]
public class QingZombie : Zombie
{
	[Token(Token = "0x4000851")]
	[FieldOffset(Offset = "0x220")]
	public bool quickmove;

	[Token(Token = "0x4000852")]
	[FieldOffset(Offset = "0x228")]
	private ParticleSystem particle;

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x389C30", Offset = "0x388830", VA = "0x180389C30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x38A5D0", Offset = "0x3891D0", VA = "0x18038A5D0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x389B90", Offset = "0x388790", VA = "0x180389B90", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x389EE0", Offset = "0x388AE0", VA = "0x180389EE0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x389D10", Offset = "0x388910", VA = "0x180389D10", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x389FB0", Offset = "0x388BB0", VA = "0x180389FB0", Slot = "27")]
	public override void PlayEatSound()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x389F60", Offset = "0x388B60", VA = "0x180389F60", Slot = "22")]
	protected override void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x389F40", Offset = "0x388B40", VA = "0x180389F40")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x38A2D0", Offset = "0x388ED0", VA = "0x18038A2D0")]
	private void QuickDamage(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x38A530", Offset = "0x389130", VA = "0x18038A530")]
	private void StartQuickMove()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x38A4F0", Offset = "0x3890F0", VA = "0x18038A4F0")]
	private void QuickMoveOver()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x389DB0", Offset = "0x3889B0", VA = "0x180389DB0", Slot = "26")]
	public override void DestoryZombie()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x389950", Offset = "0x388550", VA = "0x180389950")]
	private void AttackPlants()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public QingZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// QuickJacksonZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E3")]
public class QuickJacksonZombie : ZombieJackson
{
	[Token(Token = "0x4000853")]
	[FieldOffset(Offset = "0x238")]
	private ParticleSystem particle;

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x38A610", Offset = "0x389210", VA = "0x18038A610", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x38A7E0", Offset = "0x3893E0", VA = "0x18038A7E0", Slot = "55")]
	protected override ZombieType GetZombieType()
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x38A940", Offset = "0x389540", VA = "0x18038A940", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x38A980", Offset = "0x389580", VA = "0x18038A980", Slot = "56")]
	protected override void StopMoonWalk()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x38A6B0", Offset = "0x3892B0", VA = "0x18038A6B0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x38A820", Offset = "0x389420", VA = "0x18038A820", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x38A750", Offset = "0x389350", VA = "0x18038A750", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x38A7B0", Offset = "0x3893B0", VA = "0x18038A7B0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x38AA20", Offset = "0x389620", VA = "0x18038AA20")]
	public QuickJacksonZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RainControl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000003")]
public class RainControl : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[FieldOffset(Offset = "0x20")]
	public ParticleSystem particle;

	[Token(Token = "0x4000002")]
	[FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x31C9A0", Offset = "0x31B5A0", VA = "0x18031C9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public RainControl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RandomPlusZombie
using Il2CppDummyDll;

[Token(Token = "0x200029D")]
public class RandomPlusZombie : RandomZombie
{
	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x363210", Offset = "0x361E10", VA = "0x180363210", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x3633A0", Offset = "0x361FA0", VA = "0x1803633A0", Slot = "56")]
	protected override void RandomEvent(Zombie zombie)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public RandomPlusZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RandomVectorGenerator
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003CD")]
public class RandomVectorGenerator : MonoBehaviour
{
	[Token(Token = "0x6001372")]
	[Address(RVA = "0x43C170", Offset = "0x43AD70", VA = "0x18043C170")]
	public static Vector2[] GenerateRandomVectors(int numberOfVectorsToGenerate, float minX, float maxX, float minY, float maxY, float minDistance = 1.2f)
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public RandomVectorGenerator()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RandomZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200029E")]
public class RandomZombie : ConeZombie
{
	[Token(Token = "0x40007CC")]
	[FieldOffset(Offset = "0x220")]
	private bool summoned;

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x3635C0", Offset = "0x3621C0", VA = "0x1803635C0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x363F90", Offset = "0x362B90", VA = "0x180363F90")]
	private bool UnlockTravelBuff()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x363B50", Offset = "0x362750", VA = "0x180363B50", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x3637E0", Offset = "0x3623E0", VA = "0x1803637E0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x363D10", Offset = "0x362910", VA = "0x180363D10", Slot = "55")]
	protected virtual GameObject SetRandomZombie(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x3638A0", Offset = "0x3624A0", VA = "0x1803638A0")]
	private GameObject GetEveZombie(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x363B70", Offset = "0x362770", VA = "0x180363B70", Slot = "56")]
	protected virtual void RandomEvent(Zombie zombie)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x363430", Offset = "0x362030", VA = "0x180363430", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "13")]
	protected override bool Instead(int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public RandomZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RectTransformMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000385")]
public class RectTransformMgr : MonoBehaviour
{
	[Token(Token = "0x6001246")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public RectTransformMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RedEmeraldUmbrella
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001BC")]
public class RedEmeraldUmbrella : EmeraldUmbrella
{
	[Token(Token = "0x6000870")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "43")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x4D0370", Offset = "0x4CEF70", VA = "0x1804D0370", Slot = "39")]
	public override void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x4D0660", Offset = "0x4CF260", VA = "0x1804D0660", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x4D0680", Offset = "0x4CF280", VA = "0x1804D0680")]
	public RedEmeraldUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ResourcesManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200039D")]
public class ResourcesManager
{
	[Token(Token = "0x4000CAB")]
	[FieldOffset(Offset = "0x10")]
	public readonly Dictionary<PlantType, GameObject> plantPrefabs;

	[Token(Token = "0x4000CAC")]
	[FieldOffset(Offset = "0x18")]
	public Dictionary<PlantType, List<GameObject>> _plantPrefabs;

	[Token(Token = "0x4000CAD")]
	[FieldOffset(Offset = "0x20")]
	public readonly Dictionary<PlantType, GameObject> plantPreviews;

	[Token(Token = "0x4000CAE")]
	[FieldOffset(Offset = "0x28")]
	public Dictionary<PlantType, List<GameObject>> _plantPreviews;

	[Token(Token = "0x4000CAF")]
	[FieldOffset(Offset = "0x30")]
	public Dictionary<PlantType, int> plantSkinDic;

	[Token(Token = "0x4000CB0")]
	[FieldOffset(Offset = "0x38")]
	public readonly List<PlantType> allPlants;

	[Token(Token = "0x4000CB1")]
	[FieldOffset(Offset = "0x40")]
	public readonly Dictionary<BulletType, GameObject> bulletPrefabs;

	[Token(Token = "0x4000CB2")]
	[FieldOffset(Offset = "0x48")]
	public readonly List<BulletType> allBullets;

	[Token(Token = "0x4000CB3")]
	[FieldOffset(Offset = "0x50")]
	public readonly List<GameObject> gravePrefabs;

	[Token(Token = "0x4000CB4")]
	[FieldOffset(Offset = "0x58")]
	public readonly Dictionary<ParticleType, GameObject> particlePrefabs;

	[Token(Token = "0x4000CB5")]
	[FieldOffset(Offset = "0x60")]
	public readonly List<ParticleType> allParticles;

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x4179E0", Offset = "0x4165E0", VA = "0x1804179E0")]
	public ResourcesManager()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x417880", Offset = "0x416480", VA = "0x180417880")]
	public void SkinListToDic(List<PlantSkinData> list)
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x4176A0", Offset = "0x4162A0", VA = "0x1804176A0")]
	public List<PlantSkinData> SkinDicToList()
	{
		return null;
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x4174E0", Offset = "0x4160E0", VA = "0x1804174E0")]
	public void SetSkin(PlantType thePlantType, int index)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x413E80", Offset = "0x412A80", VA = "0x180413E80")]
	private void LoadNormalSkin()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x417410", Offset = "0x416010", VA = "0x180417410")]
	private void LoadSkin()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x416D50", Offset = "0x415950", VA = "0x180416D50")]
	private void LoadPlant()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x417070", Offset = "0x415C70", VA = "0x180417070")]
	private void LoadPlant(PlantType thePlantType, string path)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x4138F0", Offset = "0x4124F0", VA = "0x1804138F0")]
	private void LoadBullet()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x413D10", Offset = "0x412910", VA = "0x180413D10")]
	private void LoadGraves()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x416930", Offset = "0x415530", VA = "0x180416930")]
	private void LoadParticles()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RoofEntity
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200034C")]
public class RoofEntity : MonoBehaviour
{
	[Token(Token = "0x4000B08")]
	[FieldOffset(Offset = "0x20")]
	public int entityRow;

	[Token(Token = "0x4000B09")]
	[FieldOffset(Offset = "0x24")]
	public EntityType entityType;

	[Token(Token = "0x4000B0A")]
	[FieldOffset(Offset = "0x28")]
	private Plant plant;

	[Token(Token = "0x4000B0B")]
	[FieldOffset(Offset = "0x30")]
	private Zombie zombie;

	[Token(Token = "0x4000B0C")]
	[FieldOffset(Offset = "0x38")]
	private Mower mower;

	[Token(Token = "0x4000B0D")]
	[FieldOffset(Offset = "0x40")]
	private GridItem gridItem;

	[Token(Token = "0x4000B0E")]
	[FieldOffset(Offset = "0x48")]
	private GameObject land;

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x3DC4E0", Offset = "0x3DB0E0", VA = "0x1803DC4E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x3DC7B0", Offset = "0x3DB3B0", VA = "0x1803DC7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public RoofEntity()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// RoofMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200034D")]
public class RoofMgr : MonoBehaviour
{
	[Token(Token = "0x6001135")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public RoofMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SaveBoardData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000364")]
public class SaveBoardData
{
	[Token(Token = "0x4000BD7")]
	[FieldOffset(Offset = "0x10")]
	public bool isBoardSaved;

	[Token(Token = "0x4000BD8")]
	[FieldOffset(Offset = "0x14")]
	public int theBoardSun;

	[Token(Token = "0x4000BD9")]
	[FieldOffset(Offset = "0x18")]
	public int theBoardUsedSun;

	[Token(Token = "0x4000BDA")]
	[FieldOffset(Offset = "0x1C")]
	public int theBoardMoney;

	[Token(Token = "0x4000BDB")]
	[FieldOffset(Offset = "0x20")]
	public float theBoardPoints;

	[Token(Token = "0x4000BDC")]
	[FieldOffset(Offset = "0x24")]
	public int theCurrentSurvivalRound;

	[Token(Token = "0x4000BDD")]
	[FieldOffset(Offset = "0x28")]
	public int theEndlessSurvivalMaxRound;

	[Token(Token = "0x4000BDE")]
	[FieldOffset(Offset = "0x30")]
	public long startTime;

	[Token(Token = "0x4000BDF")]
	[FieldOffset(Offset = "0x38")]
	public List<PlantStatistics> plantStatistics;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public SaveBoardData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SavedCustomPlantData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x200031E")]
public class SavedCustomPlantData
{
	[Token(Token = "0x40009CD")]
	[FieldOffset(Offset = "0x10")]
	public List<CustomPlant> customPlants;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public SavedCustomPlantData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SaveInfo
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200035C")]
public class SaveInfo : MonoBehaviour
{
	[Token(Token = "0x4000B96")]
	[FieldOffset(Offset = "0x20")]
	private string filePath;

	[Token(Token = "0x4000B97")]
	[FieldOffset(Offset = "0x0")]
	public static SaveInfo Instance;

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x3ECC60", Offset = "0x3EB860", VA = "0x1803ECC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x3ED080", Offset = "0x3EBC80", VA = "0x1803ED080")]
	private void LoadPlayerData()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x3EDA10", Offset = "0x3EC610", VA = "0x1803EDA10")]
	public void SavePlayerData()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x3EE110", Offset = "0x3ECD10", VA = "0x1803EE110")]
	public void SaveSurvivalData(SurvivalData data, int level, int id)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x3EE240", Offset = "0x3ECE40", VA = "0x1803EE240")]
	public void SaveSurvivalData(int level, bool clear = false, int id = -1)
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x3ECD90", Offset = "0x3EB990", VA = "0x1803ECD90")]
	public int GetMaxRound(int level, int id = -1)
	{
		return default(int);
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x3ECE70", Offset = "0x3EBA70", VA = "0x1803ECE70")]
	private string GetPath(int level, int id)
	{
		return null;
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x3ECFE0", Offset = "0x3EBBE0", VA = "0x1803ECFE0")]
	public SurvivalData GetSurvivalData(int level, int id = -1)
	{
		return null;
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SaveInfo()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SaveMenu
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000386")]
public class SaveMenu : BaseMenu
{
	[Token(Token = "0x4000C45")]
	[FieldOffset(Offset = "0x0")]
	public static SaveMenu Instance;

	[Token(Token = "0x4000C46")]
	[FieldOffset(Offset = "0x30")]
	public List<SaveMenuBtn> levels;

	[Token(Token = "0x4000C47")]
	[FieldOffset(Offset = "0x38")]
	public bool inGame;

	[Token(Token = "0x4000C48")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000C49")]
	[FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI title_shadow;

	[Token(Token = "0x4000C4A")]
	[FieldOffset(Offset = "0x50")]
	public List<GameObject> close;

	[Token(Token = "0x4000C4B")]
	[FieldOffset(Offset = "0x58")]
	public SurvivalLevel theLevel;

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x3EEBC0", Offset = "0x3ED7C0", VA = "0x1803EEBC0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x3EEFF0", Offset = "0x3EDBF0", VA = "0x1803EEFF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x3EEC20", Offset = "0x3ED820", VA = "0x1803EEC20")]
	private void InitLevels()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x3EEF10", Offset = "0x3EDB10", VA = "0x1803EEF10")]
	public static void InitSaveMenu(SurvivalLevel level)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x3EF190", Offset = "0x3EDD90", VA = "0x1803EF190")]
	public SaveMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SaveMenuBtn
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000387")]
public class SaveMenuBtn : UIBtn
{
	[Token(Token = "0x4000C4C")]
	[FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI theName;

	[Token(Token = "0x4000C4D")]
	[FieldOffset(Offset = "0x68")]
	public int id;

	[Token(Token = "0x4000C4E")]
	[FieldOffset(Offset = "0x6C")]
	public int buttonNumber;

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x3EE6A0", Offset = "0x3ED2A0", VA = "0x1803EE6A0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x3EEBB0", Offset = "0x3ED7B0", VA = "0x1803EEBB0")]
	public SaveMenuBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SaveMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000365")]
public class SaveMgr : MonoBehaviour
{
	[Token(Token = "0x4000BE0")]
	[FieldOffset(Offset = "0x0")]
	public static List<SavePlantData> savePlantData;

	[Token(Token = "0x4000BE1")]
	[FieldOffset(Offset = "0x8")]
	public static SaveBoardData boardData;

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x3F05D0", Offset = "0x3EF1D0", VA = "0x1803F05D0")]
	public static void SaveBoard(int level, int id = -1)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x3EF390", Offset = "0x3EDF90", VA = "0x1803EF390")]
	public static void LoadBoard(int level, int id = -1)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x3EF250", Offset = "0x3EDE50", VA = "0x1803EF250")]
	public static void ClearBoard(int level)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x3F00B0", Offset = "0x3EECB0", VA = "0x1803F00B0")]
	private static void LoadTravelData(SurvivalData survivalData)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x3F07B0", Offset = "0x3EF3B0", VA = "0x1803F07B0")]
	private static void SavePlants()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x3EF7D0", Offset = "0x3EE3D0", VA = "0x1803EF7D0")]
	private static void LoadPlant(SurvivalData survivalData)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x3EF530", Offset = "0x3EE130", VA = "0x1803EF530")]
	public static void LoadLily(SurvivalData survivalData)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x3EFE20", Offset = "0x3EEA20", VA = "0x1803EFE20")]
	public static void LoadPot(SurvivalData survivalData)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SaveMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SavePlantData
using System;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000363")]
public class SavePlantData
{
	[Token(Token = "0x4000BCF")]
	[FieldOffset(Offset = "0x10")]
	public int thePlantColumn;

	[Token(Token = "0x4000BD0")]
	[FieldOffset(Offset = "0x14")]
	public int thePlantRow;

	[Token(Token = "0x4000BD1")]
	[FieldOffset(Offset = "0x18")]
	public PlantType thePlantType;

	[Token(Token = "0x4000BD2")]
	[FieldOffset(Offset = "0x1C")]
	public int thePlantHealth;

	[Token(Token = "0x4000BD3")]
	[FieldOffset(Offset = "0x20")]
	public PlantType theLilyType;

	[Token(Token = "0x4000BD4")]
	[FieldOffset(Offset = "0x24")]
	public int thePlantStage;

	[Token(Token = "0x4000BD5")]
	[FieldOffset(Offset = "0x28")]
	public int theAttributeCount;

	[Token(Token = "0x4000BD6")]
	[FieldOffset(Offset = "0x2C")]
	public int theLevel;

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public SavePlantData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaredFume
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200023E")]
public class ScaredFume : Shooter
{
	[Token(Token = "0x4000731")]
	[FieldOffset(Offset = "0x1C0")]
	private int shootType;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x33EC30", Offset = "0x33D830", VA = "0x18033EC30", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x33E300", Offset = "0x33CF00", VA = "0x18033E300")]
	public void AttackZombie()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x33E060", Offset = "0x33CC60", VA = "0x18033E060")]
	public void AnimShootFume()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x33E710", Offset = "0x33D310", VA = "0x18033E710", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x33E850", Offset = "0x33D450", VA = "0x18033E850", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ScaredFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaredyDoom
using Il2CppDummyDll;

[Token(Token = "0x200023F")]
public class ScaredyDoom : ScaredyShroom
{
	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x33EE40", Offset = "0x33DA40", VA = "0x18033EE40", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x33EDA0", Offset = "0x33D9A0", VA = "0x18033EDA0", Slot = "43")]
	protected override void ScaredEvent()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x33ED40", Offset = "0x33D940", VA = "0x18033ED40", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ScaredyDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaredyHypno
using Il2CppDummyDll;

[Token(Token = "0x2000240")]
public class ScaredyHypno : ScaredyShroom
{
	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x33F110", Offset = "0x33DD10", VA = "0x18033F110", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ScaredyHypno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaredyPotato
using Il2CppDummyDll;

[Token(Token = "0x2000241")]
public class ScaredyPotato : ScaredyShroom
{
	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x33F910", Offset = "0x33E510", VA = "0x18033F910", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x33F570", Offset = "0x33E170", VA = "0x18033F570", Slot = "42")]
	protected override void GetNearZombies()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x33F760", Offset = "0x33E360", VA = "0x18033F760", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x33F260", Offset = "0x33DE60", VA = "0x18033F260", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x33F330", Offset = "0x33DF30", VA = "0x18033F330", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ScaredyPotato()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaredyShroom
using Il2CppDummyDll;

[Token(Token = "0x2000242")]
public class ScaredyShroom : Shooter
{
	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x33F940", Offset = "0x33E540", VA = "0x18033F940", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x33FA20", Offset = "0x33E620", VA = "0x18033FA20", Slot = "42")]
	protected virtual void GetNearZombies()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "43")]
	protected virtual void ScaredEvent()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x33FC10", Offset = "0x33E810", VA = "0x18033FC10", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x33FD60", Offset = "0x33E960", VA = "0x18033FD60", Slot = "19")]
	protected override bool Shootable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ScaredyShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScaryPotManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003CE")]
public class ScaryPotManager : MonoBehaviour
{
	[Token(Token = "0x6001374")]
	[Address(RVA = "0x43E5E0", Offset = "0x43D1E0", VA = "0x18043E5E0")]
	public static void SetPots(LevelType theBoardType, ChallengeLevel theBoardLevel, Board board)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x43E200", Offset = "0x43CE00", VA = "0x18043E200")]
	private static void SetPVPPots()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x43D260", Offset = "0x43BE60", VA = "0x18043D260")]
	public static ZombieType GetRandomZombieType()
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x43E2F0", Offset = "0x43CEF0", VA = "0x18043E2F0")]
	private static void SetPots(Queue<PlantType> plantTypes, Queue<ZombieType> zombieTypes, int startColumn, int numberOfColumns, int numberOfRows, int greenCount = 0)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x43D160", Offset = "0x43BD60", VA = "0x18043D160")]
	private static Queue<PlantType> GetPlantTypes(ChallengeLevel level)
	{
		return null;
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x43E100", Offset = "0x43CD00", VA = "0x18043E100")]
	private static Queue<ZombieType> GetZombieTypes(ChallengeLevel level)
	{
		return null;
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x43C320", Offset = "0x43AF20", VA = "0x18043C320")]
	private static List<PlantType> GetPlantPool(ChallengeLevel level)
	{
		return null;
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x43D480", Offset = "0x43C080", VA = "0x18043D480")]
	private static List<ZombieType> GetZombiePool(ChallengeLevel level)
	{
		return null;
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ScaryPotManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SceneType
using Il2CppDummyDll;

[Token(Token = "0x20003A8")]
public enum SceneType
{
	[Token(Token = "0x4000E23")]
	Day,
	[Token(Token = "0x4000E24")]
	Night,
	[Token(Token = "0x4000E25")]
	Pool,
	[Token(Token = "0x4000E26")]
	NightPool,
	[Token(Token = "0x4000E27")]
	Roof,
	[Token(Token = "0x4000E28")]
	NightRoof,
	[Token(Token = "0x4000E29")]
	Day_6,
	[Token(Token = "0x4000E2A")]
	Night_6,
	[Token(Token = "0x4000E2B")]
	BigDay,
	[Token(Token = "0x4000E2C")]
	BigPool,
	[Token(Token = "0x4000E2D")]
	Travel_roof,
	[Token(Token = "0x4000E2E")]
	Test_green,
	[Token(Token = "0x4000E2F")]
	Travel_roof_dusk,
	[Token(Token = "0x4000E30")]
	Travel_roof_night,
	[Token(Token = "0x4000E31")]
	MidDay,
	[Token(Token = "0x4000E32")]
	BilliardBallDay,
	[Token(Token = "0x4000E33")]
	BilliardBallMidDay,
	[Token(Token = "0x4000E34")]
	PVPScaryPot,
	[Token(Token = "0x4000E35")]
	Snow
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScreenShake
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000279")]
public class ScreenShake : MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[FieldOffset(Offset = "0x0")]
	private static Vector3 originalPosition;

	[Token(Token = "0x4000774")]
	[FieldOffset(Offset = "0xC")]
	private static float shakeDuration;

	[Token(Token = "0x4000775")]
	[FieldOffset(Offset = "0x10")]
	private static readonly float shakeMagnitude;

	[Token(Token = "0x4000776")]
	[FieldOffset(Offset = "0x14")]
	private static readonly float dampingSpeed;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x34B5D0", Offset = "0x34A1D0", VA = "0x18034B5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x34B6C0", Offset = "0x34A2C0", VA = "0x18034B6C0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x34B660", Offset = "0x34A260", VA = "0x18034B660")]
	public static void TriggerShake(float duration = 0.15f)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ScreenShake()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ScreenShine
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000278")]
public class ScreenShine : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[FieldOffset(Offset = "0x0")]
	public static ScreenShine Instance;

	[Token(Token = "0x4000772")]
	[FieldOffset(Offset = "0x20")]
	private ParticleSystem particle;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x34BA40", Offset = "0x34A640", VA = "0x18034BA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x34BB50", Offset = "0x34A750", VA = "0x18034BB50")]
	public void StartEmit()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x34BAC0", Offset = "0x34A6C0", VA = "0x18034BAC0")]
	public void EndEmit()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ScreenShine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SeaBlover
using Il2CppDummyDll;

[Token(Token = "0x20001BD")]
public class SeaBlover : Blover
{
	[Token(Token = "0x6000874")]
	[Address(RVA = "0x4D0690", Offset = "0x4CF290", VA = "0x1804D0690", Slot = "40")]
	protected override void BlowZombie()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public SeaBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SeaCactus
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000243")]
public class SeaCactus : Shooter
{
	[Token(Token = "0x4000732")]
	[FieldOffset(Offset = "0x1C0")]
	private int growLevel;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x340740", Offset = "0x33F340", VA = "0x180340740", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x33FD90", Offset = "0x33E990", VA = "0x18033FD90", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x33FE30", Offset = "0x33EA30", VA = "0x18033FE30")]
	public void Grow()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x3404B0", Offset = "0x33F0B0", VA = "0x1803404B0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x3405B0", Offset = "0x33F1B0", VA = "0x1803405B0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x33FEC0", Offset = "0x33EAC0", VA = "0x18033FEC0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x340120", Offset = "0x33ED20", VA = "0x180340120", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x340050", Offset = "0x33EC50", VA = "0x180340050", Slot = "27")]
	protected override bool SearchUniqueZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SeaCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SeaLantern
using Il2CppDummyDll;

[Token(Token = "0x20001BE")]
public class SeaLantern : Plantern
{
	[Token(Token = "0x40006B0")]
	[FieldOffset(Offset = "0x1D0")]
	private bool isGrowen;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x4D0DE0", Offset = "0x4CF9E0", VA = "0x1804D0DE0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x4D0810", Offset = "0x4CF410", VA = "0x1804D0810", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x4D0A90", Offset = "0x4CF690", VA = "0x1804D0A90")]
	private void Grow()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x4D09D0", Offset = "0x4CF5D0", VA = "0x1804D09D0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x4D0CC0", Offset = "0x4CF8C0", VA = "0x1804D0CC0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x4D0C40", Offset = "0x4CF840", VA = "0x1804D0C40", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SeaLantern()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SeaMagnet
using Il2CppDummyDll;

[Token(Token = "0x20001BF")]
public class SeaMagnet : Magnetshroom
{
	[Token(Token = "0x40006B1")]
	[FieldOffset(Offset = "0x1D8")]
	private int attractTime;

	[Token(Token = "0x40006B2")]
	[FieldOffset(Offset = "0x1DC")]
	private bool isGrown;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x4D0FE0", Offset = "0x4CFBE0", VA = "0x1804D0FE0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x4D10B0", Offset = "0x4CFCB0", VA = "0x1804D10B0")]
	private void Grow()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x4C0050", Offset = "0x4BEC50", VA = "0x1804C0050")]
	public SeaMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SeaStarfruit
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000244")]
public class SeaStarfruit : StarFruit
{
	[Token(Token = "0x4000733")]
	[FieldOffset(Offset = "0x1C0")]
	private int growLevel;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x3409B0", Offset = "0x33F5B0", VA = "0x1803409B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x340760", Offset = "0x33F360", VA = "0x180340760", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x340800", Offset = "0x33F400", VA = "0x180340800")]
	public void Grow()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x340890", Offset = "0x33F490", VA = "0x180340890", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SeaStarfruit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SelectedZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000319")]
public class SelectedZombie : MonoBehaviour
{
	[Token(Token = "0x600105B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SelectedZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SelectYourPlants
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x200031A")]
public class SelectYourPlants : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI TextMeshProUGUI;

	[Token(Token = "0x40009C1")]
	[FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI TextMeshProUGUI2;

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x3BB050", Offset = "0x3B9C50", VA = "0x1803BB050")]
	private void Awake()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SelectYourPlants()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SetCustomZombie
using Il2CppDummyDll;

[Token(Token = "0x200031B")]
public class SetCustomZombie : UIBtn
{
	[Token(Token = "0x6001060")]
	[Address(RVA = "0x3BB2F0", Offset = "0x3B9EF0", VA = "0x1803BB2F0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public SetCustomZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SetCustomZombieBtn
using Il2CppDummyDll;

[Token(Token = "0x200031C")]
public class SetCustomZombieBtn : NormalBtn
{
	[Token(Token = "0x40009C2")]
	[FieldOffset(Offset = "0x58")]
	public bool isRemove;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x3BB100", Offset = "0x3B9D00", VA = "0x1803BB100", Slot = "4")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x3BB1C0", Offset = "0x3B9DC0", VA = "0x1803BB1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public SetCustomZombieBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SetName
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000028")]
public class SetName : MonoBehaviour
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SetName()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SettlementData
using Il2CppDummyDll;

[Token(Token = "0x2000274")]
public class SettlementData
{
	[Token(Token = "0x4000766")]
	[FieldOffset(Offset = "0x10")]
	public bool firstWin;

	[Token(Token = "0x4000767")]
	[FieldOffset(Offset = "0x14")]
	public int restMower;

	[Token(Token = "0x4000768")]
	[FieldOffset(Offset = "0x18")]
	public int duringTime;

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x34BBB0", Offset = "0x34A7B0", VA = "0x18034BBB0")]
	public SettlementData(bool firstWin, int restMower, int duringTime)
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Shooter
using Il2CppDummyDll;

[Token(Token = "0x20001F8")]
public class Shooter : Attacker
{
	[Token(Token = "0x4000705")]
	[FieldOffset(Offset = "0x1B8")]
	public float dreamTime;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x4D8060", Offset = "0x4D6C60", VA = "0x1804D8060", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x4D8040", Offset = "0x4D6C40", VA = "0x1804D8040")]
	public Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x4B1670", Offset = "0x4B0270", VA = "0x1804B1670")]
	protected void AnimShoot2()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "39")]
	protected virtual Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "40")]
	protected virtual Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "41")]
	protected virtual BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public Shooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ShovelMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200001C")]
public class ShovelMgr : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[FieldOffset(Offset = "0x20")]
	public bool isPickUp;

	[Token(Token = "0x400009B")]
	[FieldOffset(Offset = "0x28")]
	public GameObject defaultParent;

	[Token(Token = "0x400009C")]
	[FieldOffset(Offset = "0x30")]
	protected Mouse m;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x31CC70", Offset = "0x31B870", VA = "0x18031CC70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x31CB00", Offset = "0x31B700", VA = "0x18031CB00")]
	public void PickUp()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x31CBA0", Offset = "0x31B7A0", VA = "0x18031CBA0")]
	public void PutDown()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x31CA90", Offset = "0x31B690", VA = "0x18031CA90")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x3122A0", Offset = "0x310EA0", VA = "0x1803122A0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x31CCC0", Offset = "0x31B8C0", VA = "0x18031CCC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ShovelMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Shulkflower
using Il2CppDummyDll;

[Token(Token = "0x20001C0")]
public class Shulkflower : Shooter
{
	[Token(Token = "0x6000880")]
	[Address(RVA = "0x4D1350", Offset = "0x4CFF50", VA = "0x1804D1350", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x4D1370", Offset = "0x4CFF70", VA = "0x1804D1370", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x4D1320", Offset = "0x4CFF20", VA = "0x1804D1320", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x4D1150", Offset = "0x4CFD50", VA = "0x1804D1150")]
	private void AttackUpdate()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x4D1700", Offset = "0x4D0300", VA = "0x1804D1700")]
	private void SearchUpdate()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x4D1560", Offset = "0x4D0160", VA = "0x1804D1560")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public Shulkflower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Shulkflower_shootloop
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005A")]
public class Shulkflower_shootloop : StateMachineBehaviour
{
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x42F680", Offset = "0x42E280", VA = "0x18042F680", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x42F6E0", Offset = "0x42E2E0", VA = "0x18042F6E0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Shulkflower_shootloop()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SilverSunflower
using Il2CppDummyDll;

[Token(Token = "0x20001F2")]
public class SilverSunflower : Producer
{
	[Token(Token = "0x6000986")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SilverSunflower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SingleBuffManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200027A")]
public class SingleBuffManager : MonoBehaviour
{
	[Token(Token = "0x200027B")]
	public enum BuffType
	{
		[Token(Token = "0x400077A")]
		Damage,
		[Token(Token = "0x400077B")]
		IceShroom,
		[Token(Token = "0x400077C")]
		Jalapeno,
		[Token(Token = "0x400077D")]
		StealHealth,
		[Token(Token = "0x400077E")]
		ZombieSupport,
		[Token(Token = "0x400077F")]
		SunSupport,
		[Token(Token = "0x4000780")]
		WallNut,
		[Token(Token = "0x4000781")]
		BigStar
	}

	[Token(Token = "0x200027C")]
	public class SingleBuff
	{
		[Token(Token = "0x4000782")]
		[FieldOffset(Offset = "0x10")]
		public BuffType buffType;

		[Token(Token = "0x4000783")]
		[FieldOffset(Offset = "0x14")]
		public float timer;

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x34C540", Offset = "0x34B140", VA = "0x18034C540")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
		public SingleBuff()
		{
		}
	}

	[Token(Token = "0x4000777")]
	[FieldOffset(Offset = "0x0")]
	public static SingleBuffManager Instance;

	[Token(Token = "0x4000778")]
	[FieldOffset(Offset = "0x20")]
	public List<SingleBuff> singleBuffs;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x34C240", Offset = "0x34AE40", VA = "0x18034C240")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x34BC00", Offset = "0x34A800", VA = "0x18034BC00")]
	public void AddNewBuff(BuffType type, Board board, Vector2 postion, int row)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x34C2A0", Offset = "0x34AEA0", VA = "0x18034C2A0")]
	public static bool CheckBuff(BuffType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x34C3B0", Offset = "0x34AFB0", VA = "0x18034C3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x34C4C0", Offset = "0x34B0C0", VA = "0x18034C4C0")]
	public SingleBuffManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SkinButton
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000388")]
public class SkinButton : MonoBehaviour
{
	[Token(Token = "0x4000C4F")]
	[FieldOffset(Offset = "0x20")]
	public AlmanacPlantBank showPlant;

	[Token(Token = "0x4000C50")]
	[FieldOffset(Offset = "0x28")]
	private TextMeshPro textMesh;

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x3F0AF0", Offset = "0x3EF6F0", VA = "0x1803F0AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x3F0B40", Offset = "0x3EF740", VA = "0x1803F0B40")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x3F0B90", Offset = "0x3EF790", VA = "0x1803F0B90")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x3F0BE0", Offset = "0x3EF7E0", VA = "0x1803F0BE0")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SkinButton()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SkinLevel
using Il2CppDummyDll;

[Token(Token = "0x20003BB")]
public enum SkinLevel
{
	[Token(Token = "0x400103E")]
	UltimateGatling = 1,
	[Token(Token = "0x400103F")]
	UltimateTorch,
	[Token(Token = "0x4001040")]
	HypnoEmperor
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SkinType
using Il2CppDummyDll;

[Token(Token = "0x200039E")]
public enum SkinType
{
	[Token(Token = "0x4000CB7")]
	Default,
	[Token(Token = "0x4000CB8")]
	First
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SlowTrigger
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D0")]
public class SlowTrigger : MonoBehaviour
{
	[Token(Token = "0x4001086")]
	[FieldOffset(Offset = "0x0")]
	public static SlowTrigger Instance;

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x43E9D0", Offset = "0x43D5D0", VA = "0x18043E9D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SlowTrigger()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SmallIceShroom
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001C1")]
public class SmallIceShroom : Plant
{
	[Token(Token = "0x6000887")]
	[Address(RVA = "0x4D18F0", Offset = "0x4D04F0", VA = "0x1804D18F0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SmallIceShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SmallPuff
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000245")]
public class SmallPuff : Shooter
{
	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x3409D0", Offset = "0x33F5D0", VA = "0x1803409D0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x340C80", Offset = "0x33F880", VA = "0x180340C80", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SmallPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SniperPea
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x2000246")]
public class SniperPea : Shooter
{
	[Token(Token = "0x4000734")]
	[FieldOffset(Offset = "0x1C0")]
	private int attackCount;

	[Token(Token = "0x4000735")]
	[FieldOffset(Offset = "0x1C8")]
	protected GameObject ac;

	[Token(Token = "0x4000736")]
	[FieldOffset(Offset = "0x1D0")]
	protected SortingGroup r;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x3411D0", Offset = "0x33FDD0", VA = "0x1803411D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x341A50", Offset = "0x340650", VA = "0x180341A50", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x3412B0", Offset = "0x33FEB0", VA = "0x1803412B0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x341370", Offset = "0x33FF70", VA = "0x180341370", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x340D90", Offset = "0x33F990", VA = "0x180340D90")]
	private void AcPositionUpdate()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x341840", Offset = "0x340440", VA = "0x180341840", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x341020", Offset = "0x33FC20", VA = "0x180341020", Slot = "42")]
	protected virtual void AttackZombie(Zombie zombie, int damage)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x3414F0", Offset = "0x3400F0", VA = "0x1803414F0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x341450", Offset = "0x340050", VA = "0x180341450", Slot = "27")]
	protected override bool SearchUniqueZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SniperPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Snorkle_in
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005B")]
public class Snorkle_in : StateMachineBehaviour
{
	[Token(Token = "0x6000167")]
	[Address(RVA = "0x42F740", Offset = "0x42E340", VA = "0x18042F740", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Snorkle_in()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Snorkle_out
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005C")]
public class Snorkle_out : StateMachineBehaviour
{
	[Token(Token = "0x6000169")]
	[Address(RVA = "0x42F7A0", Offset = "0x42E3A0", VA = "0x18042F7A0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Snorkle_out()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnorkleZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E4")]
public class SnorkleZombie : Zombie
{
	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x38AA30", Offset = "0x389630", VA = "0x18038AA30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x38AB20", Offset = "0x389720", VA = "0x18038AB20", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x38AA50", Offset = "0x389650", VA = "0x18038AA50", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x38AAE0", Offset = "0x3896E0", VA = "0x18038AAE0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x38AB00", Offset = "0x389700", VA = "0x18038AB00", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SnorkleZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowDolphinrider
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E5")]
public class SnowDolphinrider : DolphinriderZ
{
	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x38ACF0", Offset = "0x3898F0", VA = "0x18038ACF0", Slot = "55")]
	public override void JumpOver()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "56")]
	protected override void JumpFail()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x38ABF0", Offset = "0x3897F0", VA = "0x18038ABF0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x3756F0", Offset = "0x3742F0", VA = "0x1803756F0")]
	public SnowDolphinrider()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowDrown
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E6")]
public class SnowDrown : DrownZombie
{
	[Token(Token = "0x4000854")]
	[FieldOffset(Offset = "0x228")]
	public GameObject weaponPrefab;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x38AE80", Offset = "0x389A80", VA = "0x18038AE80", Slot = "55")]
	protected override DrownWeapon GetDrownWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x38ADE0", Offset = "0x3899E0", VA = "0x18038ADE0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public SnowDrown()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowGatlingPuff
using Il2CppDummyDll;

[Token(Token = "0x2000247")]
public class SnowGatlingPuff : IcePuff
{
	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x341AD0", Offset = "0x3406D0", VA = "0x180341AD0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SnowGatlingPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowGunZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E7")]
public class SnowGunZombie : Zombie
{
	[Token(Token = "0x4000855")]
	[FieldOffset(Offset = "0x220")]
	private bool shooting;

	[Token(Token = "0x4000856")]
	[FieldOffset(Offset = "0x224")]
	private Vector3 targetPosition;

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x38B390", Offset = "0x389F90", VA = "0x18038B390", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x38B3B0", Offset = "0x389FB0", VA = "0x18038B3B0", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x38B740", Offset = "0x38A340", VA = "0x18038B740", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x38B320", Offset = "0x389F20", VA = "0x18038B320", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x38B0C0", Offset = "0x389CC0", VA = "0x18038B0C0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x38B450", Offset = "0x38A050", VA = "0x18038B450")]
	private void SearchPlantUpdate()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SnowGunZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowMap
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200011C")]
public class SnowMap : MonoBehaviour
{
	[Token(Token = "0x400048F")]
	[FieldOffset(Offset = "0x0")]
	public static SnowMap Instance;

	[Token(Token = "0x4000490")]
	[FieldOffset(Offset = "0x20")]
	public ParticleSystem particle;

	[Token(Token = "0x4000491")]
	[FieldOffset(Offset = "0x28")]
	private Board board;

	[Token(Token = "0x4000492")]
	[FieldOffset(Offset = "0x30")]
	private bool bigSnow;

	[Token(Token = "0x4000493")]
	[FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x4000494")]
	[FieldOffset(Offset = "0x38")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x48A120", Offset = "0x488D20", VA = "0x18048A120")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x48A1E0", Offset = "0x488DE0", VA = "0x18048A1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x48A250", Offset = "0x488E50", VA = "0x18048A250")]
	private void Update()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x48A180", Offset = "0x488D80", VA = "0x18048A180")]
	public void HugeWave()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SnowMap()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowPeaShooter
using Il2CppDummyDll;

[Token(Token = "0x2000248")]
public class SnowPeaShooter : PeaShooter
{
	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x341DB0", Offset = "0x3409B0", VA = "0x180341DB0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x341C40", Offset = "0x340840", VA = "0x180341C40", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SnowPeaShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowShieldZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002E8")]
public class SnowShieldZombie : Zombie
{
	[Token(Token = "0x4000857")]
	[FieldOffset(Offset = "0x220")]
	private LayerMask bulletLayer;

	[Token(Token = "0x4000858")]
	[FieldOffset(Offset = "0x224")]
	private bool bounding;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x38BBB0", Offset = "0x38A7B0", VA = "0x18038BBB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x38BC80", Offset = "0x38A880", VA = "0x18038BC80", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x38C7F0", Offset = "0x38B3F0", VA = "0x18038C7F0", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x38CAA0", Offset = "0x38B6A0", VA = "0x18038CAA0", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x38BEF0", Offset = "0x38AAF0", VA = "0x18038BEF0")]
	private void PlayEatSound2()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x38BD20", Offset = "0x38A920", VA = "0x18038BD20", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x38CEC0", Offset = "0x38BAC0", VA = "0x18038CEC0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x38C210", Offset = "0x38AE10", VA = "0x18038C210")]
	private void ReboundUpdate()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x38BD60", Offset = "0x38A960", VA = "0x18038BD60")]
	private Collider2D[] GetCollider2Ds(float range, float range2)
	{
		return null;
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x38BE20", Offset = "0x38AA20", VA = "0x18038BE20")]
	private Vector2 GetReboundCenter(float range)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x38B810", Offset = "0x38A410", VA = "0x18038B810")]
	private void AnimRebound()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SnowShieldZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowSplit
using Il2CppDummyDll;

[Token(Token = "0x2000249")]
public class SnowSplit : SplitPea
{
	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x342060", Offset = "0x340C60", VA = "0x180342060", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x3422B0", Offset = "0x340EB0", VA = "0x1803422B0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x341EF0", Offset = "0x340AF0", VA = "0x180341EF0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SnowSplit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SnowZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002B9")]
public class SnowZombie : Zombie
{
	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x37DD70", Offset = "0x37C970", VA = "0x18037DD70", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x381D90", Offset = "0x380990", VA = "0x180381D90", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x381E20", Offset = "0x380A20", VA = "0x180381E20", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SnowZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Solar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000130")]
public class Solar : MonoBehaviour
{
	[Token(Token = "0x4000519")]
	[FieldOffset(Offset = "0x0")]
	public static Solar Instance;

	[Token(Token = "0x400051A")]
	[FieldOffset(Offset = "0x20")]
	public int damage;

	[Token(Token = "0x400051B")]
	[FieldOffset(Offset = "0x24")]
	public float deathTime;

	[Token(Token = "0x400051C")]
	[FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x400051D")]
	[FieldOffset(Offset = "0x2C")]
	private float timer2;

	[Token(Token = "0x400051E")]
	[FieldOffset(Offset = "0x30")]
	private readonly Vector2 targetPosition;

	[Token(Token = "0x400051F")]
	[FieldOffset(Offset = "0x38")]
	private bool arrived;

	[Token(Token = "0x4000520")]
	[FieldOffset(Offset = "0x40")]
	private ParticleSystem particleSystem1;

	[Token(Token = "0x4000521")]
	[FieldOffset(Offset = "0x48")]
	private ParticleSystem particleSystem2;

	[Token(Token = "0x4000522")]
	[FieldOffset(Offset = "0x50")]
	private Board board;

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x4A83E0", Offset = "0x4A6FE0", VA = "0x1804A83E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x4A86F0", Offset = "0x4A72F0", VA = "0x1804A86F0")]
	public void SetDamage()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x4A8670", Offset = "0x4A7270", VA = "0x1804A8670")]
	private bool God()
	{
		return default(bool);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x4A8940", Offset = "0x4A7540", VA = "0x1804A8940")]
	private void Update()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x4A8FA0", Offset = "0x4A7BA0", VA = "0x1804A8FA0")]
	public Solar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SolarCabbage
using Il2CppDummyDll;
using UnityEngine.Rendering;

[Token(Token = "0x200024A")]
public class SolarCabbage : Thrower
{
	[Token(Token = "0x4000737")]
	[FieldOffset(Offset = "0x1D0")]
	private SortingGroup back;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x3423D0", Offset = "0x340FD0", VA = "0x1803423D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x342470", Offset = "0x341070", VA = "0x180342470", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x342BF0", Offset = "0x3417F0", VA = "0x180342BF0", Slot = "25")]
	public override bool SuperSkill()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x3424A0", Offset = "0x3410A0", VA = "0x1803424A0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x3424D0", Offset = "0x3410D0", VA = "0x1803424D0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x342500", Offset = "0x341100", VA = "0x180342500", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x342E00", Offset = "0x341A00", VA = "0x180342E00")]
	private void SuperStart()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x342BB0", Offset = "0x3417B0", VA = "0x180342BB0")]
	private void SuperEnd()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public SolarCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SolarPot
using Il2CppDummyDll;

[Token(Token = "0x20001C2")]
public class SolarPot : MoneyPot
{
	[Token(Token = "0x6000889")]
	[Address(RVA = "0x4D1CA0", Offset = "0x4D08A0", VA = "0x1804D1CA0", Slot = "40")]
	protected override void Produce()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x4D1B80", Offset = "0x4D0780", VA = "0x1804D1B80", Slot = "39")]
	protected override void MarigoldUpdate()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public SolarPot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SoundCtrl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000366")]
public class SoundCtrl : MonoBehaviour
{
	[Token(Token = "0x4000BE2")]
	[FieldOffset(Offset = "0x20")]
	public int theSoundID;

	[Token(Token = "0x4000BE3")]
	[FieldOffset(Offset = "0x24")]
	public float existTime;

	[Token(Token = "0x4000BE4")]
	[FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x3F0E90", Offset = "0x3EFA90", VA = "0x1803F0E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x3F0EE0", Offset = "0x3EFAE0", VA = "0x1803F0EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x3F0DD0", Offset = "0x3EF9D0", VA = "0x1803F0DD0")]
	private void Die()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SoundCtrl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SoundManager
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000345")]
public class SoundManager
{
	[Token(Token = "0x4000ADB")]
	[FieldOffset(Offset = "0x10")]
	public Dictionary<SoundType, AudioClip> sounds;

	[Token(Token = "0x4000ADC")]
	[FieldOffset(Offset = "0x18")]
	public Dictionary<MusicType, AudioClip> musics;

	[Token(Token = "0x4000ADD")]
	[FieldOffset(Offset = "0x20")]
	private readonly Dictionary<MusicType, MusicType> drumPairs;

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x3DCA00", Offset = "0x3DB600", VA = "0x1803DCA00")]
	public SoundManager()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x3DC8D0", Offset = "0x3DB4D0", VA = "0x1803DC8D0")]
	private void LoadSound()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x3DC870", Offset = "0x3DB470", VA = "0x1803DC870")]
	private void LoadMusic()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x3DC930", Offset = "0x3DB530", VA = "0x1803DC930")]
	public bool TryGetMusicDrum(MusicType theMusicType, out AudioClip drumMusicType)
	{
		return default(bool);
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SoundType
using Il2CppDummyDll;

[Token(Token = "0x2000346")]
public enum SoundType
{

}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SoundVolume
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000044")]
public class SoundVolume : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x42F800", Offset = "0x42E400", VA = "0x18042F800")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x42F8B0", Offset = "0x42E4B0", VA = "0x18042F8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SoundVolume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Spider_raising
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200005D")]
public class Spider_raising : StateMachineBehaviour
{
	[Token(Token = "0x600016B")]
	[Address(RVA = "0x42F940", Offset = "0x42E540", VA = "0x18042F940", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public Spider_raising()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SpiderWeapon
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002FD")]
public class SpiderWeapon : MonoBehaviour
{
	[Token(Token = "0x40008A6")]
	[FieldOffset(Offset = "0x20")]
	public int theRow;

	[Token(Token = "0x40008A7")]
	[FieldOffset(Offset = "0x24")]
	public bool isMindControl;

	[Token(Token = "0x40008A8")]
	[FieldOffset(Offset = "0x28")]
	public Board board;

	[Token(Token = "0x40008A9")]
	[FieldOffset(Offset = "0x30")]
	public Rigidbody2D rb;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x398020", Offset = "0x396C20", VA = "0x180398020")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x3980E0", Offset = "0x396CE0", VA = "0x1803980E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x398070", Offset = "0x396C70", VA = "0x180398070")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SpiderWeapon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SpikeRock
using System.Runtime.InteropServices;
using Il2CppDummyDll;

[Token(Token = "0x20001C3")]
public class SpikeRock : Caltrop
{
	[Token(Token = "0x600088C")]
	[Address(RVA = "0x4D1E10", Offset = "0x4D0A10", VA = "0x1804D1E10", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x4D2050", Offset = "0x4D0C50", VA = "0x1804D2050")]
	private void SpriteUpdate()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x4D1E30", Offset = "0x4D0A30", VA = "0x1804D1E30", Slot = "40")]
	protected override void KillCar()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x4D1DE0", Offset = "0x4D09E0", VA = "0x1804D1DE0", Slot = "16")]
	public override void Crashed(int type = 0, int soundID = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public SpikeRock()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SplitPea
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200024B")]
public class SplitPea : PeaShooter
{
	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x343020", Offset = "0x341C20", VA = "0x180343020", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x343260", Offset = "0x341E60", VA = "0x180343260", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x342E40", Offset = "0x341A40", VA = "0x180342E40", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SplitPea()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SplitPuff
using Il2CppDummyDll;

[Token(Token = "0x200024C")]
public class SplitPuff : SplitPea
{
	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x3433B0", Offset = "0x341FB0", VA = "0x1803433B0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x3434F0", Offset = "0x3420F0", VA = "0x1803434F0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SplitPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Squalour
using Il2CppDummyDll;

[Token(Token = "0x20001C4")]
public class Squalour : Squash
{
	[Token(Token = "0x40006B3")]
	[FieldOffset(Offset = "0x208")]
	private int squashCount;

	[Token(Token = "0x40006B4")]
	[FieldOffset(Offset = "0x20C")]
	private bool squashed;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	protected override void Sound()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x4D2270", Offset = "0x4D0E70", VA = "0x1804D2270", Slot = "41")]
	protected override void AttackZombie()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x4D2670", Offset = "0x4D1270", VA = "0x1804D2670")]
	private void LourDie()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x4BFA90", Offset = "0x4BE690", VA = "0x1804BFA90")]
	public Squalour()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Squash
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001C5")]
public class Squash : Plant
{
	[Token(Token = "0x20001C6")]
	[CompilerGenerated]
	private sealed class <MoveToZombie>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C0")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C1")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C2")]
		[FieldOffset(Offset = "0x20")]
		public Squash <>4__this;

		[Token(Token = "0x40006C3")]
		[FieldOffset(Offset = "0x28")]
		public Vector3 endPos;

		[Token(Token = "0x40006C4")]
		[FieldOffset(Offset = "0x34")]
		public float speed;

		[Token(Token = "0x40006C5")]
		[FieldOffset(Offset = "0x38")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x40006C6")]
		[FieldOffset(Offset = "0x44")]
		private float <moveTime>5__3;

		[Token(Token = "0x40006C7")]
		[FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveToZombie>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x4E0B60", Offset = "0x4DF760", VA = "0x1804E0B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x4E0E90", Offset = "0x4DFA90", VA = "0x1804E0E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B5")]
	[FieldOffset(Offset = "0x1B8")]
	private Collider2D[] cols;

	[Token(Token = "0x40006B6")]
	[FieldOffset(Offset = "0x1C0")]
	private Vector2 pos;

	[Token(Token = "0x40006B7")]
	[FieldOffset(Offset = "0x1C8")]
	private bool isJump;

	[Token(Token = "0x40006B8")]
	[FieldOffset(Offset = "0x1D0")]
	private BoxCollider2D[] boxCols;

	[Token(Token = "0x40006B9")]
	[FieldOffset(Offset = "0x1D8")]
	protected bool willJumpInWater;

	[Token(Token = "0x40006BA")]
	[FieldOffset(Offset = "0x1E0")]
	private readonly List<GameObject> squashZombieList;

	[Token(Token = "0x40006BB")]
	[FieldOffset(Offset = "0x1E8")]
	protected Vector2 range;

	[Token(Token = "0x40006BC")]
	[FieldOffset(Offset = "0x1F0")]
	private float startTime;

	[Token(Token = "0x40006BD")]
	[FieldOffset(Offset = "0x1F4")]
	private float endTime;

	[Token(Token = "0x40006BE")]
	[FieldOffset(Offset = "0x1F8")]
	private Vector2 startJumpPos;

	[Token(Token = "0x40006BF")]
	[FieldOffset(Offset = "0x200")]
	private Vector2 endPos;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x4DA2B0", Offset = "0x4D8EB0", VA = "0x1804DA2B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x4DA310", Offset = "0x4D8F10", VA = "0x1804DA310", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x4D98A0", Offset = "0x4D84A0", VA = "0x1804D98A0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x4D9D90", Offset = "0x4D8990", VA = "0x1804D9D90", Slot = "39")]
	protected virtual void SquashUpdate()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x4D9D20", Offset = "0x4D8920", VA = "0x1804D9D20", Slot = "40")]
	protected virtual void Sound()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x4D9940", Offset = "0x4D8540", VA = "0x1804D9940")]
	private Zombie GetNearestZombie()
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x4D94B0", Offset = "0x4D80B0", VA = "0x1804D94B0", Slot = "41")]
	protected virtual void AttackZombie()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x4D9B70", Offset = "0x4D8770", VA = "0x1804D9B70")]
	[IteratorStateMachine(typeof(<MoveToZombie>d__18))]
	private IEnumerator MoveToZombie(Vector3 endPos, float speed)
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x4D9C10", Offset = "0x4D8810", VA = "0x1804D9C10")]
	private void SetTransform(GameObject plant, Vector3 position)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x4827D0", Offset = "0x4813D0", VA = "0x1804827D0")]
	private float EaseInOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x4D91A0", Offset = "0x4D7DA0", VA = "0x1804D91A0")]
	private void AnimMove()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x4DA3B0", Offset = "0x4D8FB0", VA = "0x1804DA3B0")]
	public Squash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SquashKelp
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x200014A")]
public class SquashKelp : Tanglekelp
{
	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private sealed class <Moving>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000614")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000615")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000616")]
		[FieldOffset(Offset = "0x20")]
		public SquashKelp <>4__this;

		[Token(Token = "0x4000617")]
		[FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Moving>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x4AA440", Offset = "0x4A9040", VA = "0x1804AA440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x4AA800", Offset = "0x4A9400", VA = "0x1804AA800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x4A9130", Offset = "0x4A7D30", VA = "0x1804A9130", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x4A9180", Offset = "0x4A7D80", VA = "0x1804A9180", Slot = "41")]
	protected override void GrabPrepare()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x4A8FC0", Offset = "0x4A7BC0", VA = "0x1804A8FC0")]
	private void AnimSquash()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x4A93A0", Offset = "0x4A7FA0", VA = "0x1804A93A0", Slot = "42")]
	[IteratorStateMachine(typeof(<Moving>d__3))]
	protected override IEnumerator Moving()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x48DFF0", Offset = "0x48CBF0", VA = "0x18048DFF0")]
	public SquashKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SquashPumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001C7")]
public class SquashPumpkin : Pumpkin
{
	[Token(Token = "0x40006C8")]
	[FieldOffset(Offset = "0x1B8")]
	public GameObject squashPrefab;

	[Token(Token = "0x40006C9")]
	[FieldOffset(Offset = "0x1C0")]
	public GameObject squashPrefab_jala;

	[Token(Token = "0x40006CA")]
	[FieldOffset(Offset = "0x1C8")]
	public GameObject squashPrefab_lour;

	[Token(Token = "0x40006CB")]
	[FieldOffset(Offset = "0x1D0")]
	private LittleSquash littleSquash;

	[Token(Token = "0x17000044")]
	private Plant Squash
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x4D87B0", Offset = "0x4D73B0", VA = "0x1804D87B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x4D8750", Offset = "0x4D7350", VA = "0x1804D8750", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x4D8160", Offset = "0x4D6D60", VA = "0x1804D8160", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public SquashPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SquashSpike
using Il2CppDummyDll;

[Token(Token = "0x20001C8")]
public class SquashSpike : Caltrop
{
	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x4D8970", Offset = "0x4D7570", VA = "0x1804D8970", Slot = "41")]
	protected override void AnimAttack()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x4AB3C0", Offset = "0x4A9FC0", VA = "0x1804AB3C0")]
	public SquashSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SquashTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001C9")]
public class SquashTorch : TorchWood
{
	[Token(Token = "0x40006CC")]
	[FieldOffset(Offset = "0x1B8")]
	protected int fireTimes;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x4D8CD0", Offset = "0x4D78D0", VA = "0x1804D8CD0", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x4D8E90", Offset = "0x4D7A90", VA = "0x1804D8E90", Slot = "40")]
	protected virtual bool SummonPlant(int dmg = 300)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SquashTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SquashZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002BA")]
public class SquashZombie : Zombie
{
	[Token(Token = "0x40007FD")]
	[FieldOffset(Offset = "0x220")]
	public Transform squashHead;

	[Token(Token = "0x40007FE")]
	[FieldOffset(Offset = "0x228")]
	public GameObject squashPrefab;

	[Token(Token = "0x40007FF")]
	[FieldOffset(Offset = "0x230")]
	private ZombieSquash squash;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x381EC0", Offset = "0x380AC0", VA = "0x180381EC0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x381F60", Offset = "0x380B60", VA = "0x180381F60", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SquashZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarBlover
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001CA")]
public class StarBlover : Blover
{
	[Token(Token = "0x40006CD")]
	[FieldOffset(Offset = "0x1B8")]
	private bool attracting;

	[Token(Token = "0x40006CE")]
	[FieldOffset(Offset = "0x1C0")]
	protected Bullet_star[] starBullets;

	[Token(Token = "0x40006CF")]
	[FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private Vector2 center;

	[Token(Token = "0x40006D0")]
	[FieldOffset(Offset = "0x1D0")]
	private readonly float radius;

	[Token(Token = "0x40006D1")]
	[FieldOffset(Offset = "0x1D4")]
	private readonly float transitionSpeed;

	[Token(Token = "0x40006D2")]
	[FieldOffset(Offset = "0x1D8")]
	private GameObject head;

	[Token(Token = "0x40006D3")]
	[FieldOffset(Offset = "0x1E0")]
	protected int maxBullets;

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x4DA560", Offset = "0x4D9160", VA = "0x1804DA560", Slot = "39")]
	protected override void AnimBlow()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x4DA7C0", Offset = "0x4D93C0", VA = "0x1804DA7C0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x4DA810", Offset = "0x4D9410", VA = "0x1804DA810", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x4DB0C0", Offset = "0x4D9CC0", VA = "0x1804DB0C0", Slot = "41")]
	protected virtual void SetAccelerateTime()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x4DA450", Offset = "0x4D9050", VA = "0x1804DA450")]
	private bool AddNode(Bullet_star starBullet)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x4DAE30", Offset = "0x4D9A30", VA = "0x1804DAE30")]
	protected void RemoveNode(Bullet_star starBullet)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x4DB490", Offset = "0x4DA090", VA = "0x1804DB490", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x4DB2A0", Offset = "0x4D9EA0", VA = "0x1804DB2A0", Slot = "42")]
	protected virtual void StarsUpdate()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x4DA9F0", Offset = "0x4D95F0", VA = "0x1804DA9F0")]
	protected void MoveToCircle(Bullet_star star)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x4DAF40", Offset = "0x4D9B40", VA = "0x1804DAF40")]
	protected void RotateOnCircle(Bullet_star star)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x4DA6B0", Offset = "0x4D92B0", VA = "0x1804DA6B0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x4DB4C0", Offset = "0x4DA0C0", VA = "0x1804DB4C0")]
	public StarBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarFruit
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200024D")]
public class StarFruit : Shooter
{
	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x343F10", Offset = "0x342B10", VA = "0x180343F10", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x343DF0", Offset = "0x3429F0", VA = "0x180343DF0", Slot = "42")]
	protected virtual void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x343740", Offset = "0x342340", VA = "0x180343740", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarFruit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarFruitIron
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200024E")]
public class StarFruitIron : StarFruit
{
	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x343620", Offset = "0x342220", VA = "0x180343620", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarFruitIron()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarfruitJackbox
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200024F")]
public class StarfruitJackbox : StarFruit
{
	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x344D90", Offset = "0x343990", VA = "0x180344D90", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarfruitJackbox()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarfruitMagnet
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000250")]
public class StarfruitMagnet : StarFruit
{
	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x344EB0", Offset = "0x343AB0", VA = "0x180344EB0", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarfruitMagnet()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarfruitPickaxe
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000251")]
public class StarfruitPickaxe : StarFruit
{
	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x344FD0", Offset = "0x343BD0", VA = "0x180344FD0", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarfruitPickaxe()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarPuff
using Il2CppDummyDll;

[Token(Token = "0x2000252")]
public class StarPuff : StarFruit
{
	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public StarPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarScaredyShroom
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000253")]
public class StarScaredyShroom : ScaredyShroom
{
	[Token(Token = "0x4000738")]
	[FieldOffset(Offset = "0x1C0")]
	public List<Transform> shoots;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x344110", Offset = "0x342D10", VA = "0x180344110", Slot = "42")]
	protected override void GetNearZombies()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x344570", Offset = "0x343170", VA = "0x180344570", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x3444D0", Offset = "0x3430D0", VA = "0x1803444D0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x344820", Offset = "0x343420", VA = "0x180344820")]
	public StarScaredyShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StartGameBtn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x200001D")]
public class StartGameBtn : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x400009E")]
	[FieldOffset(Offset = "0x28")]
	private Sprite originSprite;

	[Token(Token = "0x400009F")]
	[FieldOffset(Offset = "0x30")]
	private Image image;

	[Token(Token = "0x40000A0")]
	[FieldOffset(Offset = "0x38")]
	private Vector3 originPosition;

	[Token(Token = "0x40000A1")]
	[FieldOffset(Offset = "0x48")]
	private RectTransform rectTransform;

	[Token(Token = "0x40000A2")]
	[FieldOffset(Offset = "0x50")]
	private bool clicked;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x31D230", Offset = "0x31BE30", VA = "0x18031D230")]
	private void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x31CF10", Offset = "0x31BB10", VA = "0x18031CF10")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x31CF70", Offset = "0x31BB70", VA = "0x18031CF70")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x31CE70", Offset = "0x31BA70", VA = "0x18031CE70")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x31CFF0", Offset = "0x31BBF0", VA = "0x18031CFF0")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public StartGameBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// StarTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000254")]
public class StarTorch : TorchWood
{
	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x344AB0", Offset = "0x3436B0", VA = "0x180344AB0", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x3448A0", Offset = "0x3434A0", VA = "0x1803448A0")]
	private void FireStar(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public StarTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// State_scaredyPotato
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000059")]
public class State_scaredyPotato : StateMachineBehaviour
{
	[Token(Token = "0x6000161")]
	[Address(RVA = "0x42FB10", Offset = "0x42E710", VA = "0x18042FB10", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x42FBE0", Offset = "0x42E7E0", VA = "0x18042FBE0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x425AD0", Offset = "0x4246D0", VA = "0x180425AD0")]
	public State_scaredyPotato()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Statistics
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D1")]
public class Statistics : MonoBehaviour
{
	[Token(Token = "0x6001382")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Statistics()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SubmarineZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002BB")]
public class SubmarineZombie : Zombie
{
	[Token(Token = "0x4000800")]
	[FieldOffset(Offset = "0x220")]
	private Vector3 startPos;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x382AB0", Offset = "0x3816B0", VA = "0x180382AB0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x382A30", Offset = "0x381630", VA = "0x180382A30", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x382B70", Offset = "0x381770", VA = "0x180382B70", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x382280", Offset = "0x380E80", VA = "0x180382280", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x382870", Offset = "0x381470", VA = "0x180382870", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x382A90", Offset = "0x381690", VA = "0x180382A90", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x35F2D0", Offset = "0x35DED0", VA = "0x18035F2D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SubmarineZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunBomb
using Il2CppDummyDll;

[Token(Token = "0x200015A")]
public class SunBomb : Plant
{
	[Token(Token = "0x6000684")]
	[Address(RVA = "0x4BBED0", Offset = "0x4BAAD0", VA = "0x1804BBED0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x4BBBB0", Offset = "0x4BA7B0", VA = "0x1804BBBB0")]
	public void Bomb()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x4BBE70", Offset = "0x4BAA70", VA = "0x1804BBE70")]
	public void PlaySoundStart()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SunBomb()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunCabbage
using Il2CppDummyDll;

[Token(Token = "0x2000255")]
public class SunCabbage : Cabbage
{
	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x3450F0", Offset = "0x343CF0", VA = "0x1803450F0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x345100", Offset = "0x343D00", VA = "0x180345100", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x345130", Offset = "0x343D30", VA = "0x180345130", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public SunCabbage()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunChomper
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x200015B")]
public class SunChomper : Chomper
{
	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private sealed class <SunBright>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000637")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000638")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000639")]
		[FieldOffset(Offset = "0x20")]
		public SunChomper <>4__this;

		[Token(Token = "0x400063A")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x4BE160", Offset = "0x4BCD60", VA = "0x1804BE160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x4BE480", Offset = "0x4BD080", VA = "0x1804BE480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x4BC1E0", Offset = "0x4BADE0", VA = "0x1804BC1E0", Slot = "40")]
	protected override void Swallow()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x4BC0C0", Offset = "0x4BACC0", VA = "0x1804BC0C0")]
	private void Produce()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x4BC170", Offset = "0x4BAD70", VA = "0x1804BC170")]
	[IteratorStateMachine(typeof(<SunBright>d__2))]
	private IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x4BBF30", Offset = "0x4BAB30", VA = "0x1804BBF30")]
	private void ProduceSun()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public SunChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunFlower
using Il2CppDummyDll;

[Token(Token = "0x20001F3")]
public class SunFlower : Producer
{
	[Token(Token = "0x6000987")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SunFlower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunGatlingPuff
using Il2CppDummyDll;

[Token(Token = "0x2000256")]
public class SunGatlingPuff : Shooter
{
	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x345160", Offset = "0x343D60", VA = "0x180345160", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SunGatlingPuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunMagnetShroom
using Il2CppDummyDll;

[Token(Token = "0x20001F4")]
public class SunMagnetShroom : Producer
{
	[Token(Token = "0x6000988")]
	[Address(RVA = "0x4DBE80", Offset = "0x4DAA80", VA = "0x1804DBE80", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x4DBDC0", Offset = "0x4DA9C0", VA = "0x1804DBDC0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x4DBEA0", Offset = "0x4DAAA0", VA = "0x1804DBEA0", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x4DB540", Offset = "0x4DA140", VA = "0x1804DB540")]
	private void AnimProduce()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SunMagnetShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunMine
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x200015D")]
public class SunMine : PotatoMine
{
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <SunBright>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063B")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063C")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063D")]
		[FieldOffset(Offset = "0x20")]
		public SunMine <>4__this;

		[Token(Token = "0x400063E")]
		[FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <SunBright>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x4BE2D0", Offset = "0x4BCED0", VA = "0x1804BE2D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x4BE440", Offset = "0x4BD040", VA = "0x1804BE440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x4BC5C0", Offset = "0x4BB1C0", VA = "0x1804BC5C0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x4BC440", Offset = "0x4BB040", VA = "0x1804BC440", Slot = "20")]
	public override void ProducerUpdate()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x4BC550", Offset = "0x4BB150", VA = "0x1804BC550")]
	[IteratorStateMachine(typeof(<SunBright>d__2))]
	private IEnumerator SunBright()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x4BC360", Offset = "0x4BAF60", VA = "0x1804BC360", Slot = "40")]
	protected virtual void ProduceSun()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x4BC250", Offset = "0x4BAE50", VA = "0x1804BC250", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x33D710", Offset = "0x33C310", VA = "0x18033D710")]
	public SunMine()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunNut
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200015F")]
public class SunNut : Producer
{
	[Token(Token = "0x400063F")]
	[FieldOffset(Offset = "0x1B8")]
	private bool produceSun1;

	[Token(Token = "0x4000640")]
	[FieldOffset(Offset = "0x1B9")]
	private bool produceSun2;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x33D060", Offset = "0x33BC60", VA = "0x18033D060", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x4BC660", Offset = "0x4BB260", VA = "0x1804BC660", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x4BC820", Offset = "0x4BB420", VA = "0x1804BC820", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x4BC6E0", Offset = "0x4BB2E0", VA = "0x1804BC6E0")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x4BC6B0", Offset = "0x4BB2B0", VA = "0x1804BC6B0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public SunNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunPot
using Il2CppDummyDll;

[Token(Token = "0x20001CB")]
public class SunPot : MoneyPot
{
	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x4DBFA0", Offset = "0x4DABA0", VA = "0x1804DBFA0", Slot = "40")]
	protected override void Produce()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public SunPot()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunSeaShroom
using Il2CppDummyDll;

[Token(Token = "0x20001F5")]
public class SunSeaShroom : Producer
{
	[Token(Token = "0x4000703")]
	[FieldOffset(Offset = "0x1B8")]
	private int growLevel;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x4DC350", Offset = "0x4DAF50", VA = "0x1804DC350", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x4DC0D0", Offset = "0x4DACD0", VA = "0x1804DC0D0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x4DC090", Offset = "0x4DAC90", VA = "0x1804DC090", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x4DC1B0", Offset = "0x4DADB0", VA = "0x1804DC1B0", Slot = "39")]
	protected override void ProduceSun()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x4DC120", Offset = "0x4DAD20", VA = "0x1804DC120")]
	public void Grow()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SunSeaShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunShroom
using Il2CppDummyDll;

[Token(Token = "0x20001F6")]
public class SunShroom : Producer
{
	[Token(Token = "0x4000704")]
	[FieldOffset(Offset = "0x1B8")]
	private bool isGrowen;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x340740", Offset = "0x33F340", VA = "0x180340740", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x4DC370", Offset = "0x4DAF70", VA = "0x1804DC370", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x4DC4A0", Offset = "0x4DB0A0", VA = "0x1804DC4A0", Slot = "39")]
	protected override void ProduceSun()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x4DC410", Offset = "0x4DB010", VA = "0x1804DC410")]
	public void Grow()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SunShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SunType
using Il2CppDummyDll;

[Token(Token = "0x20000F4")]
public enum SunType
{
	[Token(Token = "0x40003E5")]
	NormalSun = 0,
	[Token(Token = "0x40003E6")]
	BigSun = 1,
	[Token(Token = "0x40003E7")]
	SmallSun = 2,
	[Token(Token = "0x40003E8")]
	LittleSun = 13
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperBall
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A9")]
public class SuperBall : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[FieldOffset(Offset = "0x20")]
	private Vector2 velocity;

	[Token(Token = "0x40007DA")]
	[FieldOffset(Offset = "0x28")]
	public int theRow;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x3644F0", Offset = "0x3630F0", VA = "0x1803644F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x364500", Offset = "0x363100", VA = "0x180364500")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public SuperBall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperCherryShooter
using Il2CppDummyDll;

[Token(Token = "0x2000257")]
public class SuperCherryShooter : Shooter
{
	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x3452E0", Offset = "0x343EE0", VA = "0x1803452E0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x345290", Offset = "0x343E90", VA = "0x180345290", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x345440", Offset = "0x344040", VA = "0x180345440", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperCherryShooter()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperCherryZ
using Il2CppDummyDll;

[Token(Token = "0x20002E9")]
public class SuperCherryZ : PeaShooterZ
{
	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x38D110", Offset = "0x38BD10", VA = "0x18038D110", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x38CF20", Offset = "0x38BB20", VA = "0x18038CF20", Slot = "55")]
	public override Bullet AnimShoot()
	{
		return null;
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x388270", Offset = "0x386E70", VA = "0x180388270")]
	public SuperCherryZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperChomper
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000160")]
public class SuperChomper : Chomper
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private BulletType shootType;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private GameObject face1;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject face2;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject face3;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject body1;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject body2;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private GameObject body3;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected float timer;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x4BCCF0", Offset = "0x4BB8F0", VA = "0x1804BCCF0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x4BD2A0", Offset = "0x4BBEA0", VA = "0x1804BD2A0", Slot = "41")]
	public override void ChomperSearchZombie([Optional] Collider2D collision)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x4BD840", Offset = "0x4BC440", VA = "0x1804BD840", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x4BCF50", Offset = "0x4BBB50", VA = "0x1804BCF50", Slot = "42")]
	public override void BiteEvent()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x4BCB90", Offset = "0x4BB790", VA = "0x1804BCB90", Slot = "44")]
	public virtual void AnimShoot()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x4BD890", Offset = "0x4BC490", VA = "0x1804BD890", Slot = "23")]
	protected override void LimHealth()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x4BDB50", Offset = "0x4BC750", VA = "0x1804BDB50", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x4BD7B0", Offset = "0x4BC3B0", VA = "0x1804BD7B0", Slot = "45")]
	protected virtual void DecreaseHealth()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x4BDB00", Offset = "0x4BC700", VA = "0x1804BDB00", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x4BD8B0", Offset = "0x4BC4B0", VA = "0x1804BD8B0", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x4BD070", Offset = "0x4BBC70", VA = "0x1804BD070", Slot = "46")]
	protected virtual void Bite(GameObject _zombie)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x4AB380", Offset = "0x4A9F80", VA = "0x1804AB380")]
	public SuperChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperDoomScaredy
using Il2CppDummyDll;

[Token(Token = "0x2000258")]
public class SuperDoomScaredy : ScaredyDoom
{
	[Token(Token = "0x4000739")]
	[FieldOffset(Offset = "0x1C0")]
	private int doomTimes;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x345450", Offset = "0x344050", VA = "0x180345450", Slot = "43")]
	protected override void ScaredEvent()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x3454C0", Offset = "0x3440C0", VA = "0x1803454C0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperDoomScaredy()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperDoorZombie
using Il2CppDummyDll;

[Token(Token = "0x200029F")]
public class SuperDoorZombie : DoorZombie
{
	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x364B00", Offset = "0x363700", VA = "0x180364B00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x364B40", Offset = "0x363740", VA = "0x180364B40", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x364CC0", Offset = "0x3638C0", VA = "0x180364CC0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x364AA0", Offset = "0x3636A0", VA = "0x180364AA0", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x3648F0", Offset = "0x3634F0", VA = "0x1803648F0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SuperDoorZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperDriverZombie
using Il2CppDummyDll;

[Token(Token = "0x20002A0")]
public class SuperDriverZombie : DriverZombie
{
	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x3650E0", Offset = "0x363CE0", VA = "0x1803650E0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x366260", Offset = "0x364E60", VA = "0x180366260", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x365AB0", Offset = "0x3646B0", VA = "0x180365AB0", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x3658F0", Offset = "0x3644F0", VA = "0x1803658F0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x35FC90", Offset = "0x35E890", VA = "0x18035FC90")]
	public SuperDriverZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperGargantuar
using Il2CppDummyDll;

[Token(Token = "0x20002EA")]
public class SuperGargantuar : Gargantuar
{
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "55")]
	protected override void SetWeapon()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x38D130", Offset = "0x38BD30", VA = "0x18038D130", Slot = "57")]
	protected override void AnimCrash()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x38E530", Offset = "0x38D130", VA = "0x18038E530", Slot = "58")]
	protected virtual void SetImps()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x38DE70", Offset = "0x38CA70", VA = "0x18038DE70", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x38D470", Offset = "0x38C070", VA = "0x18038D470", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x38D180", Offset = "0x38BD80", VA = "0x18038D180", Slot = "56")]
	protected override void AnimThrow()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x38E4D0", Offset = "0x38D0D0", VA = "0x18038E4D0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x38E0B0", Offset = "0x38CCB0", VA = "0x18038E0B0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x38DE50", Offset = "0x38CA50", VA = "0x18038DE50", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x38E510", Offset = "0x38D110", VA = "0x18038E510", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x38E4F0", Offset = "0x38D0F0", VA = "0x18038E4F0", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public SuperGargantuar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperGatling
using Il2CppDummyDll;

[Token(Token = "0x2000259")]
public class SuperGatling : SuperSnowGatling
{
	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x345730", Offset = "0x344330", VA = "0x180345730", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperHypno
using Il2CppDummyDll;

[Token(Token = "0x200025A")]
public class SuperHypno : PeaShooter
{
	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x345780", Offset = "0x344380", VA = "0x180345780", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperHypno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperHypnoDoom
using Il2CppDummyDll;

[Token(Token = "0x20001CC")]
public class SuperHypnoDoom : DoomShroom
{
	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x4DC650", Offset = "0x4DB250", VA = "0x1804DC650", Slot = "39")]
	public override void AnimExplode()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x4DC720", Offset = "0x4DB320", VA = "0x1804DC720")]
	private void SetZombie(int row)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public SuperHypnoDoom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperJackboxZombie
using Il2CppDummyDll;

[Token(Token = "0x20002EB")]
public class SuperJackboxZombie : JackboxZombie
{
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x38EA50", Offset = "0x38D650", VA = "0x18038EA50", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x38EBE0", Offset = "0x38D7E0", VA = "0x18038EBE0", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x38E6D0", Offset = "0x38D2D0", VA = "0x18038E6D0", Slot = "55")]
	protected override void AnimExplode()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x38E830", Offset = "0x38D430", VA = "0x18038E830", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public SuperJackboxZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperKelp
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200025B")]
public class SuperKelp : SquashKelp
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x345D80", Offset = "0x344980", VA = "0x180345D80", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x345AF0", Offset = "0x3446F0", VA = "0x180345AF0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x3458D0", Offset = "0x3444D0", VA = "0x1803458D0", Slot = "43")]
	protected virtual void AnimShoot()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x345B40", Offset = "0x344740", VA = "0x180345B40", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x345DB0", Offset = "0x3449B0", VA = "0x180345DB0")]
	public SuperKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperKirov
using Il2CppDummyDll;

[Token(Token = "0x20002EC")]
public class SuperKirov : KirovAirship
{
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x38F000", Offset = "0x38DC00", VA = "0x18038F000", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x38F0C0", Offset = "0x38DCC0", VA = "0x18038F0C0", Slot = "57")]
	protected override void CreateBomb()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x38F020", Offset = "0x38DC20", VA = "0x18038F020", Slot = "56")]
	protected override void BombUpdate()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x38F210", Offset = "0x38DE10", VA = "0x18038F210")]
	public SuperKirov()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperMachineNut
using Il2CppDummyDll;

[Token(Token = "0x20001CD")]
public class SuperMachineNut : WallNut
{
	[Token(Token = "0x40006D4")]
	[FieldOffset(Offset = "0x1B8")]
	private Zombie landSubmarine;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x4DC950", Offset = "0x4DB550", VA = "0x1804DC950")]
	public void Summon()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x4DC820", Offset = "0x4DB420", VA = "0x1804DC820", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x4DC8B0", Offset = "0x4DB4B0", VA = "0x1804DC8B0", Slot = "23")]
	protected override void LimHealth()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x4DCBD0", Offset = "0x4DB7D0", VA = "0x1804DCBD0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SuperMachineNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperMachineNutZombie
using Il2CppDummyDll;

[Token(Token = "0x20002ED")]
public class SuperMachineNutZombie : MachineNutZombie
{
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "55")]
	protected override void InitType()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x38F220", Offset = "0x38DE20", VA = "0x18038F220", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public SuperMachineNutZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperMelon
using Il2CppDummyDll;

[Token(Token = "0x200025C")]
public class SuperMelon : Thrower
{
	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x345ED0", Offset = "0x344AD0", VA = "0x180345ED0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x345DC0", Offset = "0x3449C0", VA = "0x180345DC0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x345DD0", Offset = "0x3449D0", VA = "0x180345DD0", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x345E50", Offset = "0x344A50", VA = "0x180345E50", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x345EF0", Offset = "0x344AF0", VA = "0x180345EF0", Slot = "46")]
	protected override void UniqueEffect(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x333F50", Offset = "0x332B50", VA = "0x180333F50")]
	public SuperMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperPogoZombie
using Il2CppDummyDll;

[Token(Token = "0x20002EE")]
public class SuperPogoZombie : PogoZombie
{
	[Token(Token = "0x4000859")]
	[FieldOffset(Offset = "0x238")]
	private float waitTime;

	[Token(Token = "0x400085A")]
	[FieldOffset(Offset = "0x23C")]
	private bool jumped;

	[Token(Token = "0x400085B")]
	[FieldOffset(Offset = "0x23D")]
	protected bool loseJumper;

	[Token(Token = "0x400085C")]
	[FieldOffset(Offset = "0x240")]
	private float jumpX;

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x38FC30", Offset = "0x38E830", VA = "0x18038FC30", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x38FD00", Offset = "0x38E900", VA = "0x18038FD00", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x38F4D0", Offset = "0x38E0D0", VA = "0x18038F4D0")]
	private void BigJump()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x38F9C0", Offset = "0x38E5C0", VA = "0x18038F9C0", Slot = "9")]
	protected override void PositionUpdate()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x38F540", Offset = "0x38E140", VA = "0x18038F540", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x3605A0", Offset = "0x35F1A0", VA = "0x1803605A0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x38F780", Offset = "0x38E380", VA = "0x18038F780", Slot = "55")]
	public override void LoseJumper(int reason = 0)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x388F60", Offset = "0x387B60", VA = "0x180388F60")]
	public SuperPogoZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperPolevaulterZombie
using Il2CppDummyDll;

[Token(Token = "0x20002EF")]
public class SuperPolevaulterZombie : PolevaulterZombie
{
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x376A00", Offset = "0x375600", VA = "0x180376A00")]
	public SuperPolevaulterZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperPumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001CE")]
public class SuperPumpkin : BloverPumpkin
{
	[Token(Token = "0x40006D5")]
	[FieldOffset(Offset = "0x1B8")]
	protected LittleFly littleFly;

	[Token(Token = "0x40006D6")]
	[FieldOffset(Offset = "0x1C0")]
	protected LittleFly littleFly2;

	[Token(Token = "0x40006D7")]
	[FieldOffset(Offset = "0x1C8")]
	protected LittleFly littleFly3;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x4DD1F0", Offset = "0x4DBDF0", VA = "0x1804DD1F0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x4DD070", Offset = "0x4DBC70", VA = "0x1804DD070")]
	public void DelaySummon(float time)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x4DCC10", Offset = "0x4DB810", VA = "0x1804DCC10", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x4DD0C0", Offset = "0x4DBCC0", VA = "0x1804DD0C0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x4DCE30", Offset = "0x4DBA30", VA = "0x1804DCE30", Slot = "40")]
	protected virtual void CreateFly()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x4DD1A0", Offset = "0x4DBDA0", VA = "0x1804DD1A0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x4DD150", Offset = "0x4DBD50", VA = "0x1804DD150", Slot = "41")]
	protected virtual GameObject GetFly()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x4B5160", Offset = "0x4B3D60", VA = "0x1804B5160")]
	public SuperPumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperSeaShroom
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x20001CF")]
public class SuperSeaShroom : Shooter
{
	[Token(Token = "0x40006D8")]
	[FieldOffset(Offset = "0x1C0")]
	public SortingGroup handGroup;

	[Token(Token = "0x40006D9")]
	[FieldOffset(Offset = "0x1C8")]
	public GameObject hand;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x4DD460", Offset = "0x4DC060", VA = "0x1804DD460", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x4DDA50", Offset = "0x4DC650", VA = "0x1804DDA50", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x4DDA30", Offset = "0x4DC630", VA = "0x1804DDA30", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x4DD490", Offset = "0x4DC090", VA = "0x1804DD490", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x4DD4C0", Offset = "0x4DC0C0", VA = "0x1804DD4C0")]
	private void GrabUpdate()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x4DD450", Offset = "0x4DC050", VA = "0x1804DD450", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x4DD230", Offset = "0x4DBE30", VA = "0x1804DD230")]
	private void AnimGrab()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public SuperSeaShroom()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperSnowGatling
using System.Runtime.InteropServices;
using Il2CppDummyDll;

[Token(Token = "0x200025D")]
public class SuperSnowGatling : Shooter
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float timer;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x346520", Offset = "0x345120", VA = "0x180346520", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x3462F0", Offset = "0x344EF0", VA = "0x1803462F0", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x346860", Offset = "0x345460", VA = "0x180346860", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x346460", Offset = "0x345060", VA = "0x180346460", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x346830", Offset = "0x345430", VA = "0x180346830", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x3462C0", Offset = "0x344EC0", VA = "0x1803462C0", Slot = "16")]
	public override void Crashed(int level = 0, int soundID = 0, [Optional] Zombie zombie)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x345F70", Offset = "0x344B70", VA = "0x180345F70", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x346710", Offset = "0x345310", VA = "0x180346710")]
	private void SuperShoot(float angle, float speed, float x, float y)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperSnowGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperStarfruit
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200025E")]
public class SuperStarfruit : LanternStarFruit
{
	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x346B50", Offset = "0x345750", VA = "0x180346B50", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x3469E0", Offset = "0x3455E0", VA = "0x1803469E0", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x346910", Offset = "0x345510", VA = "0x180346910", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperStarfruit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperSunNut
using Il2CppDummyDll;

[Token(Token = "0x20001D1")]
public class SuperSunNut : WallNut
{
	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x4DDE70", Offset = "0x4DCA70", VA = "0x1804DDE70", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x4DDB50", Offset = "0x4DC750", VA = "0x1804DDB50")]
	public void SummonAndRecover()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SuperSunNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperThreePeater
using Il2CppDummyDll;

[Token(Token = "0x200025F")]
public class SuperThreePeater : ThreePeater
{
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x346C80", Offset = "0x345880", VA = "0x180346C80", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x346C00", Offset = "0x345800", VA = "0x180346C00", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SuperThreePeater()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001D2")]
public class SuperTorch : Plant
{
	[Token(Token = "0x40006DD")]
	[FieldOffset(Offset = "0x1B8")]
	private float fireCountDown;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x4DE750", Offset = "0x4DD350", VA = "0x1804DE750", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x4DE000", Offset = "0x4DCC00", VA = "0x1804DE000")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x48DFB0", Offset = "0x48CBB0", VA = "0x18048DFB0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x4DE1E0", Offset = "0x4DCDE0", VA = "0x1804DE1E0")]
	private void ReadyToFire()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public SuperTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SuperUmbrella
using Il2CppDummyDll;

[Token(Token = "0x20001D3")]
public class SuperUmbrella : MoneyUmbrella
{
	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x4DE8A0", Offset = "0x4DD4A0", VA = "0x1804DE8A0", Slot = "42")]
	protected override void ConvertZombie(Zombie zombie, float goldRatio, float silverRatio)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x4DE7B0", Offset = "0x4DD3B0", VA = "0x1804DE7B0", Slot = "40")]
	protected override void BlockEffect(Zombie zombie)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x4B5160", Offset = "0x4B3D60", VA = "0x1804B5160")]
	public SuperUmbrella()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SurvivalData
using System;
using System.Collections.Generic;
using Il2CppDummyDll;

[Serializable]
[Token(Token = "0x2000361")]
public class SurvivalData
{
	[Token(Token = "0x4000BC1")]
	[FieldOffset(Offset = "0x10")]
	public List<SavePlantData> plants;

	[Token(Token = "0x4000BC2")]
	[FieldOffset(Offset = "0x18")]
	public SaveBoardData boardData;

	[Token(Token = "0x4000BC3")]
	[FieldOffset(Offset = "0x20")]
	public bool[] unlockPlant;

	[Token(Token = "0x4000BC4")]
	[FieldOffset(Offset = "0x28")]
	public bool[] advancedUpgrades;

	[Token(Token = "0x4000BC5")]
	[FieldOffset(Offset = "0x30")]
	public bool[] ultimateUpgrades;

	[Token(Token = "0x4000BC6")]
	[FieldOffset(Offset = "0x38")]
	public bool[] debuffs;

	[Token(Token = "0x4000BC7")]
	[FieldOffset(Offset = "0x40")]
	public int[] advancedUnlockRound;

	[Token(Token = "0x4000BC8")]
	[FieldOffset(Offset = "0x48")]
	public List<PlantType> unlocked;

	[Token(Token = "0x4000BC9")]
	[FieldOffset(Offset = "0x50")]
	public List<PlantType> cardOnBank;

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public SurvivalData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SurvivalLevel
using Il2CppDummyDll;

[Token(Token = "0x20003A7")]
public enum SurvivalLevel
{
	[Token(Token = "0x4000E0C")]
	DayNormal = 1,
	[Token(Token = "0x4000E0D")]
	NightNormal,
	[Token(Token = "0x4000E0E")]
	PoolNormal,
	[Token(Token = "0x4000E0F")]
	DayHard,
	[Token(Token = "0x4000E10")]
	NightHard,
	[Token(Token = "0x4000E11")]
	PoolHard,
	[Token(Token = "0x4000E12")]
	PoolEndless,
	[Token(Token = "0x4000E13")]
	Travel,
	[Token(Token = "0x4000E14")]
	FogNormal,
	[Token(Token = "0x4000E15")]
	FogHard,
	[Token(Token = "0x4000E16")]
	EndlessTower,
	[Token(Token = "0x4000E17")]
	Travel2,
	[Token(Token = "0x4000E18")]
	RoofNormal,
	[Token(Token = "0x4000E19")]
	RoofHard,
	[Token(Token = "0x4000E1A")]
	EndlessSuperRandom,
	[Token(Token = "0x4000E1B")]
	Travel3,
	[Token(Token = "0x4000E1C")]
	DayEndless,
	[Token(Token = "0x4000E1D")]
	NightEndless,
	[Token(Token = "0x4000E1E")]
	FogEndless,
	[Token(Token = "0x4000E1F")]
	RoofEndless,
	[Token(Token = "0x4000E20")]
	Travel4,
	[Token(Token = "0x4000E21")]
	UltimateEndless
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SwitchBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200030F")]
public class SwitchBtn : UIBtn
{
	[Token(Token = "0x400096C")]
	[FieldOffset(Offset = "0x60")]
	public GameObject normalPage;

	[Token(Token = "0x400096D")]
	[FieldOffset(Offset = "0x68")]
	public GameObject customPage;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x3BB4B0", Offset = "0x3BA0B0", VA = "0x1803BB4B0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x3BB500", Offset = "0x3BA100", VA = "0x1803BB500", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x3095B0", Offset = "0x3081B0", VA = "0x1803095B0")]
	public SwitchBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SwordStarfruit
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000260")]
public class SwordStarfruit : StarFruit
{
	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x346F00", Offset = "0x345B00", VA = "0x180346F00", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x346C90", Offset = "0x345890", VA = "0x180346C90")]
	private void AnimAttack()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x346D90", Offset = "0x345990", VA = "0x180346D90", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public SwordStarfruit()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// SyncPlayer
using Il2CppDummyDll;

[Token(Token = "0x20003DD")]
public class SyncPlayer : BasePlayer
{
	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x4310C0", Offset = "0x42FCC0", VA = "0x1804310C0")]
	public SyncPlayer()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TallIceNutZ
using Il2CppDummyDll;

[Token(Token = "0x20002A1")]
public class TallIceNutZ : WallNutZ
{
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x3664F0", Offset = "0x3650F0", VA = "0x1803664F0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public TallIceNutZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TallNutFootball
using Il2CppDummyDll;

[Token(Token = "0x20001D4")]
public class TallNutFootball : WallNut
{
	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public TallNutFootball()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TallNutFootballZ
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A2")]
public class TallNutFootballZ : BucketNutZ
{
	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x3667F0", Offset = "0x3653F0", VA = "0x1803667F0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x35C0E0", Offset = "0x35ACE0", VA = "0x18035C0E0", Slot = "20")]
	protected override void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x366680", Offset = "0x365280", VA = "0x180366680", Slot = "43")]
	public override GameObject DropArmor()
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public TallNutFootballZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Tanglekelp
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x200014D")]
public class Tanglekelp : Plant
{
	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <Moving>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061C")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061D")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061E")]
		[FieldOffset(Offset = "0x20")]
		public Tanglekelp <>4__this;

		[Token(Token = "0x400061F")]
		[FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Moving>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x4AA060", Offset = "0x4A8C60", VA = "0x1804AA060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x4AA400", Offset = "0x4A9000", VA = "0x1804AA400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000618")]
	[FieldOffset(Offset = "0x1B8")]
	private Vector2 range;

	[Token(Token = "0x4000619")]
	[FieldOffset(Offset = "0x1C0")]
	protected Transform grab;

	[Token(Token = "0x400061A")]
	[FieldOffset(Offset = "0x1C8")]
	private Transform main;

	[Token(Token = "0x400061B")]
	[FieldOffset(Offset = "0x1D0")]
	private SortingGroup grabSort;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x4A9410", Offset = "0x4A8010", VA = "0x1804A9410", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x4A96C0", Offset = "0x4A82C0", VA = "0x1804A96C0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x4A9840", Offset = "0x4A8440", VA = "0x1804A9840", Slot = "39")]
	protected virtual void GrabUpdate()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x4A9C10", Offset = "0x4A8810", VA = "0x1804A9C10", Slot = "40")]
	protected virtual void Grab()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x4A9770", Offset = "0x4A8370", VA = "0x1804A9770", Slot = "41")]
	protected virtual void GrabPrepare()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x4A9580", Offset = "0x4A8180", VA = "0x1804A9580", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x4A9D90", Offset = "0x4A8990", VA = "0x1804A9D90", Slot = "42")]
	[IteratorStateMachine(typeof(<Moving>d__10))]
	protected virtual IEnumerator Moving()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x4A9E00", Offset = "0x4A8A00", VA = "0x1804A9E00")]
	protected GameObject SetWaterSplat(Vector2 position, Vector2 scale)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x48DFF0", Offset = "0x48CBF0", VA = "0x18048DFF0")]
	public Tanglekelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Team
using Il2CppDummyDll;

[Token(Token = "0x20003BD")]
public enum Team
{
	[Token(Token = "0x400104B")]
	Player,
	[Token(Token = "0x400104C")]
	AI
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Test
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003DE")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x441AE0", Offset = "0x4406E0", VA = "0x180441AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Test()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ThanksMenu
using Il2CppDummyDll;

[Token(Token = "0x2000367")]
public class ThanksMenu : BaseMenu
{
	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x3F1060", Offset = "0x3EFC60", VA = "0x1803F1060")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x31B970", Offset = "0x31A570", VA = "0x18031B970")]
	public ThanksMenu()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Threekelp
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000261")]
public class Threekelp : Tanglekelp
{
	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x347CE0", Offset = "0x3468E0", VA = "0x180347CE0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x347840", Offset = "0x346440", VA = "0x180347840")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x347AA0", Offset = "0x3466A0", VA = "0x180347AA0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x345DB0", Offset = "0x3449B0", VA = "0x180345DB0")]
	public Threekelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ThreePeater
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000262")]
public class ThreePeater : Shooter
{
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x347420", Offset = "0x346020", VA = "0x180347420", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x347770", Offset = "0x346370", VA = "0x180347770")]
	private void ShootUpper(float X, float Y, int row)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x3476A0", Offset = "0x3462A0", VA = "0x1803476A0")]
	private void ShootLower(float X, float Y, int row)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x347060", Offset = "0x345C60", VA = "0x180347060")]
	private void ExtraBullet()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x3471E0", Offset = "0x345DE0", VA = "0x1803471E0", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public ThreePeater()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ThreeSpike
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001D5")]
public class ThreeSpike : Caltrop
{
	[Token(Token = "0x40006DE")]
	[FieldOffset(Offset = "0x1B8")]
	private float shootTime;

	[Token(Token = "0x40006DF")]
	[FieldOffset(Offset = "0x1BC")]
	private readonly float shootMaxTime;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x4DFA80", Offset = "0x4DE680", VA = "0x1804DFA80", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x4DF4E0", Offset = "0x4DE0E0", VA = "0x1804DF4E0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x4DF530", Offset = "0x4DE130", VA = "0x1804DF530", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x4DF0E0", Offset = "0x4DDCE0", VA = "0x1804DF0E0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x4DF9A0", Offset = "0x4DE5A0", VA = "0x1804DF9A0")]
	private void ShootUpper(float X, float Y, int row)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x4DF8C0", Offset = "0x4DE4C0", VA = "0x1804DF8C0")]
	private void ShootLower(float X, float Y, int row)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x4DF3E0", Offset = "0x4DDFE0", VA = "0x1804DF3E0")]
	private void ExtraBullet()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x4DF680", Offset = "0x4DE280", VA = "0x1804DF680", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x4DFB00", Offset = "0x4DE700", VA = "0x1804DFB00")]
	public ThreeSpike()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ThreeSquash
using Il2CppDummyDll;

[Token(Token = "0x2000263")]
public class ThreeSquash : ThreePeater
{
	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x34C6A0", Offset = "0x34B2A0", VA = "0x18034C6A0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x34CA60", Offset = "0x34B660", VA = "0x18034CA60")]
	private void ShootUpper(float X, float Y, int row)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x34C9B0", Offset = "0x34B5B0", VA = "0x18034C9B0")]
	private void ShootLower(float X, float Y, int row)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x34C570", Offset = "0x34B170", VA = "0x18034C570")]
	private void ExtraBullet()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public ThreeSquash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ThreeTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001D6")]
public class ThreeTorch : Plant
{
	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x4DFE10", Offset = "0x4DEA10", VA = "0x1804DFE10")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x4DFB20", Offset = "0x4DE720", VA = "0x1804DFB20")]
	private void FirePeas(Bullet bullet)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public ThreeTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Thrower
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200026F")]
public class Thrower : Shooter
{
	[Token(Token = "0x4000748")]
	[FieldOffset(Offset = "0x1C0")]
	protected Vector2 firstPostion;

	[Token(Token = "0x4000749")]
	[FieldOffset(Offset = "0x1C8")]
	protected float flightTime;

	[Token(Token = "0x400074A")]
	[FieldOffset(Offset = "0x1CC")]
	protected float firstTime;

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x34CB20", Offset = "0x34B720", VA = "0x18034CB20", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x34CE10", Offset = "0x34BA10", VA = "0x18034CE10", Slot = "42")]
	protected virtual void SetShoot()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x34CB50", Offset = "0x34B750", VA = "0x18034CB50", Slot = "43")]
	protected virtual bool CheckRange(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x34E000", Offset = "0x34CC00", VA = "0x18034E000", Slot = "44")]
	protected virtual Zombie ThrowerSearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x34CCA0", Offset = "0x34B8A0", VA = "0x18034CCA0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x34DEF0", Offset = "0x34CAF0", VA = "0x18034DEF0")]
	public static bool ThrowSearchZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x34DCE0", Offset = "0x34C8E0", VA = "0x18034DCE0", Slot = "45")]
	protected virtual void ShootZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x34CE80", Offset = "0x34BA80", VA = "0x18034CE80", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x34D5C0", Offset = "0x34C1C0", VA = "0x18034D5C0", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "46")]
	protected virtual void UniqueEffect(Bullet bullet)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "47")]
	protected virtual BulletType GetBulletType2()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x34CBB0", Offset = "0x34B7B0", VA = "0x18034CBB0")]
	protected Vector2 GetZombiePosition(Zombie zombie)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x34E350", Offset = "0x34CF50", VA = "0x18034E350")]
	public Thrower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TorchWood
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001D7")]
public class TorchWood : Plant
{
	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x4DFFD0", Offset = "0x4DEBD0", VA = "0x1804DFFD0", Slot = "39")]
	protected virtual void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x4DFEE0", Offset = "0x4DEAE0", VA = "0x1804DFEE0")]
	protected bool CheckFire(Bullet bullet)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public TorchWood()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Touch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D2")]
public class Touch : MonoBehaviour
{
	[Token(Token = "0x6001383")]
	[Address(RVA = "0x441B50", Offset = "0x440750", VA = "0x180441B50")]
	public static void CheckTouchUp()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Touch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Towards
using Il2CppDummyDll;

[Token(Token = "0x20003AA")]
public enum Towards
{
	[Token(Token = "0x4000E4D")]
	Left,
	[Token(Token = "0x4000E4E")]
	Right
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Tower5_quest
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000276")]
public class Tower5_quest : MonoBehaviour
{
	[Token(Token = "0x4000769")]
	[FieldOffset(Offset = "0x20")]
	public int id;

	[Token(Token = "0x400076A")]
	[FieldOffset(Offset = "0x24")]
	protected int progress;

	[Token(Token = "0x400076B")]
	[FieldOffset(Offset = "0x28")]
	protected float timer;

	[Token(Token = "0x400076C")]
	[FieldOffset(Offset = "0x2C")]
	protected float time;

	[Token(Token = "0x400076D")]
	[FieldOffset(Offset = "0x30")]
	protected Board board;

	[Token(Token = "0x400076E")]
	[FieldOffset(Offset = "0x38")]
	protected Zombie missionZombie;

	[Token(Token = "0x400076F")]
	[FieldOffset(Offset = "0x40")]
	protected Zombie missionZombie2;

	[Token(Token = "0x4000770")]
	[FieldOffset(Offset = "0x48")]
	protected int temp;

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x34E370", Offset = "0x34CF70", VA = "0x18034E370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x34F660", Offset = "0x34E260", VA = "0x18034F660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x34E550", Offset = "0x34D150", VA = "0x18034E550", Slot = "4")]
	protected virtual void MissionUpdate()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x34F5B0", Offset = "0x34E1B0", VA = "0x18034F5B0")]
	protected void SetMissionCard(int theColumn, int theRow, PlantType theSeedType)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x34E3D0", Offset = "0x34CFD0", VA = "0x18034E3D0")]
	protected int GetPlantCount(PlantType theSeedType)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Tower5_quest()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Tower6_quest
using Il2CppDummyDll;

[Token(Token = "0x2000277")]
public class Tower6_quest : Tower5_quest
{
	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x34F710", Offset = "0x34E310", VA = "0x18034F710", Slot = "4")]
	protected override void MissionUpdate()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public Tower6_quest()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TowerDefenceMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200027E")]
public class TowerDefenceMgr : MonoBehaviour
{
	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TowerDefenceMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TowerMgr
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200027F")]
public class TowerMgr : MonoBehaviour
{
	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x3503C0", Offset = "0x34EFC0", VA = "0x1803503C0")]
	public static void SetBox(int level)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x3512C0", Offset = "0x34FEC0", VA = "0x1803512C0")]
	private static void Tower3(Board board)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x3527B0", Offset = "0x3513B0", VA = "0x1803527B0")]
	private static void Tower4(Board board)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x353E40", Offset = "0x352A40", VA = "0x180353E40")]
	private static void Tower5(Board board)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x354F00", Offset = "0x353B00", VA = "0x180354F00")]
	private static void Tower6(Board board)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x34FE00", Offset = "0x34EA00", VA = "0x18034FE00")]
	public static int GetZombieRow(int level, int wave, int theCurrentSurvivalRound, ZombieType theZombieType)
	{
		return default(int);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x350310", Offset = "0x34EF10", VA = "0x180350310")]
	public static float GetZombieX(int level, int row)
	{
		return default(float);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x351000", Offset = "0x34FC00", VA = "0x180351000")]
	public static void SetZombiePosition(int level, Zombie zombie, int theWave)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x3503A0", Offset = "0x34EFA0", VA = "0x1803503A0")]
	private static bool LeftZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x3502F0", Offset = "0x34EEF0", VA = "0x1803502F0")]
	public static ZombieType GetZombieType(int wave, ZombieType theZombieType)
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TowerMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TrainingDummy
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F0")]
public class TrainingDummy : Zombie
{
	[Token(Token = "0x400085D")]
	[FieldOffset(Offset = "0x220")]
	private int lastDamage;

	[Token(Token = "0x400085E")]
	[FieldOffset(Offset = "0x224")]
	private float currentSecondDamage;

	[Token(Token = "0x400085F")]
	[FieldOffset(Offset = "0x228")]
	private readonly Queue<float> last10SecondDamages;

	[Token(Token = "0x4000860")]
	[FieldOffset(Offset = "0x230")]
	private float dpsUpdateTimer;

	[Token(Token = "0x17000062")]
	public float CurrentDPS
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x390450", Offset = "0x38F050", VA = "0x180390450")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x390480", Offset = "0x38F080", VA = "0x180390480")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public float Average10SecDPS
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x390440", Offset = "0x38F040", VA = "0x180390440")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x390470", Offset = "0x38F070", VA = "0x180390470")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public int LastDamage
	{
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x390460", Offset = "0x38F060", VA = "0x180390460")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x38FEF0", Offset = "0x38EAF0", VA = "0x18038FEF0", Slot = "14")]
	public override void TakeDamage(DmgType damageType, int damage, bool fix = false)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x390320", Offset = "0x38EF20", VA = "0x180390320", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x38FF70", Offset = "0x38EB70", VA = "0x18038FF70")]
	private void UpdateDPSRecords()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x390160", Offset = "0x38ED60", VA = "0x180390160", Slot = "53")]
	public override void UpdateHealthText()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x3817F0", Offset = "0x3803F0", VA = "0x1803817F0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x38FEE0", Offset = "0x38EAE0", VA = "0x18038FEE0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x35F0F0", Offset = "0x35DCF0", VA = "0x18035F0F0", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x3903C0", Offset = "0x38EFC0", VA = "0x1803903C0")]
	public TrainingDummy()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelAdvanture
using Il2CppDummyDll;

[Token(Token = "0x20003BA")]
public enum TravelAdvanture
{
	[Token(Token = "0x400102F")]
	DoomGatling = 1,
	[Token(Token = "0x4001030")]
	SuperSunNut,
	[Token(Token = "0x4001031")]
	SnowGatlingPuff,
	[Token(Token = "0x4001032")]
	HypnoEmperor,
	[Token(Token = "0x4001033")]
	SuperHypnoDoom,
	[Token(Token = "0x4001034")]
	SuperThreePeater,
	[Token(Token = "0x4001035")]
	ObsidianSpike,
	[Token(Token = "0x4001036")]
	CattailLour,
	[Token(Token = "0x4001037")]
	IFVPumpkin,
	[Token(Token = "0x4001038")]
	EmeraldUmbrella,
	[Token(Token = "0x4001039")]
	GoldThreeTorch,
	[Token(Token = "0x400103A")]
	SolarPot,
	[Token(Token = "0x400103B")]
	LaserUmbrella,
	[Token(Token = "0x400103C")]
	IFVIronPuff
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelBuff
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.UI;

[Token(Token = "0x2000284")]
public class TravelBuff : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[FieldOffset(Offset = "0x20")]
	public int theBuffType;

	[Token(Token = "0x4000798")]
	[FieldOffset(Offset = "0x24")]
	public int theBuffNumber;

	[Token(Token = "0x4000799")]
	[FieldOffset(Offset = "0x28")]
	public float max;

	[Token(Token = "0x400079A")]
	[FieldOffset(Offset = "0x2C")]
	public int cost;

	[Token(Token = "0x400079B")]
	[FieldOffset(Offset = "0x30")]
	public PlantType thePlantType;

	[Token(Token = "0x400079C")]
	[FieldOffset(Offset = "0x38")]
	private Material brightMaterial;

	[Token(Token = "0x400079D")]
	[FieldOffset(Offset = "0x40")]
	private Material originalMaterial;

	[Token(Token = "0x400079E")]
	[FieldOffset(Offset = "0x48")]
	public Image image;

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x3562B0", Offset = "0x354EB0", VA = "0x1803562B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x357300", Offset = "0x355F00", VA = "0x180357300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x3573A0", Offset = "0x355FA0", VA = "0x1803573A0")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x3569D0", Offset = "0x3555D0", VA = "0x1803569D0")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x3568F0", Offset = "0x3554F0", VA = "0x1803568F0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x356960", Offset = "0x355560", VA = "0x180356960")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x3563B0", Offset = "0x354FB0", VA = "0x1803563B0")]
	public void ChangeSprite()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x357740", Offset = "0x356340", VA = "0x180357740")]
	public TravelBuff()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelBuffMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000285")]
public class TravelBuffMgr : BaseMenu
{
	[Token(Token = "0x400079F")]
	[FieldOffset(Offset = "0x0")]
	public static TravelBuffMgr Instance;

	[Token(Token = "0x40007A0")]
	[FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text;

	[Token(Token = "0x40007A1")]
	[FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI text2;

	[Token(Token = "0x40007A2")]
	[FieldOffset(Offset = "0x40")]
	public GameObject grid;

	[Token(Token = "0x40007A3")]
	[FieldOffset(Offset = "0x48")]
	public List<GameObject> grids;

	[Token(Token = "0x40007A4")]
	[FieldOffset(Offset = "0x50")]
	private int buffCount;

	[Token(Token = "0x40007A5")]
	[FieldOffset(Offset = "0x54")]
	private int currentPage;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x366980", Offset = "0x365580", VA = "0x180366980", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x366BC0", Offset = "0x3657C0", VA = "0x180366BC0")]
	public void NextPage()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x3672E0", Offset = "0x365EE0", VA = "0x1803672E0")]
	private void TurnPage(int page)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x366BD0", Offset = "0x3657D0", VA = "0x180366BD0")]
	private void SetBuffIcon()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x366A00", Offset = "0x365600", VA = "0x180366A00")]
	private Transform GetTransform(int totalCount)
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x367220", Offset = "0x365E20", VA = "0x180367220")]
	public void ShowText(int buffType, int buffNumber)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x3673E0", Offset = "0x365FE0", VA = "0x1803673E0")]
	public TravelBuffMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelMenuBtn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000286")]
public class TravelMenuBtn : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[FieldOffset(Offset = "0x20")]
	public int choiceNumber;

	[Token(Token = "0x40007A7")]
	[FieldOffset(Offset = "0x24")]
	public int choiceType;

	[Token(Token = "0x40007A8")]
	[FieldOffset(Offset = "0x28")]
	public GameObject thisMenu;

	[Token(Token = "0x40007A9")]
	[FieldOffset(Offset = "0x30")]
	private Vector3 originPosition;

	[Token(Token = "0x40007AA")]
	[FieldOffset(Offset = "0x40")]
	private RectTransform rectTransform;

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x367A80", Offset = "0x366680", VA = "0x180367A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x31BD70", Offset = "0x31A970", VA = "0x18031BD70")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x367460", Offset = "0x366060", VA = "0x180367460")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x3674F0", Offset = "0x3660F0", VA = "0x1803674F0")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x367770", Offset = "0x366370", VA = "0x180367770")]
	private void SelectOption()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x3679D0", Offset = "0x3665D0", VA = "0x1803679D0")]
	private void ShowText(int type, int num)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x367550", Offset = "0x366150", VA = "0x180367550")]
	private void Quit()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TravelMenuBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelMenuMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x2000287")]
public class TravelMenuMgr : BaseMenu
{
	[Token(Token = "0x2000288")]
	public struct OptionData
	{
		[Token(Token = "0x40007B6")]
		[FieldOffset(Offset = "0x0")]
		public int optionType;

		[Token(Token = "0x40007B7")]
		[FieldOffset(Offset = "0x4")]
		public int optionNumber;
	}

	[Token(Token = "0x40007AB")]
	[FieldOffset(Offset = "0x0")]
	public static TravelMenuMgr Instance;

	[Token(Token = "0x40007AC")]
	[FieldOffset(Offset = "0x30")]
	public bool specialTag;

	[Token(Token = "0x40007AD")]
	[FieldOffset(Offset = "0x31")]
	public bool debuff;

	[Token(Token = "0x40007AE")]
	[FieldOffset(Offset = "0x38")]
	public TravelMenuBtn[] option;

	[Token(Token = "0x40007AF")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI[] textMesh;

	[Token(Token = "0x40007B0")]
	[FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI[] textMeshShadow;

	[Token(Token = "0x40007B1")]
	[FieldOffset(Offset = "0x50")]
	public OptionData[] options;

	[Token(Token = "0x40007B2")]
	[FieldOffset(Offset = "0x58")]
	private readonly List<int> unlockPool;

	[Token(Token = "0x40007B3")]
	[FieldOffset(Offset = "0x60")]
	private List<int> advancedPool;

	[Token(Token = "0x40007B4")]
	[FieldOffset(Offset = "0x68")]
	private readonly List<int> ultimatePool;

	[Token(Token = "0x40007B5")]
	[FieldOffset(Offset = "0x70")]
	private readonly List<int> debuffPool;

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x367B10", Offset = "0x366710", VA = "0x180367B10", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x368970", Offset = "0x367570", VA = "0x180368970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x3680A0", Offset = "0x366CA0", VA = "0x1803680A0")]
	public void RefreshOptions()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x367B70", Offset = "0x366770", VA = "0x180367B70")]
	private void GetRandomOptions()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x368650", Offset = "0x367250", VA = "0x180368650")]
	private void SetText()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x368510", Offset = "0x367110", VA = "0x180368510")]
	private void SetRichText(int type, int number, TextMeshProUGUI mesh, string text)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x368310", Offset = "0x366F10", VA = "0x180368310")]
	private void SetP()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x367D30", Offset = "0x366930", VA = "0x180367D30")]
	private void InitRandomPool()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x368130", Offset = "0x366D30", VA = "0x180368130")]
	private void SetOptionNumber()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x3689A0", Offset = "0x3675A0", VA = "0x1803689A0")]
	public TravelMenuMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelMgr
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200034E")]
public class TravelMgr : MonoBehaviour
{
	[Token(Token = "0x200034F")]
	public enum AdvancedBuffName
	{
		[Token(Token = "0x4000B1E")]
		HypnoEmperor_faster,
		[Token(Token = "0x4000B1F")]
		HypnoEmperor_stronger,
		[Token(Token = "0x4000B20")]
		DoomGatling_noRest,
		[Token(Token = "0x4000B21")]
		DoomGatling_bigBullet,
		[Token(Token = "0x4000B22")]
		SuperSunNut_cost,
		[Token(Token = "0x4000B23")]
		SuperSunNut_health,
		[Token(Token = "0x4000B24")]
		ObsidianSpike_damage,
		[Token(Token = "0x4000B25")]
		ObsidianSpike_health
	}

	[Token(Token = "0x4000B0F")]
	[FieldOffset(Offset = "0x0")]
	public static TravelMgr Instance;

	[Token(Token = "0x4000B10")]
	[FieldOffset(Offset = "0x20")]
	public bool[] unlockPlant;

	[Token(Token = "0x4000B11")]
	[FieldOffset(Offset = "0x28")]
	public bool[] advancedUpgrades;

	[Token(Token = "0x4000B12")]
	[FieldOffset(Offset = "0x30")]
	public int[] advancedUnlockRound;

	[Token(Token = "0x4000B13")]
	[FieldOffset(Offset = "0x38")]
	public bool[] ultimateUpgrades;

	[Token(Token = "0x4000B14")]
	[FieldOffset(Offset = "0x40")]
	public bool[] debuff;

	[Token(Token = "0x4000B15")]
	[FieldOffset(Offset = "0x48")]
	public HashSet<PlantType> ulockTemp;

	[Token(Token = "0x4000B16")]
	[FieldOffset(Offset = "0x50")]
	public List<PlantType> weakUltimates;

	[Token(Token = "0x4000B17")]
	[FieldOffset(Offset = "0x8")]
	public static readonly Dictionary<PlantType, (int, int)> normalUltimatePlant;

	[Token(Token = "0x4000B18")]
	[FieldOffset(Offset = "0x10")]
	public static List<PlantType> allWeakUltimatePlants;

	[Token(Token = "0x4000B19")]
	[FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<int, string> advancedBuffs;

	[Token(Token = "0x4000B1A")]
	[FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<int, string> ultimateBuffs;

	[Token(Token = "0x4000B1B")]
	[FieldOffset(Offset = "0x28")]
	private static readonly Dictionary<int, string> unlocks;

	[Token(Token = "0x4000B1C")]
	[FieldOffset(Offset = "0x30")]
	private static readonly Dictionary<int, string> debuffs;

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x3DCC50", Offset = "0x3DB850", VA = "0x1803DCC50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x3DDAC0", Offset = "0x3DC6C0", VA = "0x1803DDAC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x3DDEF0", Offset = "0x3DCAF0", VA = "0x1803DDEF0")]
	public void UnlockPlantData(int choiceIndex)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x3DE1C0", Offset = "0x3DCDC0", VA = "0x1803DE1C0")]
	public void UpgradeUltimatePlantData(int index)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x3DCCC0", Offset = "0x3DB8C0", VA = "0x1803DCCC0")]
	public void DebuffData(int index)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x3DDF20", Offset = "0x3DCB20", VA = "0x1803DDF20")]
	public void UpgradeAdvancedPlantData(int index)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x3DCED0", Offset = "0x3DBAD0", VA = "0x1803DCED0")]
	public List<int> GetAdvancedBuffPool()
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x3DD190", Offset = "0x3DBD90", VA = "0x1803DD190")]
	private HashSet<int> GetAllNormalUltimatePlantBuffID()
	{
		return null;
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x3DD8C0", Offset = "0x3DC4C0", VA = "0x1803DD8C0")]
	private HashSet<int> GetUnlockedNormalUltimatePlantBuffID()
	{
		return null;
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x3DDD00", Offset = "0x3DC900", VA = "0x1803DDD00")]
	public void UnlockAllPlantUniqueBuffs()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x3DD810", Offset = "0x3DC410", VA = "0x1803DD810")]
	public static string GetUnlockText(int index)
	{
		return null;
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x3DD760", Offset = "0x3DC360", VA = "0x1803DD760")]
	public static string GetUltimateText(int index)
	{
		return null;
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x3DD0E0", Offset = "0x3DBCE0", VA = "0x1803DD0E0")]
	public static string GetAdvancedText(int index)
	{
		return null;
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x3DD3A0", Offset = "0x3DBFA0", VA = "0x1803DD3A0")]
	public static string GetDebuffText(int index)
	{
		return null;
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x3DD450", Offset = "0x3DC050", VA = "0x1803DD450")]
	public string GetText(int type, int index)
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x3E0350", Offset = "0x3DEF50", VA = "0x1803E0350")]
	public TravelMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelRefresh
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000289")]
public class TravelRefresh : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[FieldOffset(Offset = "0x20")]
	private Vector3 originPosition;

	[Token(Token = "0x40007B9")]
	[FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x40007BA")]
	[FieldOffset(Offset = "0x38")]
	private int refreshTimes;

	[Token(Token = "0x40007BB")]
	[FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI textMesh1;

	[Token(Token = "0x40007BC")]
	[FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI textMesh2;

	[Token(Token = "0x40007BD")]
	[FieldOffset(Offset = "0x50")]
	public int type;

	[Token(Token = "0x40007BE")]
	[FieldOffset(Offset = "0x54")]
	public readonly int baseCost;

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x368ED0", Offset = "0x367AD0", VA = "0x180368ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x368E40", Offset = "0x367A40", VA = "0x180368E40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x30D2B0", Offset = "0x30BEB0", VA = "0x18030D2B0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x368BE0", Offset = "0x3677E0", VA = "0x180368BE0")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x368B50", Offset = "0x367750", VA = "0x180368B50")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x368C20", Offset = "0x367820", VA = "0x180368C20")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x369020", Offset = "0x367C20", VA = "0x180369020")]
	public TravelRefresh()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelStart
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x2000389")]
public class TravelStart : BaseMenu
{
	[Token(Token = "0x4000C51")]
	[FieldOffset(Offset = "0x0")]
	public static TravelStart Instance;

	[Token(Token = "0x4000C52")]
	[FieldOffset(Offset = "0x30")]
	public List<TravelBuff> travelBuffs;

	[Token(Token = "0x4000C53")]
	[FieldOffset(Offset = "0x38")]
	public List<PlantType> plantsSelected;

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x3F1410", Offset = "0x3F0010", VA = "0x1803F1410", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x3F16E0", Offset = "0x3F02E0", VA = "0x1803F16E0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x3F1480", Offset = "0x3F0080", VA = "0x1803F1480")]
	private void InitBuff()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x3F1730", Offset = "0x3F0330", VA = "0x1803F1730")]
	public TravelStart()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelStartBtn
using Il2CppDummyDll;

[Token(Token = "0x200038A")]
public class TravelStartBtn : UIBtn
{
	[Token(Token = "0x4000C54")]
	[FieldOffset(Offset = "0x60")]
	public bool refresh;

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x3F10D0", Offset = "0x3EFCD0", VA = "0x1803F10D0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TravelStartBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelStartCard
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20000EF")]
public class TravelStartCard : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[FieldOffset(Offset = "0x20")]
	public PlantType thePlantType;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x477CA0", Offset = "0x4768A0", VA = "0x180477CA0")]
	private void Init()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TravelStartCard()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelStore
using System.Collections.Generic;
using Il2CppDummyDll;
using TMPro;

[Token(Token = "0x200038B")]
public class TravelStore : BaseMenu
{
	[Token(Token = "0x4000C55")]
	[FieldOffset(Offset = "0x0")]
	public static TravelStore Instance;

	[Token(Token = "0x4000C56")]
	[FieldOffset(Offset = "0x30")]
	public List<TextMeshProUGUI> introduces;

	[Token(Token = "0x4000C57")]
	[FieldOffset(Offset = "0x38")]
	public List<TextMeshProUGUI> points;

	[Token(Token = "0x4000C58")]
	[FieldOffset(Offset = "0x40")]
	public List<TravelBuff> travelBuffs;

	[Token(Token = "0x4000C59")]
	[FieldOffset(Offset = "0x48")]
	public TravelBuff currentSelect;

	[Token(Token = "0x4000C5A")]
	[FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x3F1EE0", Offset = "0x3F0AE0", VA = "0x1803F1EE0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x3F2C40", Offset = "0x3F1840", VA = "0x1803F2C40")]
	private void Update()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x3F2890", Offset = "0x3F1490", VA = "0x1803F2890")]
	public void SelectBuff(TravelBuff travelBuff)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x3F2B00", Offset = "0x3F1700", VA = "0x1803F2B00")]
	private void SetText(string text)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x3F1F50", Offset = "0x3F0B50", VA = "0x1803F1F50")]
	public void RefreshBuff()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x3F2930", Offset = "0x3F1530", VA = "0x1803F2930")]
	private void SetCost(TravelBuff travelBuff)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x3F2C20", Offset = "0x3F1820", VA = "0x1803F2C20")]
	private void SetType(TravelBuff travelBuff, BuffType buffType, int buffNumber)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x3F2DE0", Offset = "0x3F19E0", VA = "0x1803F2DE0")]
	public TravelStore()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TravelStoreBtn
using Il2CppDummyDll;

[Token(Token = "0x200038C")]
public class TravelStoreBtn : UIBtn
{
	[Token(Token = "0x4000C5B")]
	[FieldOffset(Offset = "0x60")]
	public int id;

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x3F17F0", Offset = "0x3F03F0", VA = "0x1803F17F0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x3F1CC0", Offset = "0x3F08C0", VA = "0x1803F1CC0")]
	private void Quit()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TravelStoreBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TutorManager
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200028A")]
public class TutorManager : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[FieldOffset(Offset = "0x20")]
	public int id;

	[Token(Token = "0x40007C0")]
	[FieldOffset(Offset = "0x24")]
	private int progress;

	[Token(Token = "0x40007C1")]
	[FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x40007C2")]
	[FieldOffset(Offset = "0x30")]
	private Board board;

	[Token(Token = "0x40007C3")]
	[FieldOffset(Offset = "0x38")]
	private Plant missionPlant;

	[Token(Token = "0x40007C4")]
	[FieldOffset(Offset = "0x40")]
	private Zombie missionZombie;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x369030", Offset = "0x367C30", VA = "0x180369030")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x36D550", Offset = "0x36C150", VA = "0x18036D550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x36A050", Offset = "0x368C50", VA = "0x18036A050")]
	private void TutorUpdate1()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x36CAA0", Offset = "0x36B6A0", VA = "0x18036CAA0")]
	private void TutorUpdate4()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x36CDA0", Offset = "0x36B9A0", VA = "0x18036CDA0")]
	private void TutorUpdate7()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x36D120", Offset = "0x36BD20", VA = "0x18036D120")]
	private void TutorUpdate8()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x3692D0", Offset = "0x367ED0", VA = "0x1803692D0")]
	private void TutorUpdate10()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x369590", Offset = "0x368190", VA = "0x180369590")]
	private void TutorUpdate13()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x369B20", Offset = "0x368720", VA = "0x180369B20")]
	private void TutorUpdate15()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x36A690", Offset = "0x369290", VA = "0x18036A690")]
	private void TutorUpdate22()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x36AAB0", Offset = "0x3696B0", VA = "0x18036AAB0")]
	private void TutorUpdate24()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x36B450", Offset = "0x36A050", VA = "0x18036B450")]
	private void TutorUpdate30()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x36B9B0", Offset = "0x36A5B0", VA = "0x18036B9B0")]
	private void TutorUpdate35()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x36C100", Offset = "0x36AD00", VA = "0x18036C100")]
	private void TutorUpdate42()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x3691A0", Offset = "0x367DA0", VA = "0x1803691A0")]
	private void SetMissionCard(int theColumn, int theRow, PlantType theSeedType)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x369080", Offset = "0x367C80", VA = "0x180369080")]
	private void ClearPlant(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x369250", Offset = "0x367E50", VA = "0x180369250")]
	private void TutorOver()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public TutorManager()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TwinFlower
using Il2CppDummyDll;

[Token(Token = "0x20001F7")]
public class TwinFlower : SunFlower
{
	[Token(Token = "0x6000998")]
	[Address(RVA = "0x4E0160", Offset = "0x4DED60", VA = "0x1804E0160", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x4E01B0", Offset = "0x4DEDB0", VA = "0x1804E01B0", Slot = "39")]
	protected override void ProduceSun()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public TwinFlower()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TwinShulk
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001D8")]
public class TwinShulk : Shulkflower
{
	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x4E04D0", Offset = "0x4DF0D0", VA = "0x1804E04D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x4E0300", Offset = "0x4DEF00", VA = "0x1804E0300", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public TwinShulk()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// TypeMgr
using Il2CppDummyDll;

[Token(Token = "0x20003D3")]
public class TypeMgr
{
	[Token(Token = "0x6001385")]
	[Address(RVA = "0x442080", Offset = "0x440C80", VA = "0x180442080")]
	public static void GetPlantTag(Plant plant)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x442B00", Offset = "0x441700", VA = "0x180442B00")]
	public static bool IsFirePlant(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x442CA0", Offset = "0x4418A0", VA = "0x180442CA0")]
	public static bool IsIcePlant(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x443100", Offset = "0x441D00", VA = "0x180443100")]
	public static bool IsPuff(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x443060", Offset = "0x441C60", VA = "0x180443060")]
	public static bool IsPot(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x4430D0", Offset = "0x441CD0", VA = "0x1804430D0")]
	public static bool IsPotatoMine(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x441E40", Offset = "0x440A40", VA = "0x180441E40")]
	public static bool BigNut(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x442EA0", Offset = "0x441AA0", VA = "0x180442EA0")]
	public static bool IsNut(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x442A60", Offset = "0x441660", VA = "0x180442A60")]
	public static bool IsCaltrop(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x443310", Offset = "0x441F10", VA = "0x180443310")]
	public static bool IsSpickRock(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x443330", Offset = "0x441F30", VA = "0x180443330")]
	public static bool IsTallNut(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x4431A0", Offset = "0x441DA0", VA = "0x1804431A0")]
	public static bool IsPumpkin(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x443390", Offset = "0x441F90", VA = "0x180443390")]
	public static bool IsTangkelp(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x443470", Offset = "0x442070", VA = "0x180443470")]
	public static bool IsWaterPlant(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x4433D0", Offset = "0x441FD0", VA = "0x1804433D0")]
	public static bool IsTorch(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x443270", Offset = "0x441E70", VA = "0x180443270")]
	public static bool IsSmallRangeLantern(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x443020", Offset = "0x441C20", VA = "0x180443020")]
	public static bool IsPlantern(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x442040", Offset = "0x440C40", VA = "0x180442040")]
	public static bool FlyingPlants(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x443810", Offset = "0x442410", VA = "0x180443810")]
	public static bool UmbrellaPlants(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x441F50", Offset = "0x440B50", VA = "0x180441F50")]
	public static bool DoubleBoxPlants(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x442DB0", Offset = "0x4419B0", VA = "0x180442DB0")]
	public static bool IsMagnetPlants(PlantType thePlantType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x442A00", Offset = "0x441600", VA = "0x180442A00")]
	public static bool IsAirZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x4436D0", Offset = "0x4422D0", VA = "0x1804436D0")]
	public static bool NotRandomZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x443510", Offset = "0x442110", VA = "0x180443510")]
	public static bool NotRandomBungiZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x4438A0", Offset = "0x4424A0", VA = "0x1804438A0")]
	public static bool UselessHypnoZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x441E60", Offset = "0x440A60", VA = "0x180441E60")]
	public static bool BigZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x443920", Offset = "0x442520", VA = "0x180443920")]
	public static bool WaterZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x442AB0", Offset = "0x4416B0", VA = "0x180442AB0")]
	public static bool IsDriverZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x442C30", Offset = "0x441830", VA = "0x180442C30")]
	public static bool IsGargantuar(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x442A30", Offset = "0x441630", VA = "0x180442A30")]
	public static bool IsBossZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x443800", Offset = "0x442400", VA = "0x180443800")]
	public static bool UltimateZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x441FC0", Offset = "0x440BC0", VA = "0x180441FC0")]
	public static bool EliteZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x4432D0", Offset = "0x441ED0", VA = "0x1804432D0")]
	public static bool IsSpecialPlant(PlantType theSeedType)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public TypeMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIBtn
using Il2CppDummyDll;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

[Token(Token = "0x200038D")]
public class UIBtn : MonoBehaviour
{
	[Token(Token = "0x4000C5C")]
	[FieldOffset(Offset = "0x20")]
	public Sprite highLightSprite;

	[Token(Token = "0x4000C5D")]
	[FieldOffset(Offset = "0x28")]
	public ButtonSoundType buttonSoundType;

	[Token(Token = "0x4000C5E")]
	[FieldOffset(Offset = "0x30")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000C5F")]
	[FieldOffset(Offset = "0x38")]
	public UnityEvent clickEvent;

	[Token(Token = "0x4000C60")]
	[FieldOffset(Offset = "0x40")]
	private Sprite originSprite;

	[Token(Token = "0x4000C61")]
	[FieldOffset(Offset = "0x48")]
	private Image image;

	[Token(Token = "0x4000C62")]
	[FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x3F34F0", Offset = "0x3F20F0", VA = "0x1803F34F0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x3E72E0", Offset = "0x3E5EE0", VA = "0x1803E72E0", Slot = "5")]
	protected virtual void OnMouseEnter()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x3F3660", Offset = "0x3F2260", VA = "0x1803F3660", Slot = "6")]
	protected virtual void OnMouseExit()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x3F3590", Offset = "0x3F2190", VA = "0x1803F3590")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x3F36C0", Offset = "0x3F22C0", VA = "0x1803F36C0", Slot = "7")]
	protected virtual void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public UIBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIDifficulty
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000020")]
public class UIDifficulty : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI t;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x31DB00", Offset = "0x31C700", VA = "0x18031DB00")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x31DB50", Offset = "0x31C750", VA = "0x18031DB50")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public UIDifficulty()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIMgr
using System.Runtime.InteropServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D4")]
public class UIMgr : MonoBehaviour
{
	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x444C00", Offset = "0x443800", VA = "0x180444C00")]
	public static void EnterGame(LevelType levelType, int levelNumber, int id = -1, [Optional] string name)
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x446D20", Offset = "0x445920", VA = "0x180446D20")]
	public static void EnterTravelGame(LevelType levelType, int levelNumber, int theRound, bool round = false)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x447970", Offset = "0x446570", VA = "0x180447970")]
	public static SceneType GetSceneType(LevelType theLevelType, int theLevelNumber)
	{
		return default(SceneType);
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x445990", Offset = "0x444590", VA = "0x180445990")]
	public static void EnterIZGame(int levelNumber, [Optional] string name)
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x4464C0", Offset = "0x4450C0", VA = "0x1804464C0")]
	public static void EnterMainMenu()
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x443E40", Offset = "0x442A40", VA = "0x180443E40")]
	public static void BackToMenu()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x444AC0", Offset = "0x4436C0", VA = "0x180444AC0")]
	public static void EnterChallengeMenu()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x446B40", Offset = "0x445740", VA = "0x180446B40")]
	public static void EnterTravelAdv()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x446C80", Offset = "0x445880", VA = "0x180446C80")]
	public static void EnterTravelGame()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x446BE0", Offset = "0x4457E0", VA = "0x180446BE0")]
	public static void EnterTravelChallenge()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x4445A0", Offset = "0x4431A0", VA = "0x1804445A0")]
	public static void EnterAbyssMenu()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x4458F0", Offset = "0x4444F0", VA = "0x1804458F0")]
	public static void EnterIZEMenu()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x446AA0", Offset = "0x4456A0", VA = "0x180446AA0")]
	public static void EnterSurvivalEMenu()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x447EF0", Offset = "0x446AF0", VA = "0x180447EF0")]
	private static void MenuNormalSettings()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x446840", Offset = "0x445440", VA = "0x180446840")]
	public static void EnterPauseMenu(int place)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x444080", Offset = "0x442C80", VA = "0x180444080")]
	public static void EVEAuto(int road)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x443B90", Offset = "0x442790", VA = "0x180443B90")]
	public static void BackToGame()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x446290", Offset = "0x444E90", VA = "0x180446290")]
	public static void EnterLoseMenu([Optional] GameObject obj)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x445860", Offset = "0x444460", VA = "0x180445860")]
	public static void EnterHelpMenu()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x446770", Offset = "0x445370", VA = "0x180446770")]
	public static OtherMenu EnterOtherMenu()
	{
		return null;
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x446700", Offset = "0x445300", VA = "0x180446700")]
	public static void EnterOptionMenu()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x444B60", Offset = "0x443760", VA = "0x180444B60")]
	public static void EnterExploreMenu()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x444640", Offset = "0x443240", VA = "0x180444640")]
	public static void EnterAchievement()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x4446E0", Offset = "0x4432E0", VA = "0x1804446E0")]
	public static void EnterAlmanac(bool changeMusic = false, bool changeStatus = true)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x447560", Offset = "0x446160", VA = "0x180447560")]
	private static string GetMapName(LevelType theLevelType, int theLevelNumber)
	{
		return null;
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x447E00", Offset = "0x446A00", VA = "0x180447E00")]
	private static string GetTowerDefenceMap(int theLevelNumber)
	{
		return null;
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x445600", Offset = "0x444200", VA = "0x180445600")]
	public static void EnterGarden()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x447420", Offset = "0x446020", VA = "0x180447420")]
	public static void EnterZuma()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x444930", Offset = "0x443530", VA = "0x180444930")]
	public static void EnterCar()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public UIMgr()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIResourcesLoader
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003D5")]
public class UIResourcesLoader
{
	[Token(Token = "0x4001087")]
	[FieldOffset(Offset = "0x10")]
	private readonly Dictionary<UIType, GameObject> UIPrefabs;

	[Token(Token = "0x4001088")]
	[FieldOffset(Offset = "0x18")]
	private readonly Stack<BaseMenu> menuStack;

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x4483E0", Offset = "0x446FE0", VA = "0x1804483E0")]
	public UIResourcesLoader()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x448270", Offset = "0x446E70", VA = "0x180448270")]
	public BaseMenu Push(UIType uIType, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x448170", Offset = "0x446D70", VA = "0x180448170")]
	public void Pop()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x448020", Offset = "0x446C20", VA = "0x180448020")]
	public void PopAll()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIType
using Il2CppDummyDll;

[Token(Token = "0x20003D6")]
public enum UIType
{
	[Token(Token = "0x400108A")]
	MainMenu,
	[Token(Token = "0x400108B")]
	MainMenu_travel,
	[Token(Token = "0x400108C")]
	LoseMenu,
	[Token(Token = "0x400108D")]
	OtherMenu,
	[Token(Token = "0x400108E")]
	OptionMenu,
	[Token(Token = "0x400108F")]
	NoticePauseMenu,
	[Token(Token = "0x4001090")]
	AchievementMenu,
	[Token(Token = "0x4001091")]
	ChallengeMenu,
	[Token(Token = "0x4001092")]
	IZMenu,
	[Token(Token = "0x4001093")]
	SurvivalMenu,
	[Token(Token = "0x4001094")]
	ExploreMenu,
	[Token(Token = "0x4001095")]
	TravelAdvantureMenu,
	[Token(Token = "0x4001096")]
	TravelGameMenu,
	[Token(Token = "0x4001097")]
	TravelChallengeMenu,
	[Token(Token = "0x4001098")]
	PauseMenu,
	[Token(Token = "0x4001099")]
	PauseMenu_buff,
	[Token(Token = "0x400109A")]
	PauseMenu_checkQuit,
	[Token(Token = "0x400109B")]
	PauseMenu_checkRestart,
	[Token(Token = "0x400109C")]
	GardenUI,
	[Token(Token = "0x400109D")]
	ZumaUI,
	[Token(Token = "0x400109E")]
	CarUI,
	[Token(Token = "0x400109F")]
	InGameUI,
	[Token(Token = "0x40010A0")]
	InGameUI_IZ,
	[Token(Token = "0x40010A1")]
	Almanac,
	[Token(Token = "0x40010A2")]
	WarningMenu_travel,
	[Token(Token = "0x40010A3")]
	WarningMenu_editor,
	[Token(Token = "0x40010A4")]
	WarningMenu_custom,
	[Token(Token = "0x40010A5")]
	OppsiteMenu,
	[Token(Token = "0x40010A6")]
	TravelStartMenu,
	[Token(Token = "0x40010A7")]
	TravelStore,
	[Token(Token = "0x40010A8")]
	TravelRandomBuff,
	[Token(Token = "0x40010A9")]
	LevelSaveMenu,
	[Token(Token = "0x40010AA")]
	SellConfirm,
	[Token(Token = "0x40010AB")]
	BuyConfirm,
	[Token(Token = "0x40010AC")]
	AbyssMenu,
	[Token(Token = "0x40010AD")]
	AbyssMenu2,
	[Token(Token = "0x40010AE")]
	AbyssStoreMenu,
	[Token(Token = "0x40010AF")]
	AbyssDevelopMenu,
	[Token(Token = "0x40010B0")]
	AbyssCheckSellBuff,
	[Token(Token = "0x40010B1")]
	AbyssSettlementMenu,
	[Token(Token = "0x40010B2")]
	AbyssCheckReset,
	[Token(Token = "0x40010B3")]
	AbyssSelectDifficulty,
	[Token(Token = "0x40010B4")]
	AbyssHelpMenu,
	[Token(Token = "0x40010B5")]
	AbyssBagMenu,
	[Token(Token = "0x40010B6")]
	AbyssCheckInBag
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UIZombieNum
using Il2CppDummyDll;
using TMPro;
using UnityEngine;

[Token(Token = "0x2000021")]
public class UIZombieNum : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI t;

	[Token(Token = "0x40000A9")]
	[FieldOffset(Offset = "0x28")]
	private Board board;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x31DDE0", Offset = "0x31C9E0", VA = "0x18031DDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x31DE60", Offset = "0x31CA60", VA = "0x18031DE60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public UIZombieNum()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltiBuffs
using Il2CppDummyDll;

[Token(Token = "0x2000352")]
public enum UltiBuffs
{
	[Token(Token = "0x4000B2E")]
	打折券 = 29
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateBigGatling
using Il2CppDummyDll;

[Token(Token = "0x2000264")]
public class UltimateBigGatling : BigGatling
{
	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x3581E0", Offset = "0x356DE0", VA = "0x1803581E0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x358160", Offset = "0x356D60", VA = "0x180358160", Slot = "13")]
	protected override int GetDamage(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x3585C0", Offset = "0x3571C0", VA = "0x1803585C0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x3582D0", Offset = "0x356ED0", VA = "0x1803582D0", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x358660", Offset = "0x357260", VA = "0x180358660")]
	public UltimateBigGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateCactus
using Il2CppDummyDll;

[Token(Token = "0x2000265")]
public class UltimateCactus : Cactus
{
	[Token(Token = "0x400073B")]
	[FieldOffset(Offset = "0x1C0")]
	private float shootTimer;

	[Token(Token = "0x400073C")]
	[FieldOffset(Offset = "0x1C4")]
	private float shootTimer2;

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x358680", Offset = "0x357280", VA = "0x180358680", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x358670", Offset = "0x357270", VA = "0x180358670", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x3586D0", Offset = "0x3572D0", VA = "0x1803586D0")]
	private void StartShooting()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x3586F0", Offset = "0x3572F0", VA = "0x1803586F0")]
	private void StopShooting()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x358710", Offset = "0x357310", VA = "0x180358710", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public UltimateCactus()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateCannon
using Il2CppDummyDll;

[Token(Token = "0x20001D9")]
public class UltimateCannon : CobCannon
{
	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x4E18B0", Offset = "0x4E04B0", VA = "0x1804E18B0", Slot = "39")]
	public override void StartShoot()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x4E1930", Offset = "0x4E0530", VA = "0x1804E1930", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x4E1860", Offset = "0x4E0460", VA = "0x1804E1860", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x4E1560", Offset = "0x4E0160", VA = "0x1804E1560", Slot = "40")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x4E1A70", Offset = "0x4E0670", VA = "0x1804E1A70", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x4E1950", Offset = "0x4E0550", VA = "0x1804E1950")]
	private void SubShootUpdate()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x4E1720", Offset = "0x4E0320", VA = "0x1804E1720")]
	private void AnimSubShoot()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x344D80", Offset = "0x343980", VA = "0x180344D80")]
	public UltimateCannon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateChomper
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001DA")]
public class UltimateChomper : SuperChomper
{
	[Token(Token = "0x6000902")]
	[Address(RVA = "0x4E21F0", Offset = "0x4E0DF0", VA = "0x1804E21F0", Slot = "45")]
	protected override void DecreaseHealth()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x4E2470", Offset = "0x4E1070", VA = "0x1804E2470", Slot = "22")]
	public override void Recover(int health)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x4E22D0", Offset = "0x4E0ED0", VA = "0x1804E22D0", Slot = "23")]
	protected override void LimHealth()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x4E1CF0", Offset = "0x4E08F0", VA = "0x1804E1CF0", Slot = "42")]
	public override void BiteEvent()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x4E2280", Offset = "0x4E0E80", VA = "0x1804E2280", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x4E24B0", Offset = "0x4E10B0", VA = "0x1804E24B0", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x4E1BA0", Offset = "0x4E07A0", VA = "0x1804E1BA0", Slot = "44")]
	public override void AnimShoot()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x4E20B0", Offset = "0x4E0CB0", VA = "0x1804E20B0", Slot = "46")]
	protected override void Bite(GameObject _zombie)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x4E2510", Offset = "0x4E1110", VA = "0x1804E2510")]
	public UltimateChomper()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateFly
using Il2CppDummyDll;

[Token(Token = "0x20001DC")]
public class UltimateFly : CactusBlover
{
	[Token(Token = "0x600090F")]
	[Address(RVA = "0x4E2520", Offset = "0x4E1120", VA = "0x1804E2520", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public UltimateFly()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateFootballDrownZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F1")]
public class UltimateFootballDrownZombie : FootballDrown
{
	[Token(Token = "0x4000863")]
	[FieldOffset(Offset = "0x228")]
	public GameObject weapon;

	[Token(Token = "0x4000864")]
	[FieldOffset(Offset = "0x230")]
	public GameObject w;

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x37B8D0", Offset = "0x37A4D0", VA = "0x18037B8D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x390780", Offset = "0x38F380", VA = "0x180390780", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x390D00", Offset = "0x38F900", VA = "0x180390D00", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x390850", Offset = "0x38F450", VA = "0x180390850", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x390A90", Offset = "0x38F690", VA = "0x180390A90", Slot = "55")]
	protected override DrownWeapon SetWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x38E4D0", Offset = "0x38D0D0", VA = "0x18038E4D0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x390D40", Offset = "0x38F940", VA = "0x180390D40")]
	public UltimateFootballDrownZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateFootballZombie
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A3")]
public class UltimateFootballZombie : BlackFootballZombie
{
	[Token(Token = "0x40007CD")]
	[FieldOffset(Offset = "0x220")]
	public List<GameObject> flags;

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x36D9D0", Offset = "0x36C5D0", VA = "0x18036D9D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x36D8E0", Offset = "0x36C4E0", VA = "0x18036D8E0", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x36D710", Offset = "0x36C310", VA = "0x18036D710", Slot = "50")]
	protected override void AttackEffect(Plant plant)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x36DA20", Offset = "0x36C620", VA = "0x18036DA20", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x36E160", Offset = "0x36CD60", VA = "0x18036E160", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x36E180", Offset = "0x36CD80", VA = "0x18036E180")]
	public UltimateFootballZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateFume
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000266")]
public class UltimateFume : IceDoomFume
{
	[Token(Token = "0x400073D")]
	[FieldOffset(Offset = "0x1C0")]
	private ParticleSystem particle;

	[Token(Token = "0x400073E")]
	[FieldOffset(Offset = "0x1C8")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x358D30", Offset = "0x357930", VA = "0x180358D30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x358ED0", Offset = "0x357AD0", VA = "0x180358ED0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x358F20", Offset = "0x357B20", VA = "0x180358F20", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x358E10", Offset = "0x357A10", VA = "0x180358E10")]
	private void EnableParticle()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x358DF0", Offset = "0x3579F0", VA = "0x180358DF0")]
	private void DisableParticle()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x358980", Offset = "0x357580", VA = "0x180358980")]
	private void AttackZombie()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x359390", Offset = "0x357F90", VA = "0x180359390")]
	private void TrySetMindControl(Zombie zombie)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x359060", Offset = "0x357C60", VA = "0x180359060")]
	private void SmallDoom(Zombie z)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public UltimateFume()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateGargantuar
using Il2CppDummyDll;

[Token(Token = "0x20002F2")]
public class UltimateGargantuar : SuperGargantuar
{
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x391300", Offset = "0x38FF00", VA = "0x180391300", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x390D50", Offset = "0x38F950", VA = "0x180390D50", Slot = "56")]
	protected override void AnimThrow()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x391040", Offset = "0x38FC40", VA = "0x180391040", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x391160", Offset = "0x38FD60", VA = "0x180391160", Slot = "58")]
	protected override void SetImps()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x379120", Offset = "0x377D20", VA = "0x180379120")]
	public UltimateGargantuar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateGatling
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000267")]
public class UltimateGatling : SuperCherryShooter
{
	[Token(Token = "0x400073F")]
	[FieldOffset(Offset = "0x1C0")]
	public List<Transform> subShoots;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x359670", Offset = "0x358270", VA = "0x180359670", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x359BE0", Offset = "0x3587E0", VA = "0x180359BE0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x359780", Offset = "0x358380", VA = "0x180359780", Slot = "40")]
	protected override Bullet Shoot2()
	{
		return null;
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x359820", Offset = "0x358420", VA = "0x180359820")]
	private void Shoot(Vector2 pos)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x3596C0", Offset = "0x3582C0", VA = "0x1803596C0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x359540", Offset = "0x358140", VA = "0x180359540")]
	private bool CheckAir(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x3599C0", Offset = "0x3585C0", VA = "0x1803599C0")]
	private Zombie TryGetFlyingZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x359D00", Offset = "0x358900", VA = "0x180359D00")]
	public UltimateGatling()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateGatlingBlover
using Il2CppDummyDll;

[Token(Token = "0x20001DD")]
public class UltimateGatlingBlover : Shooter
{
	[Token(Token = "0x40006E3")]
	[FieldOffset(Offset = "0x1C0")]
	private float timer;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x4E2A90", Offset = "0x4E1690", VA = "0x1804E2A90", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x4E2DC0", Offset = "0x4E19C0", VA = "0x1804E2DC0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x4E29B0", Offset = "0x4E15B0", VA = "0x1804E29B0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x4E2850", Offset = "0x4E1450", VA = "0x1804E2850", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x4E2B90", Offset = "0x4E1790", VA = "0x1804E2B90")]
	private void UpdateInterval()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x4E2950", Offset = "0x4E1550", VA = "0x1804E2950", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x4D4A40", Offset = "0x4D3640", VA = "0x1804D4A40")]
	public UltimateGatlingBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateHypno
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000268")]
public class UltimateHypno : Shooter
{
	[Token(Token = "0x4000740")]
	[FieldOffset(Offset = "0x1C0")]
	private int charge1;

	[Token(Token = "0x4000741")]
	[FieldOffset(Offset = "0x1C4")]
	private int charge2;

	[Token(Token = "0x4000742")]
	[FieldOffset(Offset = "0x1C8")]
	public GameObject mag1;

	[Token(Token = "0x4000743")]
	[FieldOffset(Offset = "0x1D0")]
	public GameObject mag2;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x359F40", Offset = "0x358B40", VA = "0x180359F40", Slot = "39")]
	protected override Bullet Shoot1()
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x359DA0", Offset = "0x3589A0", VA = "0x180359DA0", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x35A070", Offset = "0x358C70", VA = "0x18035A070", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x35A0E0", Offset = "0x358CE0", VA = "0x18035A0E0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x359D80", Offset = "0x358980", VA = "0x180359D80", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x35A260", Offset = "0x358E60", VA = "0x18035A260", Slot = "32")]
	public override bool UseItem(BucketType type, Bucket bucket)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x333340", Offset = "0x331F40", VA = "0x180333340")]
	public UltimateHypno()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateJackboxZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F3")]
public class UltimateJackboxZombie : Zombie
{
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x36D9D0", Offset = "0x36C5D0", VA = "0x18036D9D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x391800", Offset = "0x390400", VA = "0x180391800", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x391330", Offset = "0x38FF30", VA = "0x180391330")]
	private void AnimPop()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x391870", Offset = "0x390470", VA = "0x180391870", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x35F920", Offset = "0x35E520", VA = "0x18035F920", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x3718D0", Offset = "0x3704D0", VA = "0x1803718D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x391E50", Offset = "0x390A50", VA = "0x180391E50", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x36E160", Offset = "0x36CD60", VA = "0x18036E160", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public UltimateJackboxZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateJacksonDriver
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A4")]
public class UltimateJacksonDriver : JacksonDriver
{
	[Token(Token = "0x40007CE")]
	[FieldOffset(Offset = "0x230")]
	public Animator jackson;

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x36EB80", Offset = "0x36D780", VA = "0x18036EB80", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x36EC60", Offset = "0x36D860", VA = "0x18036EC60", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x36E840", Offset = "0x36D440", VA = "0x18036E840", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x36E200", Offset = "0x36CE00", VA = "0x18036E200", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x36E160", Offset = "0x36CD60", VA = "0x18036E160", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x36EB40", Offset = "0x36D740", VA = "0x18036EB40", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "32")]
	public override void SetJalaed()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "36")]
	public override void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x35FC90", Offset = "0x35E890", VA = "0x18035FC90")]
	public UltimateJacksonDriver()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateJacksonTurn
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000057")]
public class UltimateJacksonTurn : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[FieldOffset(Offset = "0x20")]
	public Zombie zombie;

	[Token(Token = "0x4000205")]
	[FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000206")]
	[FieldOffset(Offset = "0x30")]
	public bool active;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x430750", Offset = "0x42F350", VA = "0x180430750")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x430940", Offset = "0x42F540", VA = "0x180430940")]
	private void Turn()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x430520", Offset = "0x42F120", VA = "0x180430520")]
	private void AnimSummon()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x4307A0", Offset = "0x42F3A0", VA = "0x1804307A0")]
	private void SummonZombie(float x, int theRow)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public UltimateJacksonTurn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateKelp
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x2000269")]
public class UltimateKelp : SuperKelp
{
	[Token(Token = "0x200026A")]
	[CompilerGenerated]
	private sealed class <Moving>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000744")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000745")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000746")]
		[FieldOffset(Offset = "0x20")]
		public UltimateKelp <>4__this;

		[Token(Token = "0x4000747")]
		[FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Moving>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x357E30", Offset = "0x356A30", VA = "0x180357E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x358120", Offset = "0x356D20", VA = "0x180358120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x35A340", Offset = "0x358F40", VA = "0x18035A340", Slot = "43")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x35A560", Offset = "0x359160", VA = "0x18035A560", Slot = "42")]
	[IteratorStateMachine(typeof(<Moving>d__1))]
	protected override IEnumerator Moving()
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x35A5D0", Offset = "0x3591D0", VA = "0x18035A5D0")]
	public UltimateKelp()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateKirovZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F4")]
public class UltimateKirovZombie : Zombie
{
	[Token(Token = "0x4000865")]
	[FieldOffset(Offset = "0x220")]
	public GameObject weaponPrefab;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x36D9D0", Offset = "0x36C5D0", VA = "0x18036D9D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x392170", Offset = "0x390D70", VA = "0x180392170", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x391ED0", Offset = "0x390AD0", VA = "0x180391ED0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x3928E0", Offset = "0x3914E0", VA = "0x1803928E0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x3928B0", Offset = "0x3914B0", VA = "0x1803928B0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x392260", Offset = "0x390E60", VA = "0x180392260", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x3718D0", Offset = "0x3704D0", VA = "0x1803718D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x3926D0", Offset = "0x3912D0", VA = "0x1803926D0", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x392900", Offset = "0x391500", VA = "0x180392900", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public UltimateKirovZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateLittleFly
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001DE")]
public class UltimateLittleFly : LittleFly
{
	[Token(Token = "0x40006E4")]
	[FieldOffset(Offset = "0x78")]
	private LayerMask layerMask;

	[Token(Token = "0x40006E5")]
	[FieldOffset(Offset = "0x7C")]
	public bool small;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x4E33D0", Offset = "0x4E1FD0", VA = "0x1804E33D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x4E3B40", Offset = "0x4E2740", VA = "0x1804E3B40", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x4E2E50", Offset = "0x4E1A50", VA = "0x1804E2E50", Slot = "7")]
	protected override void AnimShoot()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x4E3370", Offset = "0x4E1F70", VA = "0x1804E3370")]
	private void AttackZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x4E3810", Offset = "0x4E2410", VA = "0x1804E3810", Slot = "6")]
	protected override Zombie GetZombie()
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x4E3500", Offset = "0x4E2100", VA = "0x1804E3500")]
	private Zombie GetFlyingZombie()
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x4E3470", Offset = "0x4E2070", VA = "0x1804E3470")]
	protected bool CheckZombie(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x4E40A0", Offset = "0x4E2CA0", VA = "0x1804E40A0")]
	public UltimateLittleFly()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateMachineNutZombie
using Il2CppDummyDll;

[Token(Token = "0x20002F5")]
public class UltimateMachineNutZombie : SuperMachineNutZombie
{
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x392910", Offset = "0x391510", VA = "0x180392910", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "13")]
	protected override bool Instead(int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public UltimateMachineNutZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateMelon
using Il2CppDummyDll;

[Token(Token = "0x200026B")]
public class UltimateMelon : SuperMelon
{
	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x35AF10", Offset = "0x359B10", VA = "0x18035AF10", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x35B150", Offset = "0x359D50", VA = "0x18035B150", Slot = "29")]
	public override void OnCreate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x35B1D0", Offset = "0x359DD0", VA = "0x18035B1D0", Slot = "28")]
	public override void OnMove(int originalColumn, int originalRow, int newColumn, int newRow)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x35B250", Offset = "0x359E50", VA = "0x18035B250", Slot = "46")]
	protected override void UniqueEffect(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x35A5E0", Offset = "0x3591E0", VA = "0x18035A5E0")]
	private void ExtraShoot()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x35AF20", Offset = "0x359B20", VA = "0x18035AF20")]
	private Plant GetUmbrella()
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public UltimateMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimatePaperZombie
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F6")]
public class UltimatePaperZombie : Zombie
{
	[Token(Token = "0x4000866")]
	[FieldOffset(Offset = "0x220")]
	public Transform shoot2;

	[Token(Token = "0x4000867")]
	[FieldOffset(Offset = "0x228")]
	private bool a;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x392E30", Offset = "0x391A30", VA = "0x180392E30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x35F920", Offset = "0x35E520", VA = "0x18035F920", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x3718D0", Offset = "0x3704D0", VA = "0x1803718D0", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x38E4D0", Offset = "0x38D0D0", VA = "0x18038E4D0", Slot = "15")]
	public override int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x392F00", Offset = "0x391B00", VA = "0x180392F00", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x392D40", Offset = "0x391940", VA = "0x180392D40", Slot = "10")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x392BB0", Offset = "0x3917B0", VA = "0x180392BB0")]
	private void AnimShoot()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x393560", Offset = "0x392160", VA = "0x180393560")]
	private Plant GetTargetPlant()
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x392930", Offset = "0x391530", VA = "0x180392930")]
	private void AnimShoot2()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x392E60", Offset = "0x391A60", VA = "0x180392E60", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x3937E0", Offset = "0x3923E0", VA = "0x1803937E0", Slot = "54")]
	public override void KillByCaltrop()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x393860", Offset = "0x392460", VA = "0x180393860", Slot = "47")]
	protected override void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x393A70", Offset = "0x392670", VA = "0x180393A70", Slot = "16")]
	protected override void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x3930C0", Offset = "0x391CC0", VA = "0x1803930C0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x3934E0", Offset = "0x3920E0", VA = "0x1803934E0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x394100", Offset = "0x392D00", VA = "0x180394100", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x35FCB0", Offset = "0x35E8B0", VA = "0x18035FCB0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x36D9F0", Offset = "0x36C5F0", VA = "0x18036D9F0", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x35FCC0", Offset = "0x35E8C0", VA = "0x18035FCC0", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = false)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x35FF60", Offset = "0x35EB60", VA = "0x18035FF60", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public UltimatePaperZombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimatePumpkin
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001DF")]
public class UltimatePumpkin : SuperPumpkin
{
	[Token(Token = "0x6000920")]
	[Address(RVA = "0x4E4CD0", Offset = "0x4E38D0", VA = "0x1804E4CD0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x4E4D70", Offset = "0x4E3970", VA = "0x1804E4D70")]
	private void Samer()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x4E40B0", Offset = "0x4E2CB0", VA = "0x1804E40B0", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x4E45F0", Offset = "0x4E31F0", VA = "0x1804E45F0", Slot = "40")]
	protected override void CreateFly()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x4E5040", Offset = "0x4E3C40", VA = "0x1804E5040")]
	public void Supplement()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x4E4B90", Offset = "0x4E3790", VA = "0x1804E4B90", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x4E4D20", Offset = "0x4E3920", VA = "0x1804E4D20", Slot = "41")]
	protected override GameObject GetFly()
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x4B5160", Offset = "0x4B3D60", VA = "0x1804B5160")]
	public UltimatePumpkin()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateSpring
using Il2CppDummyDll;

[Token(Token = "0x200026C")]
public class UltimateSpring : MelonFume
{
	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x35B520", Offset = "0x35A120", VA = "0x18035B520", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x35B530", Offset = "0x35A130", VA = "0x18035B530", Slot = "46")]
	protected override void UniqueEffect(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x35B490", Offset = "0x35A090", VA = "0x18035B490", Slot = "43")]
	protected override bool CheckRange(Zombie zombie)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public UltimateSpring()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateStar
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200026D")]
public class UltimateStar : StarFruit
{
	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x35B5E0", Offset = "0x35A1E0", VA = "0x18035B5E0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x35BB00", Offset = "0x35A700", VA = "0x18035BB00", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x35B930", Offset = "0x35A530", VA = "0x18035B930", Slot = "42")]
	protected override void SetBullet(Transform _transform, int theMovingWay)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x35B730", Offset = "0x35A330", VA = "0x18035B730", Slot = "17")]
	protected override GameObject SearchZombie()
	{
		return null;
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x35B630", Offset = "0x35A230", VA = "0x18035B630", Slot = "18")]
	protected override void PlantShootUpdate()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x34CB10", Offset = "0x34B710", VA = "0x18034CB10")]
	public UltimateStar()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateStarBlover
using Il2CppDummyDll;

[Token(Token = "0x20001E1")]
public class UltimateStarBlover : StarBlover
{
	[Token(Token = "0x600092B")]
	[Address(RVA = "0x4E5440", Offset = "0x4E4040", VA = "0x1804E5440", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x4E54A0", Offset = "0x4E40A0", VA = "0x1804E54A0", Slot = "41")]
	protected override void SetAccelerateTime()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x4E5680", Offset = "0x4E4280", VA = "0x1804E5680", Slot = "42")]
	protected override void StarsUpdate()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x4DB4C0", Offset = "0x4DA0C0", VA = "0x1804DB4C0")]
	public UltimateStarBlover()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateTallNut
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x20001E2")]
public class UltimateTallNut : TallNutFootball
{
	[Token(Token = "0x600092F")]
	[Address(RVA = "0x4CB490", Offset = "0x4CA090", VA = "0x1804CB490", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x4CB520", Offset = "0x4CA120", VA = "0x1804CB520", Slot = "9")]
	protected override void AttributeEvent()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x4E5D60", Offset = "0x4E4960", VA = "0x1804E5D60", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x363B40", Offset = "0x362740", VA = "0x180363B40", Slot = "14")]
	protected override bool Instead(int theDamage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x4E5840", Offset = "0x4E4440", VA = "0x1804E5840")]
	private List<Plant> GetUltimateTallNuts()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public UltimateTallNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UltimateTorch
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001E4")]
public class UltimateTorch : SquashTorch
{
	[Token(Token = "0x40006EC")]
	[FieldOffset(Offset = "0x1C0")]
	private int maxFireTimes;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x4E6420", Offset = "0x4E5020", VA = "0x1804E6420", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x4E6470", Offset = "0x4E5070", VA = "0x1804E6470", Slot = "39")]
	protected override void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x4E6740", Offset = "0x4E5340", VA = "0x1804E6740", Slot = "40")]
	protected override bool SummonPlant(int dmg = 300)
	{
		return default(bool);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x4E63E0", Offset = "0x4E4FE0", VA = "0x1804E63E0", Slot = "26")]
	protected override void DieEvent(DieReason reason = DieReason.Default)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x4E6A80", Offset = "0x4E5680", VA = "0x1804E6A80")]
	public UltimateTorch()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Umbrellaleaf
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine.Rendering;

[Token(Token = "0x20001E5")]
public class Umbrellaleaf : Plant
{
	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <DelayBlock>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EF")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F0")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F1")]
		[FieldOffset(Offset = "0x20")]
		public Bullet bullet;

		[Token(Token = "0x40006F2")]
		[FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DelayBlock>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x4E09E0", Offset = "0x4DF5E0", VA = "0x1804E09E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x4E0B20", Offset = "0x4DF720", VA = "0x1804E0B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006ED")]
	[FieldOffset(Offset = "0x1B8")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x40006EE")]
	[FieldOffset(Offset = "0x1C0")]
	public bool blocking;

	[Token(Token = "0x17000045")]
	public Plant UmbrellaPot
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x4E6E20", Offset = "0x4E5A20", VA = "0x1804E6E20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x4E6C50", Offset = "0x4E5850", VA = "0x1804E6C50", Slot = "39")]
	public virtual void Block(Bullet bullet)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x4E6AB0", Offset = "0x4E56B0", VA = "0x1804E6AB0")]
	public void BlockBungi(BungiZombie bungi)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x4E6DB0", Offset = "0x4E59B0", VA = "0x1804E6DB0")]
	[IteratorStateMachine(typeof(<DelayBlock>d__6))]
	protected IEnumerator DelayBlock(Bullet bullet)
	{
		return null;
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x4E6BE0", Offset = "0x4E57E0", VA = "0x1804E6BE0")]
	private void BlockStart()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x4E6B70", Offset = "0x4E5770", VA = "0x1804E6B70")]
	private void BlockOver()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x4E6AA0", Offset = "0x4E56A0", VA = "0x1804E6AA0")]
	private void AllBlockOver()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Umbrellaleaf()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UnitySourceGeneratedAssemblyMonoScriptTypes_v1
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;

[Token(Token = "0x20003DF")]
[CompilerGenerated]
[EditorBrowsable(EditorBrowsableState.Never)]
[GeneratedCode("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", null)]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1
{
	[Token(Token = "0x20003E0")]
	private struct MonoScriptData
	{
		[Token(Token = "0x40010C4")]
		[FieldOffset(Offset = "0x0")]
		public byte[] FilePathsData;

		[Token(Token = "0x40010C5")]
		[FieldOffset(Offset = "0x8")]
		public byte[] TypesData;

		[Token(Token = "0x40010C6")]
		[FieldOffset(Offset = "0x10")]
		public int TotalTypes;

		[Token(Token = "0x40010C7")]
		[FieldOffset(Offset = "0x14")]
		public int TotalFiles;

		[Token(Token = "0x40010C8")]
		[FieldOffset(Offset = "0x18")]
		public bool IsEditorOnly;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x4484E0", Offset = "0x4470E0", VA = "0x1804484E0")]
	private static MonoScriptData Get()
	{
		return default(MonoScriptData);
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public UnitySourceGeneratedAssemblyMonoScriptTypes_v1()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// UseablePlantTypeInPvP
using System.Collections.Generic;
using Il2CppDummyDll;

[Token(Token = "0x200006F")]
public static class UseablePlantTypeInPvP
{
	[Token(Token = "0x4000241")]
	[FieldOffset(Offset = "0x0")]
	private static List<PlantType> plantTypes;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x430A30", Offset = "0x42F630", VA = "0x180430A30")]
	public static List<PlantType> GetPlantTypes()
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x430A90", Offset = "0x42F690", VA = "0x180430A90")]
	public static void UpdatePlantTypes()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// WallNut
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20001E7")]
public class WallNut : Plant
{
	[Token(Token = "0x600094D")]
	[Address(RVA = "0x4E6FB0", Offset = "0x4E5BB0", VA = "0x1804E6FB0", Slot = "5")]
	protected override void FirstMeet()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x33D060", Offset = "0x33BC60", VA = "0x18033D060", Slot = "12")]
	public override void TakeDamage(int damage, int damageType = 0)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x4E7170", Offset = "0x4E5D70", VA = "0x1804E7170", Slot = "24")]
	protected override void ReplaceSprite()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x4E7030", Offset = "0x4E5C30", VA = "0x1804E7030", Slot = "39")]
	protected virtual void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x4BC6B0", Offset = "0x4BB2B0", VA = "0x1804BC6B0", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public WallNut()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// WallNutZ
using Il2CppDummyDll;

[Token(Token = "0x20002A5")]
public class WallNutZ : ArmorZombie
{
	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x36ECC0", Offset = "0x36D8C0", VA = "0x18036ECC0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x3605A0", Offset = "0x35F1A0", VA = "0x1803605A0", Slot = "46")]
	protected override int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public WallNutZ()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// WarningBtn
using Il2CppDummyDll;

[Token(Token = "0x200038F")]
public class WarningBtn : UIBtn
{
	[Token(Token = "0x4000C66")]
	[FieldOffset(Offset = "0x60")]
	public bool confirm;

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x3F3730", Offset = "0x3F2330", VA = "0x1803F3730", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public WarningBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// WaterSplashCtrl
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000008")]
public class WaterSplashCtrl : MonoBehaviour
{
	[Token(Token = "0x6000016")]
	[Address(RVA = "0x31E240", Offset = "0x31CE40", VA = "0x18031E240")]
	private void Die()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public WaterSplashCtrl()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Wheat
using Il2CppDummyDll;

[Token(Token = "0x20001E8")]
public class Wheat : Plant
{
	[Token(Token = "0x40006F3")]
	[FieldOffset(Offset = "0x1B8")]
	public bool recover;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x4E7480", Offset = "0x4E6080", VA = "0x1804E7480", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x48CB00", Offset = "0x48B700", VA = "0x18048CB00")]
	public Wheat()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// WinterMelon
using Il2CppDummyDll;

[Token(Token = "0x200026E")]
public class WinterMelon : Melonpult
{
	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x35BB60", Offset = "0x35A760", VA = "0x18035BB60", Slot = "41")]
	protected override BulletType GetBulletType()
	{
		return default(BulletType);
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x334800", Offset = "0x333400", VA = "0x180334800")]
	public WinterMelon()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Zombie
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.Rendering;

[Token(Token = "0x20002FE")]
public class Zombie : Entity
{
	[Token(Token = "0x20002FF")]
	public enum ZombieColor
	{
		[Token(Token = "0x4000914")]
		Default,
		[Token(Token = "0x4000915")]
		Cold,
		[Token(Token = "0x4000916")]
		MindConrolled,
		[Token(Token = "0x4000917")]
		Jalaed,
		[Token(Token = "0x4000918")]
		Doom,
		[Token(Token = "0x4000919")]
		Poison,
		[Token(Token = "0x400091A")]
		Poison_with_cold,
		[Token(Token = "0x400091B")]
		Ember,
		[Token(Token = "0x400091C")]
		Jala_with_ember,
		[Token(Token = "0x400091D")]
		Gold
	}

	[Token(Token = "0x2000300")]
	public enum KnockBackReason
	{
		[Token(Token = "0x400091F")]
		ByUmbrella,
		[Token(Token = "0x4000920")]
		ByIronPea,
		[Token(Token = "0x4000921")]
		ByJalapeno,
		[Token(Token = "0x4000922")]
		ByTangleKelp
	}

	[Token(Token = "0x2000301")]
	public enum FirstArmorType
	{
		[Token(Token = "0x4000924")]
		Nothing,
		[Token(Token = "0x4000925")]
		Cone,
		[Token(Token = "0x4000926")]
		Bucket,
		[Token(Token = "0x4000927")]
		Doll,
		[Token(Token = "0x4000928")]
		FootballHelmet,
		[Token(Token = "0x4000929")]
		WallNut,
		[Token(Token = "0x400092A")]
		TallNut,
		[Token(Token = "0x400092B")]
		TallNutFootball,
		[Token(Token = "0x400092C")]
		BucketNut,
		[Token(Token = "0x400092D")]
		Balloon,
		[Token(Token = "0x400092E")]
		IronBalloon
	}

	[Token(Token = "0x2000302")]
	public enum SecondArmorType
	{
		[Token(Token = "0x4000930")]
		Nothing,
		[Token(Token = "0x4000931")]
		Door,
		[Token(Token = "0x4000932")]
		Paper,
		[Token(Token = "0x4000933")]
		Ladder,
		[Token(Token = "0x4000934")]
		SnowShield,
		[Token(Token = "0x4000935")]
		Protal
	}

	[Token(Token = "0x2000303")]
	public enum UniqueItemType
	{
		[Token(Token = "0x4000937")]
		Nothing,
		[Token(Token = "0x4000938")]
		Jackbox,
		[Token(Token = "0x4000939")]
		Jumper,
		[Token(Token = "0x400093A")]
		Pickaxe,
		[Token(Token = "0x400093B")]
		IronHead,
		[Token(Token = "0x400093C")]
		RedIronHead
	}

	[Token(Token = "0x2000305")]
	[CompilerGenerated]
	private sealed class <DeLayGarliced>d__184 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000943")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000944")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000945")]
		[FieldOffset(Offset = "0x20")]
		public float during;

		[Token(Token = "0x4000946")]
		[FieldOffset(Offset = "0x28")]
		public Zombie <>4__this;

		[Token(Token = "0x4000947")]
		[FieldOffset(Offset = "0x30")]
		public bool playSound;

		[Token(Token = "0x4000948")]
		[FieldOffset(Offset = "0x31")]
		public bool certainRow;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DeLayGarliced>d__184(int <>1__state)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x3BB570", Offset = "0x3BA170", VA = "0x1803BB570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x3BB640", Offset = "0x3BA240", VA = "0x1803BB640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000306")]
	[CompilerGenerated]
	private sealed class <DecreaseTransparent>d__150 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000949")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094A")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400094B")]
		[FieldOffset(Offset = "0x20")]
		public Zombie <>4__this;

		[Token(Token = "0x400094C")]
		[FieldOffset(Offset = "0x28")]
		private Material <material>5__2;

		[Token(Token = "0x400094D")]
		[FieldOffset(Offset = "0x30")]
		private float <i>5__3;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <DecreaseTransparent>d__150(int <>1__state)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x3BB680", Offset = "0x3BA280", VA = "0x1803BB680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x3BB9B0", Offset = "0x3BA5B0", VA = "0x1803BB9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000307")]
	[CompilerGenerated]
	private sealed class <MoveRow>d__120 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094E")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094F")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000950")]
		[FieldOffset(Offset = "0x20")]
		public Zombie <>4__this;

		[Token(Token = "0x4000951")]
		[FieldOffset(Offset = "0x28")]
		public int theTargetRow;

		[Token(Token = "0x4000952")]
		[FieldOffset(Offset = "0x2C")]
		public int theCurrentRow;

		[Token(Token = "0x4000953")]
		[FieldOffset(Offset = "0x30")]
		public float baseDuringTime;

		[Token(Token = "0x4000954")]
		[FieldOffset(Offset = "0x34")]
		private int <theNextRow>5__2;

		[Token(Token = "0x4000955")]
		[FieldOffset(Offset = "0x38")]
		private float <startY>5__3;

		[Token(Token = "0x4000956")]
		[FieldOffset(Offset = "0x3C")]
		private float <startX>5__4;

		[Token(Token = "0x4000957")]
		[FieldOffset(Offset = "0x40")]
		private float <newY>5__5;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveRow>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x3BBE50", Offset = "0x3BAA50", VA = "0x1803BBE50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x3BC500", Offset = "0x3BB100", VA = "0x1803BC500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[CompilerGenerated]
	private sealed class <MoveRowByGarlic>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000958")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000959")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095A")]
		[FieldOffset(Offset = "0x20")]
		public int theTargetRow;

		[Token(Token = "0x400095B")]
		[FieldOffset(Offset = "0x28")]
		public Zombie <>4__this;

		[Token(Token = "0x400095C")]
		[FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x400095D")]
		[FieldOffset(Offset = "0x34")]
		private int <theNextRow>5__2;

		[Token(Token = "0x400095E")]
		[FieldOffset(Offset = "0x38")]
		private float <startY>5__3;

		[Token(Token = "0x400095F")]
		[FieldOffset(Offset = "0x3C")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x4000960")]
		[FieldOffset(Offset = "0x40")]
		private float <duringTime>5__5;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <MoveRowByGarlic>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x3BB9F0", Offset = "0x3BA5F0", VA = "0x1803BB9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x3BBE10", Offset = "0x3BAA10", VA = "0x1803BBE10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AA")]
	[FieldOffset(Offset = "0x48")]
	public FirstArmorType theFirstArmorType;

	[Token(Token = "0x40008AB")]
	[FieldOffset(Offset = "0x4C")]
	public SecondArmorType theSecondArmorType;

	[Token(Token = "0x40008AC")]
	[FieldOffset(Offset = "0x50")]
	public UniqueItemType theUniqueItemType;

	[Token(Token = "0x40008AD")]
	[FieldOffset(Offset = "0x54")]
	public ZombieStatus theStatus;

	[Token(Token = "0x40008AE")]
	[FieldOffset(Offset = "0x58")]
	public Towards towards;

	[Token(Token = "0x40008AF")]
	[FieldOffset(Offset = "0x60")]
	public GameObject theFirstArmor;

	[Token(Token = "0x40008B0")]
	[FieldOffset(Offset = "0x68")]
	public GameObject theSecondArmor;

	[Token(Token = "0x40008B1")]
	[FieldOffset(Offset = "0x70")]
	public List<GameObject> theUniqueItems;

	[Token(Token = "0x40008B2")]
	[FieldOffset(Offset = "0x78")]
	public SpriteRenderer headGarlic;

	[Token(Token = "0x40008B3")]
	[FieldOffset(Offset = "0x80")]
	public SpriteRenderer jawGarlic;

	[Token(Token = "0x40008B4")]
	[FieldOffset(Offset = "0x88")]
	public float theHealth;

	[Token(Token = "0x40008B5")]
	[FieldOffset(Offset = "0x8C")]
	public int theMaxHealth;

	[Token(Token = "0x40008B6")]
	[FieldOffset(Offset = "0x90")]
	public int theFirstArmorHealth;

	[Token(Token = "0x40008B7")]
	[FieldOffset(Offset = "0x94")]
	public int theFirstArmorMaxHealth;

	[Token(Token = "0x40008B8")]
	[FieldOffset(Offset = "0x98")]
	public int theSecondArmorHealth;

	[Token(Token = "0x40008B9")]
	[FieldOffset(Offset = "0x9C")]
	public int theSecondArmorMaxHealth;

	[Token(Token = "0x40008BA")]
	[FieldOffset(Offset = "0xA0")]
	public int theAttackDamage;

	[Token(Token = "0x40008BB")]
	[FieldOffset(Offset = "0xA8")]
	public GameObject theAttackTarget;

	[Token(Token = "0x40008BC")]
	[FieldOffset(Offset = "0xB0")]
	public Transform shoot;

	[Token(Token = "0x40008BD")]
	[FieldOffset(Offset = "0xB8")]
	public GameObject accurateHeart;

	[Token(Token = "0x40008BE")]
	[FieldOffset(Offset = "0xC0")]
	public Rigidbody2D rb;

	[Token(Token = "0x40008BF")]
	[FieldOffset(Offset = "0xC8")]
	public Collider2D col;

	[Token(Token = "0x40008C0")]
	[FieldOffset(Offset = "0xD0")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x40008C1")]
	[FieldOffset(Offset = "0xD8")]
	public ZombieType theZombieType;

	[Token(Token = "0x40008C2")]
	[FieldOffset(Offset = "0xDC")]
	public int theZombieRow;

	[Token(Token = "0x40008C3")]
	[FieldOffset(Offset = "0xE0")]
	public int freezeLevel;

	[Token(Token = "0x40008C4")]
	[FieldOffset(Offset = "0xE4")]
	public int poisonLevel;

	[Token(Token = "0x40008C5")]
	[FieldOffset(Offset = "0xE8")]
	public int statusLevel;

	[Token(Token = "0x40008C6")]
	[FieldOffset(Offset = "0xEC")]
	public float theSpeed;

	[Token(Token = "0x40008C7")]
	[FieldOffset(Offset = "0xF0")]
	public float theOriginSpeed;

	[Token(Token = "0x40008C8")]
	[FieldOffset(Offset = "0xF4")]
	public float freezeSpeed;

	[Token(Token = "0x40008C9")]
	[FieldOffset(Offset = "0xF8")]
	public float coldSpeed;

	[Token(Token = "0x40008CA")]
	[FieldOffset(Offset = "0xFC")]
	public float butterSpeed;

	[Token(Token = "0x40008CB")]
	[FieldOffset(Offset = "0x100")]
	public float garlicSpeed;

	[Token(Token = "0x40008CC")]
	[FieldOffset(Offset = "0x104")]
	public float uniqueSpeed;

	[Token(Token = "0x40008CD")]
	[FieldOffset(Offset = "0x108")]
	public float holeSpeed;

	[Token(Token = "0x40008CE")]
	[FieldOffset(Offset = "0x10C")]
	public float grapSpeed;

	[Token(Token = "0x40008CF")]
	[FieldOffset(Offset = "0x110")]
	public float theFreezeCountDown;

	[Token(Token = "0x40008D0")]
	[FieldOffset(Offset = "0x114")]
	public float theSlowCountDown;

	[Token(Token = "0x40008D1")]
	[FieldOffset(Offset = "0x118")]
	public float theButterCountDown;

	[Token(Token = "0x40008D2")]
	[FieldOffset(Offset = "0x11C")]
	public float thePoisonCountDown;

	[Token(Token = "0x40008D3")]
	[FieldOffset(Offset = "0x120")]
	public float attributeCountDown;

	[Token(Token = "0x40008D4")]
	[FieldOffset(Offset = "0x124")]
	public float portaledTimer;

	[Token(Token = "0x40008D5")]
	[FieldOffset(Offset = "0x128")]
	public float protaledTotalTimer;

	[Token(Token = "0x40008D6")]
	[FieldOffset(Offset = "0x12C")]
	public float existTime;

	[Token(Token = "0x40008D7")]
	[FieldOffset(Offset = "0x130")]
	public float ladderTime;

	[Token(Token = "0x40008D8")]
	[FieldOffset(Offset = "0x134")]
	public bool inWater;

	[Token(Token = "0x40008D9")]
	[FieldOffset(Offset = "0x135")]
	public bool isStopped;

	[Token(Token = "0x40008DA")]
	[FieldOffset(Offset = "0x136")]
	public bool isMindControlled;

	[Token(Token = "0x40008DB")]
	[FieldOffset(Offset = "0x137")]
	public bool isChangingRow;

	[Token(Token = "0x40008DC")]
	[FieldOffset(Offset = "0x138")]
	public bool isMoving;

	[Token(Token = "0x40008DD")]
	[FieldOffset(Offset = "0x139")]
	public bool isAttacking;

	[Token(Token = "0x40008DE")]
	[FieldOffset(Offset = "0x13A")]
	public bool isJalaed;

	[Token(Token = "0x40008DF")]
	[FieldOffset(Offset = "0x13B")]
	public bool isPortaled;

	[Token(Token = "0x40008E0")]
	[FieldOffset(Offset = "0x13C")]
	public bool isEmbered;

	[Token(Token = "0x40008E1")]
	[FieldOffset(Offset = "0x13D")]
	public bool isDoom;

	[Token(Token = "0x40008E2")]
	[FieldOffset(Offset = "0x13E")]
	public bool isSmall;

	[Token(Token = "0x40008E3")]
	[FieldOffset(Offset = "0x13F")]
	public bool doomWithPit;

	[Token(Token = "0x40008E4")]
	[FieldOffset(Offset = "0x140")]
	public bool beforeDying;

	[Token(Token = "0x40008E5")]
	[FieldOffset(Offset = "0x141")]
	public bool isSplited;

	[Token(Token = "0x40008E6")]
	[FieldOffset(Offset = "0x142")]
	public bool isGold;

	[Token(Token = "0x40008E7")]
	[FieldOffset(Offset = "0x148")]
	public bool[] controlledLevel;

	[Token(Token = "0x40008E8")]
	[FieldOffset(Offset = "0x150")]
	public bool isBlowed;

	[Token(Token = "0x40008E9")]
	[FieldOffset(Offset = "0x151")]
	public bool isPreview;

	[Token(Token = "0x40008EA")]
	[FieldOffset(Offset = "0x154")]
	public int awardLevel;

	[Token(Token = "0x40008EB")]
	[FieldOffset(Offset = "0x158")]
	public TextMeshPro healthText;

	[Token(Token = "0x40008EC")]
	[FieldOffset(Offset = "0x160")]
	public TextMeshPro healthTextShadow;

	[Token(Token = "0x40008ED")]
	[FieldOffset(Offset = "0x168")]
	public Coroutine changeRow;

	[Token(Token = "0x40008EE")]
	[FieldOffset(Offset = "0x170")]
	public Zombie pre;

	[Token(Token = "0x40008EF")]
	[FieldOffset(Offset = "0x178")]
	public Zombie next;

	[Token(Token = "0x40008F0")]
	[FieldOffset(Offset = "0x180")]
	protected LayerMask plantLayer;

	[Token(Token = "0x40008F1")]
	[FieldOffset(Offset = "0x184")]
	protected LayerMask zombieLayer;

	[Token(Token = "0x40008F2")]
	[FieldOffset(Offset = "0x188")]
	protected LayerMask zombieLayer2;

	[Token(Token = "0x40008F3")]
	[FieldOffset(Offset = "0x18C")]
	protected float flashTime;

	[Token(Token = "0x40008F4")]
	[FieldOffset(Offset = "0x190")]
	protected bool loseHand;

	[Token(Token = "0x40008F5")]
	[FieldOffset(Offset = "0x194")]
	protected int theFirstArmorBroken;

	[Token(Token = "0x40008F6")]
	[FieldOffset(Offset = "0x198")]
	protected int theSecondArmorBroken;

	[Token(Token = "0x40008F7")]
	[FieldOffset(Offset = "0x19C")]
	protected int theTargetRow;

	[Token(Token = "0x40008F8")]
	[FieldOffset(Offset = "0x1A0")]
	protected int takeDamageTimes;

	[Token(Token = "0x40008F9")]
	[FieldOffset(Offset = "0x1A4")]
	protected float vx;

	[Token(Token = "0x40008FA")]
	[FieldOffset(Offset = "0x1A8")]
	protected float vy;

	[Token(Token = "0x40008FB")]
	[FieldOffset(Offset = "0x1AC")]
	protected readonly float dy;

	[Token(Token = "0x40008FC")]
	[FieldOffset(Offset = "0x1B0")]
	private Sprite headOriginalSprite;

	[Token(Token = "0x40008FD")]
	[FieldOffset(Offset = "0x1B8")]
	private Material flashMaterial;

	[Token(Token = "0x40008FE")]
	[FieldOffset(Offset = "0x1C0")]
	private GameObject iceTrap;

	[Token(Token = "0x40008FF")]
	[FieldOffset(Offset = "0x1C8")]
	private GameObject grap;

	[Token(Token = "0x4000900")]
	[FieldOffset(Offset = "0x1D0")]
	private GameObject butter;

	[Token(Token = "0x4000901")]
	[FieldOffset(Offset = "0x1D8")]
	private GameObject butterHead;

	[Token(Token = "0x4000902")]
	[FieldOffset(Offset = "0x1E0")]
	private GameObject portalGlow;

	[Token(Token = "0x4000903")]
	[FieldOffset(Offset = "0x1E8")]
	private Vector2 lastLadder;

	[Token(Token = "0x4000904")]
	[FieldOffset(Offset = "0x1F0")]
	private int freezeMaxLevel;

	[Token(Token = "0x4000905")]
	[FieldOffset(Offset = "0x1F4")]
	private int dieReason;

	[Token(Token = "0x4000906")]
	[FieldOffset(Offset = "0x1F8")]
	private int grapTimes;

	[Token(Token = "0x4000907")]
	[FieldOffset(Offset = "0x1FC")]
	protected float deadRight;

	[Token(Token = "0x4000908")]
	[FieldOffset(Offset = "0x200")]
	protected float deadLeft;

	[Token(Token = "0x4000909")]
	[FieldOffset(Offset = "0x204")]
	private float poisonDamageTime;

	[Token(Token = "0x400090A")]
	[FieldOffset(Offset = "0x208")]
	protected float lastTakeDamageDuring;

	[Token(Token = "0x400090B")]
	[FieldOffset(Offset = "0x20C")]
	private readonly float poisonDamageMaxTime;

	[Token(Token = "0x400090C")]
	[FieldOffset(Offset = "0x210")]
	private bool droppedSun;

	[Token(Token = "0x400090D")]
	[FieldOffset(Offset = "0x211")]
	private bool eatGarlic;

	[Token(Token = "0x400090E")]
	[FieldOffset(Offset = "0x212")]
	protected bool revived;

	[Token(Token = "0x400090F")]
	[FieldOffset(Offset = "0x218")]
	public List<Transform> changeSprites;

	[Token(Token = "0x4000910")]
	protected const int butterLayer = 40;

	[Token(Token = "0x4000911")]
	protected const int kelpLayer = 39;

	[Token(Token = "0x4000912")]
	protected const int iceLayer = 38;

	[Token(Token = "0x17000067")]
	public Vector2 Velocity
	{
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x3A9170", Offset = "0x3A7D70", VA = "0x1803A9170")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000068")]
	public Vector2 ColliderPosition
	{
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x3A9120", Offset = "0x3A7D20", VA = "0x1803A9120")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x39B8D0", Offset = "0x39A4D0", VA = "0x18039B8D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x3A6EE0", Offset = "0x3A5AE0", VA = "0x1803A6EE0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x3A8B50", Offset = "0x3A7750", VA = "0x1803A8B50", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x3A1600", Offset = "0x3A0200", VA = "0x1803A1600", Slot = "7")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x3A3210", Offset = "0x3A1E10", VA = "0x1803A3210", Slot = "8")]
	protected virtual void MoveUpdate()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x3A40C0", Offset = "0x3A2CC0", VA = "0x1803A40C0", Slot = "9")]
	protected virtual void PositionUpdate()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x3A2F00", Offset = "0x3A1B00", VA = "0x1803A2F00")]
	protected void LadderPositionUpdate()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x39B860", Offset = "0x39A460", VA = "0x18039B860")]
	private void AttributeUpdate()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "10")]
	protected virtual void AttributeEvent()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x3A3420", Offset = "0x3A2020", VA = "0x1803A3420")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x3A4030", Offset = "0x3A2C30", VA = "0x1803A4030")]
	private void PoisonUpdate()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x39CD90", Offset = "0x39B990", VA = "0x18039CD90")]
	public void ChangeRowNotMove(int theTargetRow, float duringTime = 8f)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x39CCB0", Offset = "0x39B8B0", VA = "0x18039CCB0")]
	protected void ChangeRowAndMove(int theTargetRow, float time = 1f)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x3A2FA0", Offset = "0x3A1BA0", VA = "0x1803A2FA0")]
	[IteratorStateMachine(typeof(<MoveRowByGarlic>d__118))]
	private IEnumerator MoveRowByGarlic(int theTargetRow, float time)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x3A69B0", Offset = "0x3A55B0", VA = "0x1803A69B0")]
	private void SetRowLayer(int theRow)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x3A3030", Offset = "0x3A1C30", VA = "0x1803A3030")]
	[IteratorStateMachine(typeof(<MoveRow>d__120))]
	private IEnumerator MoveRow(int theTargetRow, int theCurrentRow, float baseDuringTime)
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x3A30D0", Offset = "0x3A1CD0", VA = "0x1803A30D0")]
	protected void MoveSpawnedZombieToTargetRow(GameObject zombie, int theTargetRow)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x39DCC0", Offset = "0x39C8C0", VA = "0x18039DCC0", Slot = "11")]
	public virtual void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x3A4540", Offset = "0x3A3140", VA = "0x1803A4540")]
	private void RemoveFromLink()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x3A05E0", Offset = "0x39F1E0", VA = "0x1803A05E0")]
	private void EmberExplode()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x3A29F0", Offset = "0x3A15F0", VA = "0x1803A29F0")]
	public void JalaedExplode(bool jala = true, int damage = 100)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x39EFD0", Offset = "0x39DBD0", VA = "0x18039EFD0")]
	private void DropGardenPlant()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "12")]
	protected virtual void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x3A2840", Offset = "0x3A1440", VA = "0x1803A2840", Slot = "13")]
	protected virtual bool Instead(int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x3A7180", Offset = "0x3A5D80", VA = "0x1803A7180", Slot = "14")]
	public virtual void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x3A1F60", Offset = "0x3A0B60", VA = "0x1803A1F60", Slot = "15")]
	public virtual int GetDamage(int theDamage, bool fix)
	{
		return default(int);
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x39D700", Offset = "0x39C300", VA = "0x18039D700")]
	private void DecreaseDamageByBoss(ref float damage)
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x39D0C0", Offset = "0x39BCC0", VA = "0x18039D0C0")]
	private bool CheckExist(ZombieType zombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "16")]
	protected virtual void SecondArmorFall()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x3A0920", Offset = "0x39F520", VA = "0x1803A0920")]
	private void FindAndDestoryZombieHand(GameObject obj)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x3A0BA0", Offset = "0x39F7A0", VA = "0x1803A0BA0")]
	private void FindAndDestoryZombieHead(GameObject obj)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x39B060", Offset = "0x399C60", VA = "0x18039B060", Slot = "17")]
	protected virtual void AnimLoseActive(Transform obj)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x3A0E50", Offset = "0x39FA50", VA = "0x1803A0E50")]
	private void FindAndReplaceArmUpperSprite(GameObject obj)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x39CBC0", Offset = "0x39B7C0", VA = "0x18039CBC0", Slot = "18")]
	protected virtual void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x3A10D0", Offset = "0x39FCD0", VA = "0x1803A10D0")]
	private GameObject FindJaw(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x39C1A0", Offset = "0x39ADA0", VA = "0x18039C1A0", Slot = "19")]
	protected virtual void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "20")]
	protected virtual void LoseHeadEvent()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x3A1760", Offset = "0x3A0360", VA = "0x1803A1760")]
	protected void FlashUpdate()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x3A49F0", Offset = "0x3A35F0", VA = "0x1803A49F0")]
	protected void SetBrightness(float b)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x3A35A0", Offset = "0x3A21A0", VA = "0x1803A35A0", Slot = "21")]
	protected virtual void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x3A34C0", Offset = "0x3A20C0", VA = "0x1803A34C0", Slot = "22")]
	protected virtual void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x3A2530", Offset = "0x3A1130", VA = "0x1803A2530", Slot = "23")]
	protected virtual bool GetLadder(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x39CB50", Offset = "0x39B750", VA = "0x18039CB50", Slot = "24")]
	protected virtual void CancelAttack()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x3A3FC0", Offset = "0x3A2BC0", VA = "0x1803A3FC0", Slot = "25")]
	public virtual void PlayFallSound()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x39DC40", Offset = "0x39C840", VA = "0x18039DC40", Slot = "26")]
	public virtual void DestoryZombie()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x39DBD0", Offset = "0x39C7D0", VA = "0x18039DBD0")]
	[IteratorStateMachine(typeof(<DecreaseTransparent>d__150))]
	private IEnumerator DecreaseTransparent()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x3A39E0", Offset = "0x3A25E0", VA = "0x1803A39E0", Slot = "27")]
	public virtual void PlayEatSound()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x39CEA0", Offset = "0x39BAA0", VA = "0x18039CEA0")]
	public void ChangeStatus(ZombieStatus targetStatus)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x39B350", Offset = "0x399F50", VA = "0x18039B350")]
	private void AttackBrain(IZEBrains brain)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x39B780", Offset = "0x39A380", VA = "0x18039B780")]
	private void AttackZombie(Zombie zombie)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x39F300", Offset = "0x39DF00", VA = "0x18039F300")]
	protected void DropItem()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x39F5B0", Offset = "0x39E1B0", VA = "0x18039F5B0")]
	private void DropKilledAward()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x3A7CA0", Offset = "0x3A68A0", VA = "0x1803A7CA0")]
	protected bool TryDropAward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x3A6A40", Offset = "0x3A5640", VA = "0x1803A6A40")]
	private void ShootingDropSun()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x3A76B0", Offset = "0x3A62B0", VA = "0x1803A76B0")]
	private void TowerDropSun()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x39E7E0", Offset = "0x39D3E0", VA = "0x18039E7E0", Slot = "28")]
	protected virtual void DropAward()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x39F930", Offset = "0x39E530", VA = "0x18039F930")]
	private void DropWheat()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x39EB20", Offset = "0x39D720", VA = "0x18039EB20")]
	private void DropCard()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x39CEB0", Offset = "0x39BAB0", VA = "0x18039CEB0", Slot = "29")]
	public virtual void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x3A4BD0", Offset = "0x3A37D0", VA = "0x1803A4BD0")]
	private void SetCarred()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x3A0840", Offset = "0x39F440", VA = "0x1803A0840")]
	private bool ExistAnim()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x3A60C0", Offset = "0x3A4CC0", VA = "0x1803A60C0", Slot = "30")]
	public virtual void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x3A5F80", Offset = "0x3A4B80", VA = "0x1803A5F80")]
	private void SetLayerMask()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x39AEF0", Offset = "0x399AF0", VA = "0x18039AEF0")]
	public void AdjustPosition(GameObject zombie, Vector3 position)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x3A52D0", Offset = "0x3A3ED0", VA = "0x1803A52D0")]
	public void SetColor(ZombieColor colorType)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x3A2620", Offset = "0x3A1220", VA = "0x1803A2620")]
	private Color GetMixColor(Color color1, Color color2)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x3A1E10", Offset = "0x3A0A10", VA = "0x1803A1E10")]
	private Color GetColor(ZombieColor colorType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x39AE90", Offset = "0x399A90", VA = "0x18039AE90")]
	public void AddfreezeLevel(int level)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x3A6790", Offset = "0x3A5390", VA = "0x1803A6790", Slot = "31")]
	public virtual void SetPortaled(float timer = 1.5f)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x3A7EE0", Offset = "0x3A6AE0", VA = "0x1803A7EE0")]
	public void UnPortaled()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x3A5BA0", Offset = "0x3A47A0", VA = "0x1803A5BA0")]
	public void SetGold()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x3A5F50", Offset = "0x3A4B50", VA = "0x1803A5F50", Slot = "32")]
	public virtual void SetJalaed()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x3A55C0", Offset = "0x3A41C0", VA = "0x1803A55C0", Slot = "33")]
	public virtual void SetEmbered()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x3A55F0", Offset = "0x3A41F0", VA = "0x1803A55F0", Slot = "34")]
	public virtual void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x3A6700", Offset = "0x3A5300", VA = "0x1803A6700", Slot = "35")]
	public virtual void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x39ADD0", Offset = "0x3999D0", VA = "0x18039ADD0", Slot = "36")]
	public virtual void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x3A7EA0", Offset = "0x3A6AA0", VA = "0x1803A7EA0")]
	private void UnPoisoned()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x3A0420", Offset = "0x39F020", VA = "0x1803A0420", Slot = "37")]
	public virtual void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x39D650", Offset = "0x39C250", VA = "0x18039D650")]
	[IteratorStateMachine(typeof(<DeLayGarliced>d__184))]
	private IEnumerator DeLayGarliced(float during, bool playSound, bool certainRow)
	{
		return null;
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x3A1800", Offset = "0x3A0400", VA = "0x1803A1800", Slot = "38")]
	public virtual void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x3A44A0", Offset = "0x3A30A0", VA = "0x1803A44A0")]
	private void RecoverGarliced()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x3A7F70", Offset = "0x3A6B70", VA = "0x1803A7F70", Slot = "39")]
	protected virtual void Unfrezzing()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x3A5010", Offset = "0x3A3C10", VA = "0x1803A5010", Slot = "40")]
	public virtual void SetCold(float time)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x3A5BC0", Offset = "0x3A47C0", VA = "0x1803A5BC0")]
	public void SetGrap(float time)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x3A8DF0", Offset = "0x3A79F0", VA = "0x1803A8DF0")]
	public void Warm(int warmType = 0)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x39C5E0", Offset = "0x39B1E0", VA = "0x18039C5E0", Slot = "41")]
	public virtual void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x39D010", Offset = "0x39BC10", VA = "0x18039D010")]
	private bool CheckButtered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x3A7E00", Offset = "0x3A6A00", VA = "0x1803A7E00", Slot = "42")]
	protected virtual void UnButtered()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x3A1360", Offset = "0x39FF60", VA = "0x1803A1360")]
	private GameObject FindZombieHead()
	{
		return null;
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x3A4850", Offset = "0x3A3450", VA = "0x1803A4850")]
	private void RestoreSpeed()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x3A2D20", Offset = "0x3A1920", VA = "0x1803A2D20")]
	protected void KillDebuff()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x3A6020", Offset = "0x3A4C20", VA = "0x1803A6020")]
	protected void SetMaskLayer()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x335100", Offset = "0x333D00", VA = "0x180335100", Slot = "43")]
	public virtual GameObject DropArmor()
	{
		return null;
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "44")]
	protected virtual void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "45")]
	protected virtual void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x3A1530", Offset = "0x3A0130", VA = "0x1803A1530", Slot = "46")]
	protected virtual int FirstArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "47")]
	protected virtual void SecondArmorBroken()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x3A4920", Offset = "0x3A3520", VA = "0x1803A4920", Slot = "48")]
	protected virtual int SecondArmorTakeDamage(int theDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x39D150", Offset = "0x39BD50", VA = "0x18039D150", Slot = "49")]
	protected virtual bool CrashEntity(Collider2D collision, bool inWater = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x3A1AA0", Offset = "0x3A06A0", VA = "0x1803A1AA0")]
	protected int GetAvaliableRow(int originalRow)
	{
		return default(int);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x3A1C20", Offset = "0x3A0820", VA = "0x1803A1C20")]
	protected int GetCertainRow(int originalRow)
	{
		return default(int);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x39B4A0", Offset = "0x39A0A0", VA = "0x18039B4A0")]
	private void AttackPlant(Plant plant)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x39B3F0", Offset = "0x399FF0", VA = "0x18039B3F0", Slot = "50")]
	protected virtual void AttackEffect(Plant plant)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x39FBC0", Offset = "0x39E7C0", VA = "0x18039FBC0")]
	private bool EatEffect(Plant plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x39BD80", Offset = "0x39A980", VA = "0x18039BD80", Slot = "51")]
	public virtual void BeSmall(float scale = 0.7f)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x3A2DA0", Offset = "0x3A19A0", VA = "0x1803A2DA0", Slot = "52")]
	public virtual void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x3A2680", Offset = "0x3A1280", VA = "0x1803A2680")]
	public void InitHealth()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x3A2250", Offset = "0x3A0E50", VA = "0x1803A2250")]
	private GameObject GetHealth(string name, int order)
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x3A81E0", Offset = "0x3A6DE0", VA = "0x1803A81E0", Slot = "53")]
	public virtual void UpdateHealthText()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "54")]
	public virtual void KillByCaltrop()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x3A8F50", Offset = "0x3A7B50", VA = "0x1803A8F50")]
	public Zombie()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieBall
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002AA")]
public class ZombieBall : Obstacle
{
	[Token(Token = "0x20002AB")]
	[CompilerGenerated]
	private sealed class <Bigger>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E1")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E2")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E3")]
		[FieldOffset(Offset = "0x20")]
		public ZombieBall <>4__this;

		[Token(Token = "0x40007E4")]
		[FieldOffset(Offset = "0x28")]
		private Vector2 <scale>5__2;

		[Token(Token = "0x40007E5")]
		[FieldOffset(Offset = "0x30")]
		private Vector2 <targetScale>5__3;

		[Token(Token = "0x40007E6")]
		[FieldOffset(Offset = "0x38")]
		private float <time>5__4;

		[Token(Token = "0x40007E7")]
		[FieldOffset(Offset = "0x3C")]
		private float <during>5__5;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Bigger>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x382BE0", Offset = "0x3817E0", VA = "0x180382BE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x382E60", Offset = "0x381A60", VA = "0x180382E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DB")]
	[FieldOffset(Offset = "0x38")]
	private int bulletTime;

	[Token(Token = "0x40007DC")]
	[FieldOffset(Offset = "0x3C")]
	private float existTime;

	[Token(Token = "0x40007DD")]
	[FieldOffset(Offset = "0x40")]
	private Rigidbody2D rb;

	[Token(Token = "0x40007DE")]
	[FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x40007DF")]
	[FieldOffset(Offset = "0x50")]
	private float Vx;

	[Token(Token = "0x40007E0")]
	[FieldOffset(Offset = "0x54")]
	public bool boss;

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x36EE50", Offset = "0x36DA50", VA = "0x18036EE50", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x36F5D0", Offset = "0x36E1D0", VA = "0x18036F5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x36F5F0", Offset = "0x36E1F0", VA = "0x18036F5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x36F380", Offset = "0x36DF80", VA = "0x18036F380")]
	private void PositionUpdate()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x36F0C0", Offset = "0x36DCC0", VA = "0x18036F0C0")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x36EFB0", Offset = "0x36DBB0", VA = "0x18036EFB0", Slot = "6")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x36F550", Offset = "0x36E150", VA = "0x18036F550")]
	public void StartBigger()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x36EF40", Offset = "0x36DB40", VA = "0x18036EF40")]
	[IteratorStateMachine(typeof(<Bigger>d__13))]
	private IEnumerator Bigger()
	{
		return null;
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x36F650", Offset = "0x36E250", VA = "0x18036F650")]
	public ZombieBall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieBoss
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002F7")]
public class ZombieBoss : Zombie
{
	[Token(Token = "0x20002F8")]
	public enum BossStatus
	{
		[Token(Token = "0x400087F")]
		enter,
		[Token(Token = "0x4000880")]
		idle,
		[Token(Token = "0x4000881")]
		spawn,
		[Token(Token = "0x4000882")]
		foot,
		[Token(Token = "0x4000883")]
		rv,
		[Token(Token = "0x4000884")]
		head_enter,
		[Token(Token = "0x4000885")]
		head_idle,
		[Token(Token = "0x4000886")]
		head_leave,
		[Token(Token = "0x4000887")]
		bungi
	}

	[Token(Token = "0x20002F9")]
	[CompilerGenerated]
	private sealed class <ColoredEye>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000888")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000889")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400088A")]
		[FieldOffset(Offset = "0x20")]
		public ZombieBoss <>4__this;

		[Token(Token = "0x400088B")]
		[FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x400088C")]
		[FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__2;

		[Token(Token = "0x400088D")]
		[FieldOffset(Offset = "0x48")]
		private float <time>5__3;

		[Token(Token = "0x400088E")]
		[FieldOffset(Offset = "0x4C")]
		private float <during>5__4;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <ColoredEye>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x398240", Offset = "0x396E40", VA = "0x180398240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x398420", Offset = "0x397020", VA = "0x180398420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000868")]
	[FieldOffset(Offset = "0x220")]
	public int targetRow;

	[Token(Token = "0x4000869")]
	[FieldOffset(Offset = "0x224")]
	public int targetColumn;

	[Token(Token = "0x400086A")]
	[FieldOffset(Offset = "0x228")]
	public int ballType;

	[Token(Token = "0x400086B")]
	[FieldOffset(Offset = "0x22C")]
	public int summonCount;

	[Token(Token = "0x400086C")]
	[FieldOffset(Offset = "0x230")]
	public int spawnCount;

	[Token(Token = "0x400086D")]
	[FieldOffset(Offset = "0x234")]
	public int summonBallCount;

	[Token(Token = "0x400086E")]
	[FieldOffset(Offset = "0x238")]
	public float summonTime;

	[Token(Token = "0x400086F")]
	[FieldOffset(Offset = "0x23C")]
	public float ballCountDown;

	[Token(Token = "0x4000870")]
	[FieldOffset(Offset = "0x240")]
	public bool ball;

	[Token(Token = "0x4000871")]
	[FieldOffset(Offset = "0x248")]
	public Animator animDriver;

	[Token(Token = "0x4000872")]
	[FieldOffset(Offset = "0x250")]
	public Animator animRV;

	[Token(Token = "0x4000873")]
	[FieldOffset(Offset = "0x258")]
	public Transform ballPosition;

	[Token(Token = "0x4000874")]
	[FieldOffset(Offset = "0x260")]
	public Transform spawnPosition;

	[Token(Token = "0x4000875")]
	[FieldOffset(Offset = "0x268")]
	public SpriteRenderer eye;

	[Token(Token = "0x4000876")]
	[FieldOffset(Offset = "0x270")]
	public BossStatus bossStatus;

	[Token(Token = "0x4000877")]
	[FieldOffset(Offset = "0x278")]
	public GameObject head;

	[Token(Token = "0x4000878")]
	[FieldOffset(Offset = "0x280")]
	public GameObject thumb;

	[Token(Token = "0x4000879")]
	[FieldOffset(Offset = "0x288")]
	public GameObject jaw;

	[Token(Token = "0x400087A")]
	[FieldOffset(Offset = "0x290")]
	public GameObject hand;

	[Token(Token = "0x400087B")]
	[FieldOffset(Offset = "0x298")]
	public GameObject foot_inner;

	[Token(Token = "0x400087C")]
	[FieldOffset(Offset = "0x2A0")]
	public GameObject foot_outter;

	[Token(Token = "0x400087D")]
	[FieldOffset(Offset = "0x2A8")]
	public GameObject eyes;

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x394CD0", Offset = "0x3938D0", VA = "0x180394CD0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x394C80", Offset = "0x393880", VA = "0x180394C80", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x397110", Offset = "0x395D10", VA = "0x180397110", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x395620", Offset = "0x394220", VA = "0x180395620")]
	private void BossUpdate()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x396E20", Offset = "0x395A20", VA = "0x180396E20")]
	private void SpawnUpdate()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x396490", Offset = "0x395090", VA = "0x180396490")]
	private void HeadUpdate()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x396BB0", Offset = "0x3957B0", VA = "0x180396BB0")]
	public void Skill()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x396AE0", Offset = "0x3956E0", VA = "0x180396AE0", Slot = "55")]
	protected virtual void SetBungi(int theColumn)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x394290", Offset = "0x392E90", VA = "0x180394290")]
	private void AnimBungi()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x396940", Offset = "0x395540", VA = "0x180396940")]
	private void RvPositionUpdate(int theColumn, int theRow)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x396160", Offset = "0x394D60", VA = "0x180396160")]
	private void FootCrash(int row)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x396900", Offset = "0x395500", VA = "0x180396900")]
	private void RemoveDeBuff()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x395740", Offset = "0x394340", VA = "0x180395740")]
	[IteratorStateMachine(typeof(<ColoredEye>d__34))]
	public IEnumerator ColoredEye(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x3968A0", Offset = "0x3954A0", VA = "0x1803968A0")]
	private void MachineSound2()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x394BC0", Offset = "0x3937C0", VA = "0x180394BC0")]
	private void AnimSpawn()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x3945E0", Offset = "0x3931E0", VA = "0x1803945E0")]
	private void AnimPutBall()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x3949F0", Offset = "0x3935F0", VA = "0x1803949F0", Slot = "56")]
	protected virtual void AnimRv()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x3942F0", Offset = "0x392EF0", VA = "0x1803942F0")]
	private void AnimCrash()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x396230", Offset = "0x394E30", VA = "0x180396230")]
	private ZombieType GetZombieType()
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x394120", Offset = "0x392D20", VA = "0x180394120")]
	private bool AllowUniqueZombie(ZombieType theZombieType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x3970E0", Offset = "0x395CE0", VA = "0x1803970E0", Slot = "14")]
	public override void TakeDamage(DmgType theDamageType, int theDamage, bool fix = false)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x395710", Offset = "0x394310", VA = "0x180395710", Slot = "29")]
	public override void Charred(int damage = 1800, bool fix = false)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x394520", Offset = "0x393120", VA = "0x180394520")]
	private void AnimFootSound()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x395C30", Offset = "0x394830", VA = "0x180395C30")]
	private void DieExplode()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x395800", Offset = "0x394400", VA = "0x180395800", Slot = "12")]
	protected override void DieEvent(int reason = 0)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x395D90", Offset = "0x394990", VA = "0x180395D90")]
	private void DriverDie()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x3957D0", Offset = "0x3943D0", VA = "0x1803957D0")]
	private void DieAnimOver()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x395DE0", Offset = "0x3949E0", VA = "0x180395DE0", Slot = "28")]
	protected override void DropAward()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x395D70", Offset = "0x394970", VA = "0x180395D70", Slot = "11")]
	public override void Die(int reason = 0)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "52")]
	public override void KnockBack(float x, KnockBackReason reason = KnockBackReason.ByUmbrella)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "41")]
	public override void Buttered(float time = 4f, bool sprite = true)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "35")]
	public override void SetPoison(float time = 10f)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "36")]
	public override void AddPoisonLevel()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "37")]
	public override void EatGarlic(Plant plant, float time = 1f, bool withSound = true)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "38")]
	public override void Garliced(bool playSound = false, bool certainRow = false)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x396BA0", Offset = "0x3957A0", VA = "0x180396BA0", Slot = "40")]
	public override void SetCold(float time)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x392900", Offset = "0x391500", VA = "0x180392900", Slot = "34")]
	public override void SetFreeze(float time)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x397250", Offset = "0x395E50", VA = "0x180397250")]
	public ZombieBoss()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieBoss2
using Il2CppDummyDll;

[Token(Token = "0x20002FA")]
public class ZombieBoss2 : ZombieBoss
{
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x3985F0", Offset = "0x3971F0", VA = "0x1803985F0", Slot = "19")]
	protected override void BodyTakeDamage(int theDamage)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x398460", Offset = "0x397060", VA = "0x180398460", Slot = "56")]
	protected override void AnimRv()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x399220", Offset = "0x397E20", VA = "0x180399220")]
	public ZombieBoss2()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieCardInstantiater
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000390")]
public class ZombieCardInstantiater : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[FieldOffset(Offset = "0x20")]
	public GameObject example;

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ZombieCardInstantiater()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieData
using Il2CppDummyDll;

[Token(Token = "0x2000322")]
public class ZombieData
{
	[Token(Token = "0x2000323")]
	public struct ZombieData_
	{
		[Token(Token = "0x40009DE")]
		[FieldOffset(Offset = "0x0")]
		public int theAttackDamage;

		[Token(Token = "0x40009DF")]
		[FieldOffset(Offset = "0x4")]
		public int theMaxHealth;

		[Token(Token = "0x40009E0")]
		[FieldOffset(Offset = "0x8")]
		public int theFirstArmorMaxHealth;

		[Token(Token = "0x40009E1")]
		[FieldOffset(Offset = "0xC")]
		public int theSecondArmorMaxHealth;
	}

	[Token(Token = "0x40009DD")]
	[FieldOffset(Offset = "0x0")]
	public static ZombieData_[] zombieData;

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x3BC6A0", Offset = "0x3BB2A0", VA = "0x1803BC6A0")]
	public static void InitZombieData()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x3BD780", Offset = "0x3BC380", VA = "0x1803BD780")]
	private static void TravelZombie()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x3BD2D0", Offset = "0x3BBED0", VA = "0x1803BD2D0")]
	private static void PlantZombie()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x31DA20", Offset = "0x31C620", VA = "0x18031DA20")]
	public ZombieData()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieDuck
using Il2CppDummyDll;

[Token(Token = "0x20002BC")]
public class ZombieDuck : Zombie
{
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x383620", Offset = "0x382220", VA = "0x180383620", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ZombieDuck()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieFootball
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002A6")]
public class ZombieFootball : ArmorZombie
{
	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x36F6D0", Offset = "0x36E2D0", VA = "0x18036F6D0", Slot = "44")]
	protected override void FirstArmorBroken()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x36F860", Offset = "0x36E460", VA = "0x18036F860", Slot = "45")]
	protected override void FirstArmorFall()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x35BBC0", Offset = "0x35A7C0", VA = "0x18035BBC0")]
	public ZombieFootball()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieHead
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20003A0")]
public class ZombieHead : MonoBehaviour
{
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x417E60", Offset = "0x416A60", VA = "0x180417E60")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ZombieHead()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieInAlmanac
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000077")]
public class ZombieInAlmanac : MonoBehaviour
{
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x430CC0", Offset = "0x42F8C0", VA = "0x180430CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ZombieInAlmanac()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieJackson
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002FB")]
public class ZombieJackson : Zombie
{
	[Token(Token = "0x400088F")]
	[FieldOffset(Offset = "0x220")]
	private float moonWalkTime;

	[Token(Token = "0x4000890")]
	[FieldOffset(Offset = "0x228")]
	private readonly GameObject[] dancer;

	[Token(Token = "0x4000891")]
	[FieldOffset(Offset = "0x230")]
	protected bool isMoonWalkFinish;

	[Token(Token = "0x4000892")]
	[FieldOffset(Offset = "0x231")]
	private bool isAbledToAttack;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x399CD0", Offset = "0x3988D0", VA = "0x180399CD0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x39AB00", Offset = "0x399700", VA = "0x18039AB00", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x399F60", Offset = "0x398B60", VA = "0x180399F60", Slot = "7")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x39A5E0", Offset = "0x3991E0", VA = "0x18039A5E0", Slot = "21")]
	protected override void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x39AA10", Offset = "0x399610", VA = "0x18039AA10")]
	private void PointOver()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x39A2F0", Offset = "0x398EF0", VA = "0x18039A2F0", Slot = "55")]
	protected virtual ZombieType GetZombieType()
	{
		return default(ZombieType);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x3993A0", Offset = "0x397FA0", VA = "0x1803993A0")]
	private void AnimSummon()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x39AA20", Offset = "0x399620", VA = "0x18039AA20", Slot = "30")]
	public override void SetMindControl(int controlLevel = 0)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x39A470", Offset = "0x399070", VA = "0x18039A470")]
	private void LookForward()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x39A300", Offset = "0x398F00", VA = "0x18039A300")]
	private void LookBack()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x399D30", Offset = "0x398930", VA = "0x180399D30", Slot = "18")]
	protected override void ChangeArmSpirte(GameObject arm)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x399230", Offset = "0x397E30", VA = "0x180399230")]
	private void AdjustAttackPosition()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x399DE0", Offset = "0x3989E0", VA = "0x180399DE0")]
	private void CreateParticle(Vector3 position)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x39AAB0", Offset = "0x3996B0", VA = "0x18039AAB0", Slot = "56")]
	protected virtual void StopMoonWalk()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x39ABC0", Offset = "0x3997C0", VA = "0x18039ABC0")]
	public ZombieJackson()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieObstacle
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002AC")]
public class ZombieObstacle : Obstacle
{
	[Token(Token = "0x40007E8")]
	[FieldOffset(Offset = "0x38")]
	public float theHealth;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x383710", Offset = "0x382310", VA = "0x180383710", Slot = "7")]
	protected virtual void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x383830", Offset = "0x382430", VA = "0x180383830")]
	public ZombieObstacle()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieSquash
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x20002AD")]
public class ZombieSquash : MonoBehaviour
{
	[Token(Token = "0x40007E9")]
	[FieldOffset(Offset = "0x20")]
	public int targetRow;

	[Token(Token = "0x40007EA")]
	[FieldOffset(Offset = "0x24")]
	public int targetColumn;

	[Token(Token = "0x40007EB")]
	[FieldOffset(Offset = "0x28")]
	public bool isMindControl;

	[Token(Token = "0x40007EC")]
	[FieldOffset(Offset = "0x2C")]
	private Vector2 upperPosition;

	[Token(Token = "0x40007ED")]
	[FieldOffset(Offset = "0x34")]
	private Vector2 lowerPosition;

	[Token(Token = "0x40007EE")]
	[FieldOffset(Offset = "0x3C")]
	private readonly float moveSpeed;

	[Token(Token = "0x40007EF")]
	[FieldOffset(Offset = "0x40")]
	private int progress;

	[Token(Token = "0x40007F0")]
	[FieldOffset(Offset = "0x44")]
	public bool jala;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x3838C0", Offset = "0x3824C0", VA = "0x1803838C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x3838B0", Offset = "0x3824B0", VA = "0x1803838B0")]
	private void Progress1()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x383840", Offset = "0x382440", VA = "0x180383840")]
	private void DelayProgress()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x3839F0", Offset = "0x3825F0", VA = "0x1803839F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x384100", Offset = "0x382D00", VA = "0x180384100")]
	public ZombieSquash()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieStatus
using Il2CppDummyDll;

[Token(Token = "0x20003AC")]
public enum ZombieStatus
{
	[Token(Token = "0x4000E5A")]
	Default,
	[Token(Token = "0x4000E5B")]
	Dying,
	[Token(Token = "0x4000E5C")]
	Pol_run,
	[Token(Token = "0x4000E5D")]
	Pol_jump,
	[Token(Token = "0x4000E5E")]
	Paper_lookPaper,
	[Token(Token = "0x4000E5F")]
	Paper_losePaper,
	[Token(Token = "0x4000E60")]
	Paper_angry,
	[Token(Token = "0x4000E61")]
	Snokle_inWater,
	[Token(Token = "0x4000E62")]
	Dolphinrider_fast,
	[Token(Token = "0x4000E63")]
	Dolphinrider_jump,
	[Token(Token = "0x4000E64")]
	Flying,
	[Token(Token = "0x4000E65")]
	Jackbox_surprise,
	[Token(Token = "0x4000E66")]
	Miner_digging,
	[Token(Token = "0x4000E67")]
	Miner_rising,
	[Token(Token = "0x4000E68")]
	Polo_jump,
	[Token(Token = "0x4000E69")]
	Gargantuar_withImp,
	[Token(Token = "0x4000E6A")]
	Imp_fly,
	[Token(Token = "0x4000E6B")]
	Imp_Land,
	[Token(Token = "0x4000E6C")]
	WithLadder,
	[Token(Token = "0x4000E6D")]
	Polo_waiting,
	[Token(Token = "0x4000E6E")]
	Polo_bigJump,
	[Token(Token = "0x4000E6F")]
	Boss,
	[Token(Token = "0x4000E70")]
	Bungi_wating,
	[Token(Token = "0x4000E71")]
	Bungi_down,
	[Token(Token = "0x4000E72")]
	Bungi_up,
	[Token(Token = "0x4000E73")]
	Spider_raising,
	[Token(Token = "0x4000E74")]
	WithSnowShield,
	[Token(Token = "0x4000E75")]
	Legion_fall,
	[Token(Token = "0x4000E76")]
	Legion_summon,
	[Token(Token = "0x4000E77")]
	Legion_bigSummon
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZombieType
using Il2CppDummyDll;

[Token(Token = "0x20003AD")]
public enum ZombieType
{
	[Token(Token = "0x4000E79")]
	Nothing = -1,
	[Token(Token = "0x4000E7A")]
	NormalZombie = 0,
	[Token(Token = "0x4000E7B")]
	ConeZombie = 2,
	[Token(Token = "0x4000E7C")]
	PolevaulterZombie = 3,
	[Token(Token = "0x4000E7D")]
	BucketZombie = 4,
	[Token(Token = "0x4000E7E")]
	PaperZombie = 5,
	[Token(Token = "0x4000E7F")]
	DancePolZombie = 6,
	[Token(Token = "0x4000E80")]
	DancePolZombie2 = 7,
	[Token(Token = "0x4000E81")]
	DoorZombie = 8,
	[Token(Token = "0x4000E82")]
	FootballZombie = 9,
	[Token(Token = "0x4000E83")]
	JacksonZombie = 10,
	[Token(Token = "0x4000E84")]
	ZombieDuck = 11,
	[Token(Token = "0x4000E85")]
	ConeZombieDuck = 12,
	[Token(Token = "0x4000E86")]
	BucketZombieDuck = 13,
	[Token(Token = "0x4000E87")]
	SubmarineZombie = 14,
	[Token(Token = "0x4000E88")]
	ElitePaperZombie = 15,
	[Token(Token = "0x4000E89")]
	DriverZombie = 16,
	[Token(Token = "0x4000E8A")]
	SnorkleZombie = 17,
	[Token(Token = "0x4000E8B")]
	SuperDriver = 18,
	[Token(Token = "0x4000E8C")]
	Dolphinrider = 19,
	[Token(Token = "0x4000E8D")]
	DrownZombie = 20,
	[Token(Token = "0x4000E8E")]
	DollDiamond = 21,
	[Token(Token = "0x4000E8F")]
	DollGold = 22,
	[Token(Token = "0x4000E90")]
	DollSilver = 23,
	[Token(Token = "0x4000E91")]
	JackboxZombie = 24,
	[Token(Token = "0x4000E92")]
	BalloonZombie = 25,
	[Token(Token = "0x4000E93")]
	KirovZombie = 26,
	[Token(Token = "0x4000E94")]
	SnowDolphinrider = 27,
	[Token(Token = "0x4000E95")]
	MinerZombie = 28,
	[Token(Token = "0x4000E96")]
	IronBalloonZombie = 29,
	[Token(Token = "0x4000E97")]
	SuperJackboxZombie = 30,
	[Token(Token = "0x4000E98")]
	CatapultZombie = 31,
	[Token(Token = "0x4000E99")]
	PogoZombie = 32,
	[Token(Token = "0x4000E9A")]
	LadderZombie = 33,
	[Token(Token = "0x4000E9B")]
	SuperPogoZombie = 34,
	[Token(Token = "0x4000E9C")]
	Gargantuar = 35,
	[Token(Token = "0x4000E9D")]
	RedGargantuar = 36,
	[Token(Token = "0x4000E9E")]
	ImpZombie = 37,
	[Token(Token = "0x4000E9F")]
	IronGargantuar = 38,
	[Token(Token = "0x4000EA0")]
	IronRedGargantuar = 39,
	[Token(Token = "0x4000EA1")]
	MachineNutZombie = 40,
	[Token(Token = "0x4000EA2")]
	SilverZombie = 41,
	[Token(Token = "0x4000EA3")]
	GoldZombie = 42,
	[Token(Token = "0x4000EA4")]
	SuperGargantuar = 43,
	[Token(Token = "0x4000EA5")]
	ZombieBoss = 44,
	[Token(Token = "0x4000EA6")]
	BungiZombie = 45,
	[Token(Token = "0x4000EA7")]
	ZombieBoss2 = 46,
	[Token(Token = "0x4000EA8")]
	SnowZombie = 47,
	[Token(Token = "0x4000EA9")]
	NewYearZombie = 48,
	[Token(Token = "0x4000EAA")]
	SnowGunZombie = 49,
	[Token(Token = "0x4000EAB")]
	SnowShieldZombie = 50,
	[Token(Token = "0x4000EAC")]
	SnowDrownZombie = 51,
	[Token(Token = "0x4000EAD")]
	ProtalZombie = 52,
	[Token(Token = "0x4000EAE")]
	LevatationZombie = 53,
	[Token(Token = "0x4000EAF")]
	TrainingDummy = 54,
	[Token(Token = "0x4000EB0")]
	PeaShooterZombie = 100,
	[Token(Token = "0x4000EB1")]
	CherryShooterZombie = 101,
	[Token(Token = "0x4000EB2")]
	SuperCherryShooterZombie = 102,
	[Token(Token = "0x4000EB3")]
	WallNutZombie = 103,
	[Token(Token = "0x4000EB4")]
	CherryPaperZombie = 104,
	[Token(Token = "0x4000EB5")]
	RandomZombie = 105,
	[Token(Token = "0x4000EB6")]
	BucketNutZombie = 106,
	[Token(Token = "0x4000EB7")]
	CherryNutZombie = 107,
	[Token(Token = "0x4000EB8")]
	IronPeaZombie = 108,
	[Token(Token = "0x4000EB9")]
	TallNutFootballZombie = 109,
	[Token(Token = "0x4000EBA")]
	RandomPlusZombie = 110,
	[Token(Token = "0x4000EBB")]
	TallIceNutZombie = 111,
	[Token(Token = "0x4000EBC")]
	CherryCatapultZombie = 112,
	[Token(Token = "0x4000EBD")]
	DolphinPeaZombie = 113,
	[Token(Token = "0x4000EBE")]
	IronPeaDoorZombie = 114,
	[Token(Token = "0x4000EBF")]
	SquashZombie = 115,
	[Token(Token = "0x4000EC0")]
	JalaSquashZombie = 116,
	[Token(Token = "0x4000EC1")]
	JalapenoZombie = 117,
	[Token(Token = "0x4000EC2")]
	GatlingFootballZombie = 118,
	[Token(Token = "0x4000EC3")]
	IronBalloonZombie2 = 119,
	[Token(Token = "0x4000EC4")]
	SuperSubmarine = 200,
	[Token(Token = "0x4000EC5")]
	JacksonDriver = 201,
	[Token(Token = "0x4000EC6")]
	FootballDrown = 202,
	[Token(Token = "0x4000EC7")]
	CherryPaperZ95 = 203,
	[Token(Token = "0x4000EC8")]
	BlackFootball = 204,
	[Token(Token = "0x4000EC9")]
	SuperKirov = 205,
	[Token(Token = "0x4000ECA")]
	SuperBombThrower = 206,
	[Token(Token = "0x4000ECB")]
	QuickJacksonZombie = 207,
	[Token(Token = "0x4000ECC")]
	QingZombie = 208,
	[Token(Token = "0x4000ECD")]
	JackboxJumpZombie = 209,
	[Token(Token = "0x4000ECE")]
	SuperMachineNutZombie = 210,
	[Token(Token = "0x4000ECF")]
	LandSubmarine = 211,
	[Token(Token = "0x4000ED0")]
	UltimateGargantuar = 212,
	[Token(Token = "0x4000ED1")]
	ObsidianImpZombie = 213,
	[Token(Token = "0x4000ED2")]
	DolphinGatlingZombie = 214,
	[Token(Token = "0x4000ED3")]
	DiamondRandomZombie = 215,
	[Token(Token = "0x4000ED4")]
	DrownpultZombie = 216,
	[Token(Token = "0x4000ED5")]
	SuperDancePolZombie = 217,
	[Token(Token = "0x4000ED6")]
	UltimateFootballDrown = 218,
	[Token(Token = "0x4000ED7")]
	UltimateMachineNutZombie = 219,
	[Token(Token = "0x4000ED8")]
	UltimateFootballZombie = 220,
	[Token(Token = "0x4000ED9")]
	UltimateKirovZombie = 221,
	[Token(Token = "0x4000EDA")]
	UltimateJacksonDriver = 222,
	[Token(Token = "0x4000EDB")]
	UltimatePaperZombie = 223,
	[Token(Token = "0x4000EDC")]
	UltimateJackboxZombie = 224,
	[Token(Token = "0x4000EDD")]
	GatlingBlackFootball = 225,
	[Token(Token = "0x4000EDE")]
	LegionZombie = 226
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// Zuma
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000394")]
public class Zuma : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000395")]
	public struct BackSegment
	{
		[Token(Token = "0x4000C87")]
		[FieldOffset(Offset = "0x0")]
		public int segment;

		[Token(Token = "0x4000C88")]
		[FieldOffset(Offset = "0x4")]
		public float speed;

		[Token(Token = "0x4000C89")]
		[FieldOffset(Offset = "0x8")]
		public int combo;
	}

	[Token(Token = "0x2000396")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8A")]
		[FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8B")]
		[FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8C")]
		[FieldOffset(Offset = "0x20")]
		public Zuma <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x31D500", Offset = "0x31C100", VA = "0x18031D500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x31D550", Offset = "0x31C150", VA = "0x18031D550")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x31BB00", Offset = "0x31A700", VA = "0x18031BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x3F3190", Offset = "0x3F1D90", VA = "0x1803F3190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x3F32A0", Offset = "0x3F1EA0", VA = "0x1803F32A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C77")]
	[FieldOffset(Offset = "0x0")]
	public static Zuma Instance;

	[Token(Token = "0x4000C78")]
	[FieldOffset(Offset = "0x20")]
	public int nextLayer;

	[Token(Token = "0x4000C79")]
	[FieldOffset(Offset = "0x24")]
	public float maxSpeed;

	[Token(Token = "0x4000C7A")]
	[FieldOffset(Offset = "0x28")]
	public float headSpeed;

	[Token(Token = "0x4000C7B")]
	[FieldOffset(Offset = "0x2C")]
	private readonly int maxBallCount;

	[Token(Token = "0x4000C7C")]
	[FieldOffset(Offset = "0x30")]
	private int summonBallCount;

	[Token(Token = "0x4000C7D")]
	[FieldOffset(Offset = "0x34")]
	private ZumaBall.BallType lastType;

	[Token(Token = "0x4000C7E")]
	[FieldOffset(Offset = "0x38")]
	public bool gameOver;

	[Token(Token = "0x4000C7F")]
	[FieldOffset(Offset = "0x40")]
	public List<GameObject> ballPrefab;

	[Token(Token = "0x4000C80")]
	[FieldOffset(Offset = "0x48")]
	public List<ZumaBall> ballSegmentList;

	[Token(Token = "0x4000C81")]
	[FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool isBomb;

	[Token(Token = "0x4000C82")]
	[FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<BackSegment> backSegmentList;

	[Token(Token = "0x4000C83")]
	[FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float backTime;

	[Token(Token = "0x4000C84")]
	[FieldOffset(Offset = "0x64")]
	private readonly float backSpeed;

	[Token(Token = "0x4000C85")]
	[FieldOffset(Offset = "0x68")]
	private readonly List<ZumaBall> searchDestoryList;

	[Token(Token = "0x4000C86")]
	[FieldOffset(Offset = "0x70")]
	private readonly List<ZumaBall> fallBackList;

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x3F5BA0", Offset = "0x3F47A0", VA = "0x1803F5BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x3F82F0", Offset = "0x3F6EF0", VA = "0x1803F82F0")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x3F8430", Offset = "0x3F7030", VA = "0x1803F8430")]
	private void Update()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x3F6880", Offset = "0x3F5480", VA = "0x1803F6880")]
	private void FirstSegmentMove()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x3F64A0", Offset = "0x3F50A0", VA = "0x1803F64A0")]
	private void CheckGameFail()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x3F7A00", Offset = "0x3F6600", VA = "0x1803F7A00")]
	private void ShootBallInsert()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x3F6D40", Offset = "0x3F5940", VA = "0x1803F6D40")]
	private void SearchDestory()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x3F6010", Offset = "0x3F4C10", VA = "0x1803F6010")]
	private void CheckFallbackBall()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x3F8360", Offset = "0x3F6F60", VA = "0x1803F8360")]
	private void UpdateBallProgress(ZumaBall ball)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x3F5D20", Offset = "0x3F4920", VA = "0x1803F5D20")]
	private void BallSegmentConnect()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x3F80D0", Offset = "0x3F6CD0", VA = "0x1803F80D0")]
	private void StartBack(int segment, float speed, int combo = 1)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x3F5C00", Offset = "0x3F4800", VA = "0x1803F5C00")]
	private void BackSegments()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x3F7700", Offset = "0x3F6300", VA = "0x1803F7700")]
	private BackSegment SegmentBack(BackSegment segment, int index)
	{
		return default(BackSegment);
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x3F65D0", Offset = "0x3F51D0", VA = "0x1803F65D0")]
	private void CheckVictory()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x3F8740", Offset = "0x3F7340", VA = "0x1803F8740")]
	private void Victory()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x3F6690", Offset = "0x3F5290", VA = "0x1803F6690")]
	public ZumaBall CreateBall(Vector2 position, Quaternion quaternion, ZumaBall.BallType ballType)
	{
		return null;
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x3F6CA0", Offset = "0x3F58A0", VA = "0x1803F6CA0")]
	private ZumaBall.BallType GetRoadBallType()
	{
		return default(ZumaBall.BallType);
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x3F6D00", Offset = "0x3F5900", VA = "0x1803F6D00")]
	public static ZumaBall.BallType GetShootBallType()
	{
		return default(ZumaBall.BallType);
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x3F88F0", Offset = "0x3F74F0", VA = "0x1803F88F0")]
	public Zuma()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZumaBall
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x2000397")]
public class ZumaBall : MonoBehaviour
{
	[Token(Token = "0x2000398")]
	public enum BallType
	{
		[Token(Token = "0x4000C97")]
		BrownBall,
		[Token(Token = "0x4000C98")]
		IronBall,
		[Token(Token = "0x4000C99")]
		DarkBall,
		[Token(Token = "0x4000C9A")]
		HyponoBall,
		[Token(Token = "0x4000C9B")]
		BlueBall,
		[Token(Token = "0x4000C9C")]
		ExplodeBall
	}

	[Token(Token = "0x2000399")]
	public enum BallStatus
	{
		[Token(Token = "0x4000C9E")]
		Moving,
		[Token(Token = "0x4000C9F")]
		OnShooter,
		[Token(Token = "0x4000CA0")]
		OnRoad,
		[Token(Token = "0x4000CA1")]
		Waiting
	}

	[Token(Token = "0x4000C8D")]
	[FieldOffset(Offset = "0x20")]
	public float progress;

	[Token(Token = "0x4000C8E")]
	[FieldOffset(Offset = "0x24")]
	public float lastProgress;

	[Token(Token = "0x4000C8F")]
	[FieldOffset(Offset = "0x28")]
	public bool deleteFlag;

	[Token(Token = "0x4000C90")]
	[FieldOffset(Offset = "0x30")]
	public ZumaBall fallbackTarget;

	[Token(Token = "0x4000C91")]
	[FieldOffset(Offset = "0x38")]
	public Rigidbody2D rb;

	[Token(Token = "0x4000C92")]
	[FieldOffset(Offset = "0x40")]
	public BallType theBallType;

	[Token(Token = "0x4000C93")]
	[FieldOffset(Offset = "0x44")]
	public BallStatus theBallStatus;

	[Token(Token = "0x1700007F")]
	public ZumaBall Next
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x3F4210", Offset = "0x3F2E10", VA = "0x1803F4210")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x3F44A0", Offset = "0x3F30A0", VA = "0x1803F44A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public ZumaBall Pre
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x3F4220", Offset = "0x3F2E20", VA = "0x1803F4220")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x3F44B0", Offset = "0x3F30B0", VA = "0x1803F44B0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public int SegmentIndex
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x3F4230", Offset = "0x3F2E30", VA = "0x1803F4230")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000082")]
	public ZumaBall Tail
	{
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x3F4410", Offset = "0x3F3010", VA = "0x1803F4410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public ZumaBall Head
	{
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x3F4180", Offset = "0x3F2D80", VA = "0x1803F4180")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x3F3860", Offset = "0x3F2460", VA = "0x1803F3860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x3F3EB0", Offset = "0x3F2AB0", VA = "0x1803F3EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x3F3BB0", Offset = "0x3F27B0", VA = "0x1803F3BB0")]
	public int SameColorCount(out List<ZumaBall> list)
	{
		return default(int);
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x3F38B0", Offset = "0x3F24B0", VA = "0x1803F38B0")]
	private void CheckOutOfScreen()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x3F3960", Offset = "0x3F2560", VA = "0x1803F3960")]
	public void Die()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x3F3A10", Offset = "0x3F2610", VA = "0x1803F3A10")]
	public bool ISExitStartHole()
	{
		return default(bool);
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x3F3A20", Offset = "0x3F2620", VA = "0x1803F3A20")]
	public bool IsArriveFailHole()
	{
		return default(bool);
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x3F3A80", Offset = "0x3F2680", VA = "0x1803F3A80")]
	public bool IsCross(Vector3 targetPos, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ZumaBall()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZumaBtn
using Il2CppDummyDll;

[Token(Token = "0x200039A")]
public class ZumaBtn : UIBtn
{
	[Token(Token = "0x4000CA2")]
	[FieldOffset(Offset = "0x60")]
	public int btnType;

	[Token(Token = "0x4000CA3")]
	[FieldOffset(Offset = "0x64")]
	private bool trigger;

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x3F45C0", Offset = "0x3F31C0", VA = "0x1803F45C0", Slot = "7")]
	protected override void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x3F44C0", Offset = "0x3F30C0", VA = "0x1803F44C0", Slot = "5")]
	protected override void OnMouseEnter()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x3F4530", Offset = "0x3F3130", VA = "0x1803F4530", Slot = "6")]
	protected override void OnMouseExit()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x307370", Offset = "0x305F70", VA = "0x180307370")]
	public ZumaBtn()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZumaPrize
using Il2CppDummyDll;

[Token(Token = "0x200039B")]
public class ZumaPrize : PrizeMgr
{
	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x3F4D40", Offset = "0x3F3940", VA = "0x1803F4D40", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x3F47C0", Offset = "0x3F33C0", VA = "0x1803F47C0", Slot = "5")]
	protected override void Click()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x3F4C90", Offset = "0x3F3890", VA = "0x1803F4C90", Slot = "6")]
	public override void GoBack()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x3F4E50", Offset = "0x3F3A50", VA = "0x1803F4E50")]
	public ZumaPrize()
	{
	}
}

// Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// ZumaShooter
using System.Collections.Generic;
using Il2CppDummyDll;
using UnityEngine;

[Token(Token = "0x200039C")]
public class ZumaShooter : MonoBehaviour
{
	[Token(Token = "0x4000CA4")]
	[FieldOffset(Offset = "0x0")]
	public static ZumaShooter Instance;

	[Token(Token = "0x4000CA5")]
	[FieldOffset(Offset = "0x20")]
	public List<ZumaBall> shootBallList;

	[Token(Token = "0x4000CA6")]
	[FieldOffset(Offset = "0x28")]
	private ZumaBall currentBall;

	[Token(Token = "0x4000CA7")]
	[FieldOffset(Offset = "0x30")]
	private ZumaBall nextball;

	[Token(Token = "0x4000CA8")]
	[FieldOffset(Offset = "0x38")]
	public Transform cannonPos;

	[Token(Token = "0x4000CA9")]
	[FieldOffset(Offset = "0x40")]
	private Transform cannonPos2;

	[Token(Token = "0x4000CAA")]
	[FieldOffset(Offset = "0x48")]
	public bool freeMouse;

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x3F4F80", Offset = "0x3F3B80", VA = "0x1803F4F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x3F5500", Offset = "0x3F4100", VA = "0x1803F5500")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x3F5870", Offset = "0x3F4470", VA = "0x1803F5870")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x3F5060", Offset = "0x3F3C60", VA = "0x1803F5060")]
	private void Shoot(Vector2 direction, float speed)
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x3F4E60", Offset = "0x3F3A60", VA = "0x1803F4E60")]
	private void AddToList(ZumaBall ball)
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x3F5B20", Offset = "0x3F4720", VA = "0x1803F5B20")]
	public ZumaShooter()
	{
	}
}
